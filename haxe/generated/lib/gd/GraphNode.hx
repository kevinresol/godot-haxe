package gd;
extern class GraphNode extends gd.GraphElement {
	function new(?owner:Dynamic);
	function _draw_port(p_slot_index:Int, p_position:gd.Vector2i, p_left:Bool, p_color:gd.Color):Void;
	function set_title(p_title:std.String):std.String;
	function get_title():std.String;
	function get_titlebar_hbox():gd.HBoxContainer;
	function set_slot(p_slot_index:Int, p_enable_left_port:Bool, p_type_left:Int, p_color_left:gd.Color, p_enable_right_port:Bool, p_type_right:Int, p_color_right:gd.Color, ?p_custom_icon_left:gd.Texture2D, ?p_custom_icon_right:gd.Texture2D, ?p_draw_stylebox:Bool):Void;
	function clear_slot(p_slot_index:Int):Void;
	function clear_all_slots():Void;
	function is_slot_enabled_left(p_slot_index:Int):Bool;
	function set_slot_enabled_left(p_slot_index:Int, p_enable:Bool):Void;
	function set_slot_type_left(p_slot_index:Int, p_type:Int):Void;
	function get_slot_type_left(p_slot_index:Int):Int;
	function set_slot_color_left(p_slot_index:Int, p_color:gd.Color):Void;
	function get_slot_color_left(p_slot_index:Int):gd.Color;
	function set_slot_custom_icon_left(p_slot_index:Int, p_custom_icon:gd.Texture2D):Void;
	function get_slot_custom_icon_left(p_slot_index:Int):gd.Texture2D;
	function is_slot_enabled_right(p_slot_index:Int):Bool;
	function set_slot_enabled_right(p_slot_index:Int, p_enable:Bool):Void;
	function set_slot_type_right(p_slot_index:Int, p_type:Int):Void;
	function get_slot_type_right(p_slot_index:Int):Int;
	function set_slot_color_right(p_slot_index:Int, p_color:gd.Color):Void;
	function get_slot_color_right(p_slot_index:Int):gd.Color;
	function set_slot_custom_icon_right(p_slot_index:Int, p_custom_icon:gd.Texture2D):Void;
	function get_slot_custom_icon_right(p_slot_index:Int):gd.Texture2D;
	function is_slot_draw_stylebox(p_slot_index:Int):Bool;
	function set_slot_draw_stylebox(p_slot_index:Int, p_enable:Bool):Void;
	function set_ignore_invalid_connection_type(p_ignore:Bool):Bool;
	function is_ignoring_valid_connection_type():Bool;
	function get_input_port_count():Int;
	function get_input_port_position(p_port_idx:Int):gd.Vector2;
	function get_input_port_type(p_port_idx:Int):Int;
	function get_input_port_color(p_port_idx:Int):gd.Color;
	function get_input_port_slot(p_port_idx:Int):Int;
	function get_output_port_count():Int;
	function get_output_port_position(p_port_idx:Int):gd.Vector2;
	function get_output_port_type(p_port_idx:Int):Int;
	function get_output_port_color(p_port_idx:Int):gd.Color;
	function get_output_port_slot(p_port_idx:Int):Int;
	var title(get, set) : std.String;
	var ignore_invalid_connection_type(get, set) : Bool;
	function get_ignore_invalid_connection_type():Bool;
}