package gd;
extern class PhysicalBone3D extends gd.PhysicsBody3D {
	function new(?owner:Dynamic);
	function _integrate_forces(p_state:gd.PhysicsDirectBodyState3D):Void;
	function apply_central_impulse(p_impulse:gd.Vector3):Void;
	function apply_impulse(p_impulse:gd.Vector3, ?p_position:gd.Vector3):Void;
	function set_joint_type(p_joint_type:gd.physicalbone3d.JointType):gd.physicalbone3d.JointType;
	function get_joint_type():gd.physicalbone3d.JointType;
	function set_joint_rotation(p_euler:gd.Vector3):gd.Vector3;
	function get_joint_rotation():gd.Vector3;
	function get_simulate_physics():Bool;
	function is_simulating_physics():Bool;
	function get_bone_id():Int;
	function set_mass(p_mass:Float):Float;
	function get_mass():Float;
	function set_friction(p_friction:Float):Float;
	function get_friction():Float;
	function set_bounce(p_bounce:Float):Float;
	function get_bounce():Float;
	function set_gravity_scale(p_gravity_scale:Float):Float;
	function get_gravity_scale():Float;
	function set_linear_damp_mode(p_linear_damp_mode:gd.physicalbone3d.DampMode):gd.physicalbone3d.DampMode;
	function get_linear_damp_mode():gd.physicalbone3d.DampMode;
	function set_angular_damp_mode(p_angular_damp_mode:gd.physicalbone3d.DampMode):gd.physicalbone3d.DampMode;
	function get_angular_damp_mode():gd.physicalbone3d.DampMode;
	function set_linear_damp(p_linear_damp:Float):Float;
	function get_linear_damp():Float;
	function set_angular_damp(p_angular_damp:Float):Float;
	function get_angular_damp():Float;
	function set_linear_velocity(p_linear_velocity:gd.Vector3):gd.Vector3;
	function get_linear_velocity():gd.Vector3;
	function set_angular_velocity(p_angular_velocity:gd.Vector3):gd.Vector3;
	function get_angular_velocity():gd.Vector3;
	function set_use_custom_integrator(p_enable:Bool):Void;
	function is_using_custom_integrator():Bool;
	function set_can_sleep(p_able_to_sleep:Bool):Bool;
	function is_able_to_sleep():Bool;
	var joint_type(get, set) : gd.physicalbone3d.JointType;
	var joint_rotation(get, set) : gd.Vector3;
	var mass(get, set) : Float;
	var friction(get, set) : Float;
	var bounce(get, set) : Float;
	var gravity_scale(get, set) : Float;
	var custom_integrator(get, set) : Bool;
	function get_custom_integrator():Bool;
	function set_custom_integrator(v:Bool):Bool;
	var linear_damp_mode(get, set) : gd.physicalbone3d.DampMode;
	var linear_damp(get, set) : Float;
	var angular_damp_mode(get, set) : gd.physicalbone3d.DampMode;
	var angular_damp(get, set) : Float;
	var linear_velocity(get, set) : gd.Vector3;
	var angular_velocity(get, set) : gd.Vector3;
	var can_sleep(get, set) : Bool;
	function get_can_sleep():Bool;
}