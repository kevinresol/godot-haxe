package gd;
extern class NativeMenu extends gd.Object {
	function new(?owner:Dynamic);
	static final singleton : gd.NativeMenu;
	function has_feature(p_feature:gd.nativemenu.Feature):Bool;
	function has_system_menu(p_menu_id:gd.nativemenu.SystemMenus):Bool;
	function get_system_menu(p_menu_id:gd.nativemenu.SystemMenus):gd.RID;
	function get_system_menu_name(p_menu_id:gd.nativemenu.SystemMenus):std.String;
	function create_menu():gd.RID;
	function has_menu(p_rid:gd.RID):Bool;
	function free_menu(p_rid:gd.RID):Void;
	function get_size(p_rid:gd.RID):gd.Vector2;
	function popup(p_rid:gd.RID, p_position:gd.Vector2i):Void;
	function set_interface_direction(p_rid:gd.RID, p_is_rtl:Bool):Void;
	function set_popup_open_callback(p_rid:gd.RID, p_callback:gd.Callable):Void;
	function get_popup_open_callback(p_rid:gd.RID):gd.Callable;
	function set_popup_close_callback(p_rid:gd.RID, p_callback:gd.Callable):Void;
	function get_popup_close_callback(p_rid:gd.RID):gd.Callable;
	function set_minimum_width(p_rid:gd.RID, p_width:Float):Void;
	function get_minimum_width(p_rid:gd.RID):Float;
	function is_opened(p_rid:gd.RID):Bool;
	function add_separator(p_rid:gd.RID, ?p_index:Int = -1):Int;
	function find_item_index_with_text(p_rid:gd.RID, p_text:std.String):Int;
	function find_item_index_with_tag(p_rid:gd.RID, p_tag:gd.Variant):Int;
	function find_item_index_with_submenu(p_rid:gd.RID, p_submenu_rid:gd.RID):Int;
	function is_item_checked(p_rid:gd.RID, p_idx:Int):Bool;
	function is_item_checkable(p_rid:gd.RID, p_idx:Int):Bool;
	function is_item_radio_checkable(p_rid:gd.RID, p_idx:Int):Bool;
	function get_item_callback(p_rid:gd.RID, p_idx:Int):gd.Callable;
	function get_item_key_callback(p_rid:gd.RID, p_idx:Int):gd.Callable;
	function get_item_tag(p_rid:gd.RID, p_idx:Int):gd.Variant;
	function get_item_text(p_rid:gd.RID, p_idx:Int):std.String;
	function get_item_submenu(p_rid:gd.RID, p_idx:Int):gd.RID;
	function get_item_accelerator(p_rid:gd.RID, p_idx:Int):gd.Key;
	function is_item_disabled(p_rid:gd.RID, p_idx:Int):Bool;
	function is_item_hidden(p_rid:gd.RID, p_idx:Int):Bool;
	function get_item_tooltip(p_rid:gd.RID, p_idx:Int):std.String;
	function get_item_state(p_rid:gd.RID, p_idx:Int):Int;
	function get_item_max_states(p_rid:gd.RID, p_idx:Int):Int;
	function get_item_icon(p_rid:gd.RID, p_idx:Int):gd.Texture2D;
	function get_item_indentation_level(p_rid:gd.RID, p_idx:Int):Int;
	function set_item_checked(p_rid:gd.RID, p_idx:Int, p_checked:Bool):Void;
	function set_item_checkable(p_rid:gd.RID, p_idx:Int, p_checkable:Bool):Void;
	function set_item_radio_checkable(p_rid:gd.RID, p_idx:Int, p_checkable:Bool):Void;
	function set_item_callback(p_rid:gd.RID, p_idx:Int, p_callback:gd.Callable):Void;
	function set_item_hover_callbacks(p_rid:gd.RID, p_idx:Int, p_callback:gd.Callable):Void;
	function set_item_key_callback(p_rid:gd.RID, p_idx:Int, p_key_callback:gd.Callable):Void;
	function set_item_tag(p_rid:gd.RID, p_idx:Int, p_tag:gd.Variant):Void;
	function set_item_text(p_rid:gd.RID, p_idx:Int, p_text:std.String):Void;
	function set_item_submenu(p_rid:gd.RID, p_idx:Int, p_submenu_rid:gd.RID):Void;
	function set_item_accelerator(p_rid:gd.RID, p_idx:Int, p_keycode:gd.Key):Void;
	function set_item_disabled(p_rid:gd.RID, p_idx:Int, p_disabled:Bool):Void;
	function set_item_hidden(p_rid:gd.RID, p_idx:Int, p_hidden:Bool):Void;
	function set_item_tooltip(p_rid:gd.RID, p_idx:Int, p_tooltip:std.String):Void;
	function set_item_state(p_rid:gd.RID, p_idx:Int, p_state:Int):Void;
	function set_item_max_states(p_rid:gd.RID, p_idx:Int, p_max_states:Int):Void;
	function set_item_icon(p_rid:gd.RID, p_idx:Int, p_icon:gd.Texture2D):Void;
	function set_item_indentation_level(p_rid:gd.RID, p_idx:Int, p_level:Int):Void;
	function get_item_count(p_rid:gd.RID):Int;
	function is_system_menu(p_rid:gd.RID):Bool;
	function remove_item(p_rid:gd.RID, p_idx:Int):Void;
	function clear(p_rid:gd.RID):Void;
}