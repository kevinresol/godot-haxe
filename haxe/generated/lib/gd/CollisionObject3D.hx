package gd;
extern class CollisionObject3D extends gd.Node3D {
	function new(?owner:Dynamic);
	function _input_event(p_camera:gd.Camera3D, p_event:gd.InputEvent, p_event_position:gd.Vector3, p_normal:gd.Vector3, p_shape_idx:Int):Void;
	function _mouse_enter():Void;
	function _mouse_exit():Void;
	function set_collision_layer(p_layer:Int):Int;
	function get_collision_layer():Int;
	function set_collision_mask(p_mask:Int):Int;
	function get_collision_mask():Int;
	function set_collision_layer_value(p_layer_number:Int, p_value:Bool):Void;
	function get_collision_layer_value(p_layer_number:Int):Bool;
	function set_collision_mask_value(p_layer_number:Int, p_value:Bool):Void;
	function get_collision_mask_value(p_layer_number:Int):Bool;
	function set_collision_priority(p_priority:Float):Float;
	function get_collision_priority():Float;
	function set_disable_mode(p_mode:gd.collisionobject3d.DisableMode):gd.collisionobject3d.DisableMode;
	function get_disable_mode():gd.collisionobject3d.DisableMode;
	function set_ray_pickable(p_ray_pickable:Bool):Void;
	function is_ray_pickable():Bool;
	function set_capture_input_on_drag(p_enable:Bool):Void;
	function get_capture_input_on_drag():Bool;
	function get_rid():gd.RID;
	function create_shape_owner(p_owner:gd.Object):Int;
	function remove_shape_owner(p_owner_id:Int):Void;
	function get_shape_owners():gd.PackedInt32Array;
	function shape_owner_get_owner(p_owner_id:Int):gd.Object;
	function shape_owner_set_disabled(p_owner_id:Int, p_disabled:Bool):Void;
	function is_shape_owner_disabled(p_owner_id:Int):Bool;
	function shape_owner_add_shape(p_owner_id:Int, p_shape:gd.Shape3D):Void;
	function shape_owner_get_shape_count(p_owner_id:Int):Int;
	function shape_owner_get_shape(p_owner_id:Int, p_shape_id:Int):gd.Shape3D;
	function shape_owner_get_shape_index(p_owner_id:Int, p_shape_id:Int):Int;
	function shape_owner_remove_shape(p_owner_id:Int, p_shape_id:Int):Void;
	function shape_owner_clear_shapes(p_owner_id:Int):Void;
	function shape_find_owner(p_shape_index:Int):Int;
	var disable_mode(get, set) : gd.collisionobject3d.DisableMode;
	var collision_layer(get, set) : Int;
	var collision_mask(get, set) : Int;
	var collision_priority(get, set) : Float;
	var input_ray_pickable(get, set) : Bool;
	function get_input_ray_pickable():Bool;
	function set_input_ray_pickable(v:Bool):Bool;
	var input_capture_on_drag(get, set) : Bool;
	function get_input_capture_on_drag():Bool;
	function set_input_capture_on_drag(v:Bool):Bool;
}