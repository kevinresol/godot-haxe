package gd;
extern class FastNoiseLite extends gd.Noise {
	function new(?owner:Dynamic);
	function set_noise_type(p_type:gd.fastnoiselite.NoiseType):gd.fastnoiselite.NoiseType;
	function get_noise_type():gd.fastnoiselite.NoiseType;
	function set_seed(p_seed:Int):Int;
	function get_seed():Int;
	function set_frequency(p_freq:Float):Float;
	function get_frequency():Float;
	function set_offset(p_offset:gd.Vector3):gd.Vector3;
	function get_offset():gd.Vector3;
	function set_fractal_type(p_type:gd.fastnoiselite.FractalType):gd.fastnoiselite.FractalType;
	function get_fractal_type():gd.fastnoiselite.FractalType;
	function set_fractal_octaves(p_octave_count:Int):Int;
	function get_fractal_octaves():Int;
	function set_fractal_lacunarity(p_lacunarity:Float):Float;
	function get_fractal_lacunarity():Float;
	function set_fractal_gain(p_gain:Float):Float;
	function get_fractal_gain():Float;
	function set_fractal_weighted_strength(p_weighted_strength:Float):Float;
	function get_fractal_weighted_strength():Float;
	function set_fractal_ping_pong_strength(p_ping_pong_strength:Float):Float;
	function get_fractal_ping_pong_strength():Float;
	function set_cellular_distance_function(p_func:gd.fastnoiselite.CellularDistanceFunction):gd.fastnoiselite.CellularDistanceFunction;
	function get_cellular_distance_function():gd.fastnoiselite.CellularDistanceFunction;
	function set_cellular_jitter(p_jitter:Float):Float;
	function get_cellular_jitter():Float;
	function set_cellular_return_type(p_ret:gd.fastnoiselite.CellularReturnType):gd.fastnoiselite.CellularReturnType;
	function get_cellular_return_type():gd.fastnoiselite.CellularReturnType;
	function set_domain_warp_enabled(p_domain_warp_enabled:Bool):Bool;
	function is_domain_warp_enabled():Bool;
	function set_domain_warp_type(p_domain_warp_type:gd.fastnoiselite.DomainWarpType):gd.fastnoiselite.DomainWarpType;
	function get_domain_warp_type():gd.fastnoiselite.DomainWarpType;
	function set_domain_warp_amplitude(p_domain_warp_amplitude:Float):Float;
	function get_domain_warp_amplitude():Float;
	function set_domain_warp_frequency(p_domain_warp_frequency:Float):Float;
	function get_domain_warp_frequency():Float;
	function set_domain_warp_fractal_type(p_domain_warp_fractal_type:gd.fastnoiselite.DomainWarpFractalType):gd.fastnoiselite.DomainWarpFractalType;
	function get_domain_warp_fractal_type():gd.fastnoiselite.DomainWarpFractalType;
	function set_domain_warp_fractal_octaves(p_domain_warp_octave_count:Int):Int;
	function get_domain_warp_fractal_octaves():Int;
	function set_domain_warp_fractal_lacunarity(p_domain_warp_lacunarity:Float):Float;
	function get_domain_warp_fractal_lacunarity():Float;
	function set_domain_warp_fractal_gain(p_domain_warp_gain:Float):Float;
	function get_domain_warp_fractal_gain():Float;
	var noise_type(get, set) : gd.fastnoiselite.NoiseType;
	var seed(get, set) : Int;
	var frequency(get, set) : Float;
	var offset(get, set) : gd.Vector3;
	var fractal_type(get, set) : gd.fastnoiselite.FractalType;
	var fractal_octaves(get, set) : Int;
	var fractal_lacunarity(get, set) : Float;
	var fractal_gain(get, set) : Float;
	var fractal_weighted_strength(get, set) : Float;
	var fractal_ping_pong_strength(get, set) : Float;
	var cellular_distance_function(get, set) : gd.fastnoiselite.CellularDistanceFunction;
	var cellular_jitter(get, set) : Float;
	var cellular_return_type(get, set) : gd.fastnoiselite.CellularReturnType;
	var domain_warp_enabled(get, set) : Bool;
	function get_domain_warp_enabled():Bool;
	var domain_warp_type(get, set) : gd.fastnoiselite.DomainWarpType;
	var domain_warp_amplitude(get, set) : Float;
	var domain_warp_frequency(get, set) : Float;
	var domain_warp_fractal_type(get, set) : gd.fastnoiselite.DomainWarpFractalType;
	var domain_warp_fractal_octaves(get, set) : Int;
	var domain_warp_fractal_lacunarity(get, set) : Float;
	var domain_warp_fractal_gain(get, set) : Float;
}