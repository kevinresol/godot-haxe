package gd;
extern class AStarGrid2D extends gd.RefCounted {
	function new(?owner:Dynamic);
	function _estimate_cost(p_from_id:gd.Vector2i, p_to_id:gd.Vector2i):Float;
	function _compute_cost(p_from_id:gd.Vector2i, p_to_id:gd.Vector2i):Float;
	function set_region(p_region:gd.Rect2i):gd.Rect2i;
	function get_region():gd.Rect2i;
	function set_size(p_size:gd.Vector2i):gd.Vector2i;
	function get_size():gd.Vector2i;
	function set_offset(p_offset:gd.Vector2):gd.Vector2;
	function get_offset():gd.Vector2;
	function set_cell_size(p_cell_size:gd.Vector2):gd.Vector2;
	function get_cell_size():gd.Vector2;
	function set_cell_shape(p_cell_shape:gd.astargrid2d.CellShape):gd.astargrid2d.CellShape;
	function get_cell_shape():gd.astargrid2d.CellShape;
	function is_in_bounds(p_x:Int, p_y:Int):Bool;
	function is_in_boundsv(p_id:gd.Vector2i):Bool;
	function is_dirty():Bool;
	function update():Void;
	function set_jumping_enabled(p_enabled:Bool):Bool;
	function is_jumping_enabled():Bool;
	function set_diagonal_mode(p_mode:gd.astargrid2d.DiagonalMode):gd.astargrid2d.DiagonalMode;
	function get_diagonal_mode():gd.astargrid2d.DiagonalMode;
	function set_default_compute_heuristic(p_heuristic:gd.astargrid2d.Heuristic):gd.astargrid2d.Heuristic;
	function get_default_compute_heuristic():gd.astargrid2d.Heuristic;
	function set_default_estimate_heuristic(p_heuristic:gd.astargrid2d.Heuristic):gd.astargrid2d.Heuristic;
	function get_default_estimate_heuristic():gd.astargrid2d.Heuristic;
	function set_point_solid(p_id:gd.Vector2i, ?p_solid:Bool = true):Void;
	function is_point_solid(p_id:gd.Vector2i):Bool;
	function set_point_weight_scale(p_id:gd.Vector2i, p_weight_scale:Float):Void;
	function get_point_weight_scale(p_id:gd.Vector2i):Float;
	function fill_solid_region(p_region:gd.Rect2i, ?p_solid:Bool = true):Void;
	function fill_weight_scale_region(p_region:gd.Rect2i, p_weight_scale:Float):Void;
	function clear():Void;
	function get_point_position(p_id:gd.Vector2i):gd.Vector2;
	function get_point_path(p_from_id:gd.Vector2i, p_to_id:gd.Vector2i, ?p_allow_partial_path:Bool = false):gd.PackedVector2Array;
	var region(get, set) : gd.Rect2i;
	var size(get, set) : gd.Vector2i;
	var offset(get, set) : gd.Vector2;
	var cell_size(get, set) : gd.Vector2;
	var cell_shape(get, set) : gd.astargrid2d.CellShape;
	var jumping_enabled(get, set) : Bool;
	function get_jumping_enabled():Bool;
	var default_compute_heuristic(get, set) : gd.astargrid2d.Heuristic;
	var default_estimate_heuristic(get, set) : gd.astargrid2d.Heuristic;
	var diagonal_mode(get, set) : gd.astargrid2d.DiagonalMode;
}