package gd;
extern class TextLine extends gd.RefCounted {
	function new(?owner:Dynamic);
	function clear():Void;
	function set_direction(p_direction:gd.textserver.Direction):gd.textserver.Direction;
	function get_direction():gd.textserver.Direction;
	function set_orientation(p_orientation:gd.textserver.Orientation):gd.textserver.Orientation;
	function get_orientation():gd.textserver.Orientation;
	function set_preserve_invalid(p_enabled:Bool):Bool;
	function get_preserve_invalid():Bool;
	function set_preserve_control(p_enabled:Bool):Bool;
	function get_preserve_control():Bool;
	function set_bidi_override(p_override:gd.Array):Void;
	function set_width(p_width:Float):Float;
	function get_width():Float;
	function set_horizontal_alignment(p_alignment:gd.HorizontalAlignment):Void;
	function get_horizontal_alignment():gd.HorizontalAlignment;
	function tab_align(p_tab_stops:gd.PackedFloat32Array):Void;
	function set_flags(p_flags:Int):Int;
	function get_flags():Int;
	function set_text_overrun_behavior(p_overrun_behavior:gd.textserver.OverrunBehavior):gd.textserver.OverrunBehavior;
	function get_text_overrun_behavior():gd.textserver.OverrunBehavior;
	function set_ellipsis_char(p_char:std.String):std.String;
	function get_ellipsis_char():std.String;
	function get_objects():gd.Array;
	function get_object_rect(p_key:gd.Variant):gd.Rect2;
	function get_size():gd.Vector2;
	function get_rid():gd.RID;
	function get_line_ascent():Float;
	function get_line_descent():Float;
	function get_line_width():Float;
	function get_line_underline_position():Float;
	function get_line_underline_thickness():Float;
	function hit_test(p_coords:Float):Int;
	var direction(get, set) : gd.textserver.Direction;
	var orientation(get, set) : gd.textserver.Orientation;
	var preserve_invalid(get, set) : Bool;
	var preserve_control(get, set) : Bool;
	var width(get, set) : Float;
	var alignment(get, set) : gd.HorizontalAlignment;
	function get_alignment():gd.HorizontalAlignment;
	function set_alignment(v:gd.HorizontalAlignment):gd.HorizontalAlignment;
	var flags(get, set) : Int;
	var text_overrun_behavior(get, set) : gd.textserver.OverrunBehavior;
	var ellipsis_char(get, set) : std.String;
}