package gd;
extern class XRInterface extends gd.RefCounted {
	function new(?owner:Dynamic);
	function get_name():std.String;
	function get_capabilities():Int;
	function is_primary():Bool;
	function set_primary(p_primary:Bool):Void;
	function is_initialized():Bool;
	function initialize():Bool;
	function uninitialize():Void;
	function get_system_info():gd.Dictionary;
	function get_tracking_status():gd.xrinterface.TrackingStatus;
	function get_render_target_size():gd.Vector2;
	function get_view_count():Int;
	function trigger_haptic_pulse(p_action_name:std.String, p_tracker_name:std.String, p_frequency:Float, p_amplitude:Float, p_duration_sec:Float, p_delay_sec:Float):Void;
	function supports_play_area_mode(p_mode:gd.xrinterface.PlayAreaMode):Bool;
	function get_play_area_mode():gd.xrinterface.PlayAreaMode;
	function set_play_area_mode(p_mode:gd.xrinterface.PlayAreaMode):Bool;
	function get_play_area():gd.PackedVector3Array;
	function get_anchor_detection_is_enabled():Bool;
	function set_anchor_detection_is_enabled(p_enable:Bool):Void;
	function get_camera_feed_id():Int;
	function is_passthrough_supported():Bool;
	function is_passthrough_enabled():Bool;
	function start_passthrough():Bool;
	function stop_passthrough():Void;
	function get_supported_environment_blend_modes():gd.Array;
	function set_environment_blend_mode(p_mode:gd.xrinterface.EnvironmentBlendMode):Bool;
	function get_environment_blend_mode():gd.xrinterface.EnvironmentBlendMode;
	var interface_is_primary(get, set) : Bool;
	function get_interface_is_primary():Bool;
	function set_interface_is_primary(v:Bool):Bool;
	var xr_play_area_mode(get, set) : gd.xrinterface.PlayAreaMode;
	function get_xr_play_area_mode():gd.xrinterface.PlayAreaMode;
	function set_xr_play_area_mode(v:gd.xrinterface.PlayAreaMode):gd.xrinterface.PlayAreaMode;
	var ar_is_anchor_detection_enabled(get, set) : Bool;
	function get_ar_is_anchor_detection_enabled():Bool;
	function set_ar_is_anchor_detection_enabled(v:Bool):Bool;
}