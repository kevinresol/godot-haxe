package gd;
extern class Curve extends gd.Resource {
	function new(?owner:Dynamic);
	function get_point_count():Int;
	function set_point_count(p_count:Int):Int;
	function add_point(p_position:gd.Vector2, ?p_left_tangent:Float, ?p_right_tangent:Float, ?p_left_mode:gd.curve.TangentMode, ?p_right_mode:gd.curve.TangentMode):Int;
	function remove_point(p_index:Int):Void;
	function clear_points():Void;
	function get_point_position(p_index:Int):gd.Vector2;
	function set_point_value(p_index:Int, p_y:Float):Void;
	function set_point_offset(p_index:Int, p_offset:Float):Int;
	function sample(p_offset:Float):Float;
	function sample_baked(p_offset:Float):Float;
	function get_point_left_tangent(p_index:Int):Float;
	function get_point_right_tangent(p_index:Int):Float;
	function get_point_left_mode(p_index:Int):gd.curve.TangentMode;
	function get_point_right_mode(p_index:Int):gd.curve.TangentMode;
	function set_point_left_tangent(p_index:Int, p_tangent:Float):Void;
	function set_point_right_tangent(p_index:Int, p_tangent:Float):Void;
	function set_point_left_mode(p_index:Int, p_mode:gd.curve.TangentMode):Void;
	function set_point_right_mode(p_index:Int, p_mode:gd.curve.TangentMode):Void;
	function get_min_value():Float;
	function set_min_value(p_min:Float):Float;
	function get_max_value():Float;
	function set_max_value(p_max:Float):Float;
	function clean_dupes():Void;
	function bake():Void;
	function get_bake_resolution():Int;
	function set_bake_resolution(p_resolution:Int):Int;
	var min_value(get, set) : Float;
	var max_value(get, set) : Float;
	var bake_resolution(get, set) : Int;
	var point_count(get, set) : Int;
}