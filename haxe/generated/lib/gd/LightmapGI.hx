package gd;
extern class LightmapGI extends gd.VisualInstance3D {
	function new(?owner:Dynamic);
	function set_light_data(p_data:gd.LightmapGIData):gd.LightmapGIData;
	function get_light_data():gd.LightmapGIData;
	function set_bake_quality(p_bake_quality:gd.lightmapgi.BakeQuality):Void;
	function get_bake_quality():gd.lightmapgi.BakeQuality;
	function set_bounces(p_bounces:Int):Int;
	function get_bounces():Int;
	function set_bounce_indirect_energy(p_bounce_indirect_energy:Float):Float;
	function get_bounce_indirect_energy():Float;
	function set_generate_probes(p_subdivision:gd.lightmapgi.GenerateProbes):Void;
	function get_generate_probes():gd.lightmapgi.GenerateProbes;
	function set_bias(p_bias:Float):Float;
	function get_bias():Float;
	function set_environment_mode(p_mode:gd.lightmapgi.EnvironmentMode):gd.lightmapgi.EnvironmentMode;
	function get_environment_mode():gd.lightmapgi.EnvironmentMode;
	function set_environment_custom_sky(p_sky:gd.Sky):gd.Sky;
	function get_environment_custom_sky():gd.Sky;
	function set_environment_custom_color(p_color:gd.Color):gd.Color;
	function get_environment_custom_color():gd.Color;
	function set_environment_custom_energy(p_energy:Float):Float;
	function get_environment_custom_energy():Float;
	function set_texel_scale(p_texel_scale:Float):Float;
	function get_texel_scale():Float;
	function set_max_texture_size(p_max_texture_size:Int):Int;
	function get_max_texture_size():Int;
	function set_use_denoiser(p_use_denoiser:Bool):Bool;
	function is_using_denoiser():Bool;
	function set_denoiser_strength(p_denoiser_strength:Float):Float;
	function get_denoiser_strength():Float;
	function set_denoiser_range(p_denoiser_range:Int):Int;
	function get_denoiser_range():Int;
	function set_interior(p_enable:Bool):Bool;
	function is_interior():Bool;
	function set_directional(p_directional:Bool):Bool;
	function is_directional():Bool;
	function set_use_texture_for_bounces(p_use_texture_for_bounces:Bool):Bool;
	function is_using_texture_for_bounces():Bool;
	function set_camera_attributes(p_camera_attributes:gd.CameraAttributes):gd.CameraAttributes;
	function get_camera_attributes():gd.CameraAttributes;
	var quality(get, set) : gd.lightmapgi.BakeQuality;
	function get_quality():gd.lightmapgi.BakeQuality;
	function set_quality(v:gd.lightmapgi.BakeQuality):gd.lightmapgi.BakeQuality;
	var bounces(get, set) : Int;
	var bounce_indirect_energy(get, set) : Float;
	var directional(get, set) : Bool;
	function get_directional():Bool;
	var use_texture_for_bounces(get, set) : Bool;
	function get_use_texture_for_bounces():Bool;
	var interior(get, set) : Bool;
	function get_interior():Bool;
	var use_denoiser(get, set) : Bool;
	function get_use_denoiser():Bool;
	var denoiser_strength(get, set) : Float;
	var denoiser_range(get, set) : Int;
	var bias(get, set) : Float;
	var texel_scale(get, set) : Float;
	var max_texture_size(get, set) : Int;
	var environment_mode(get, set) : gd.lightmapgi.EnvironmentMode;
	var environment_custom_sky(get, set) : gd.Sky;
	var environment_custom_color(get, set) : gd.Color;
	var environment_custom_energy(get, set) : Float;
	var camera_attributes(get, set) : gd.CameraAttributes;
	var generate_probes_subdiv(get, set) : gd.lightmapgi.GenerateProbes;
	function get_generate_probes_subdiv():gd.lightmapgi.GenerateProbes;
	function set_generate_probes_subdiv(v:gd.lightmapgi.GenerateProbes):gd.lightmapgi.GenerateProbes;
	var light_data(get, set) : gd.LightmapGIData;
}