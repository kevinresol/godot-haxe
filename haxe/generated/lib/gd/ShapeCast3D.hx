package gd;
extern class ShapeCast3D extends gd.Node3D {
	function new(?owner:Dynamic);
	function resource_changed(p_resource:gd.Resource):Void;
	function set_enabled(p_enabled:Bool):Bool;
	function is_enabled():Bool;
	function set_shape(p_shape:gd.Shape3D):gd.Shape3D;
	function get_shape():gd.Shape3D;
	function set_target_position(p_local_point:gd.Vector3):gd.Vector3;
	function get_target_position():gd.Vector3;
	function set_margin(p_margin:Float):Float;
	function get_margin():Float;
	function set_max_results(p_max_results:Int):Int;
	function get_max_results():Int;
	function is_colliding():Bool;
	function get_collision_count():Int;
	function force_shapecast_update():Void;
	function get_collider(p_index:Int):gd.Object;
	function get_collider_rid(p_index:Int):gd.RID;
	function get_collider_shape(p_index:Int):Int;
	function get_collision_point(p_index:Int):gd.Vector3;
	function get_collision_normal(p_index:Int):gd.Vector3;
	function get_closest_collision_safe_fraction():Float;
	function get_closest_collision_unsafe_fraction():Float;
	function add_exception_rid(p_rid:gd.RID):Void;
	function add_exception(p_node:gd.CollisionObject3D):Void;
	function remove_exception_rid(p_rid:gd.RID):Void;
	function remove_exception(p_node:gd.CollisionObject3D):Void;
	function clear_exceptions():Void;
	function set_collision_mask(p_mask:Int):Int;
	function get_collision_mask():Int;
	function set_collision_mask_value(p_layer_number:Int, p_value:Bool):Void;
	function get_collision_mask_value(p_layer_number:Int):Bool;
	function set_exclude_parent_body(p_mask:Bool):Void;
	function get_exclude_parent_body():Bool;
	function set_collide_with_areas(p_enable:Bool):Bool;
	function is_collide_with_areas_enabled():Bool;
	function set_collide_with_bodies(p_enable:Bool):Bool;
	function is_collide_with_bodies_enabled():Bool;
	function set_debug_shape_custom_color(p_debug_shape_custom_color:gd.Color):gd.Color;
	function get_debug_shape_custom_color():gd.Color;
	var enabled(get, set) : Bool;
	function get_enabled():Bool;
	var shape(get, set) : gd.Shape3D;
	var exclude_parent(get, set) : Bool;
	function get_exclude_parent():Bool;
	function set_exclude_parent(v:Bool):Bool;
	var target_position(get, set) : gd.Vector3;
	var margin(get, set) : Float;
	var max_results(get, set) : Int;
	var collision_mask(get, set) : Int;
	var collide_with_areas(get, set) : Bool;
	function get_collide_with_areas():Bool;
	var collide_with_bodies(get, set) : Bool;
	function get_collide_with_bodies():Bool;
	var debug_shape_custom_color(get, set) : gd.Color;
}