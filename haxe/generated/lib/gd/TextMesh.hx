package gd;
extern class TextMesh extends gd.PrimitiveMesh {
	function new(?owner:Dynamic);
	function set_horizontal_alignment(p_alignment:gd.HorizontalAlignment):gd.HorizontalAlignment;
	function get_horizontal_alignment():gd.HorizontalAlignment;
	function set_vertical_alignment(p_alignment:gd.VerticalAlignment):gd.VerticalAlignment;
	function get_vertical_alignment():gd.VerticalAlignment;
	function set_text(p_text:std.String):std.String;
	function get_text():std.String;
	function set_font(p_font:gd.Font):gd.Font;
	function get_font():gd.Font;
	function set_font_size(p_font_size:Int):Int;
	function get_font_size():Int;
	function set_line_spacing(p_line_spacing:Float):Float;
	function get_line_spacing():Float;
	function set_autowrap_mode(p_autowrap_mode:gd.textserver.AutowrapMode):gd.textserver.AutowrapMode;
	function get_autowrap_mode():gd.textserver.AutowrapMode;
	function set_justification_flags(p_justification_flags:Int):Int;
	function get_justification_flags():Int;
	function set_depth(p_depth:Float):Float;
	function get_depth():Float;
	function set_width(p_width:Float):Float;
	function get_width():Float;
	function set_pixel_size(p_pixel_size:Float):Float;
	function get_pixel_size():Float;
	function set_offset(p_offset:gd.Vector2):gd.Vector2;
	function get_offset():gd.Vector2;
	function set_curve_step(p_curve_step:Float):Float;
	function get_curve_step():Float;
	function set_text_direction(p_direction:gd.textserver.Direction):gd.textserver.Direction;
	function get_text_direction():gd.textserver.Direction;
	function set_language(p_language:std.String):std.String;
	function get_language():std.String;
	function set_structured_text_bidi_override(p_parser:gd.textserver.StructuredTextParser):gd.textserver.StructuredTextParser;
	function get_structured_text_bidi_override():gd.textserver.StructuredTextParser;
	function set_structured_text_bidi_override_options(p_args:gd.Array):gd.Array;
	function get_structured_text_bidi_override_options():gd.Array;
	function set_uppercase(p_enable:Bool):Bool;
	function is_uppercase():Bool;
	var text(get, set) : std.String;
	var font(get, set) : gd.Font;
	var font_size(get, set) : Int;
	var horizontal_alignment(get, set) : gd.HorizontalAlignment;
	var vertical_alignment(get, set) : gd.VerticalAlignment;
	var uppercase(get, set) : Bool;
	function get_uppercase():Bool;
	var line_spacing(get, set) : Float;
	var autowrap_mode(get, set) : gd.textserver.AutowrapMode;
	var justification_flags(get, set) : Int;
	var pixel_size(get, set) : Float;
	var curve_step(get, set) : Float;
	var depth(get, set) : Float;
	var width(get, set) : Float;
	var offset(get, set) : gd.Vector2;
	var text_direction(get, set) : gd.textserver.Direction;
	var language(get, set) : std.String;
	var structured_text_bidi_override(get, set) : gd.textserver.StructuredTextParser;
	var structured_text_bidi_override_options(get, set) : gd.Array;
}