package gd;
extern class NavigationPolygon extends gd.Resource {
	function new(?owner:Dynamic);
	function set_vertices(p_vertices:gd.PackedVector2Array):gd.PackedVector2Array;
	function get_vertices():gd.PackedVector2Array;
	function add_polygon(p_polygon:gd.PackedInt32Array):Void;
	function get_polygon_count():Int;
	function get_polygon(p_idx:Int):gd.PackedInt32Array;
	function clear_polygons():Void;
	function get_navigation_mesh():gd.NavigationMesh;
	function add_outline(p_outline:gd.PackedVector2Array):Void;
	function add_outline_at_index(p_outline:gd.PackedVector2Array, p_index:Int):Void;
	function get_outline_count():Int;
	function set_outline(p_idx:Int, p_outline:gd.PackedVector2Array):Void;
	function get_outline(p_idx:Int):gd.PackedVector2Array;
	function remove_outline(p_idx:Int):Void;
	function clear_outlines():Void;
	function make_polygons_from_outlines():Void;
	function set_cell_size(p_cell_size:Float):Float;
	function get_cell_size():Float;
	function set_border_size(p_border_size:Float):Float;
	function get_border_size():Float;
	function set_parsed_geometry_type(p_geometry_type:gd.navigationpolygon.ParsedGeometryType):gd.navigationpolygon.ParsedGeometryType;
	function get_parsed_geometry_type():gd.navigationpolygon.ParsedGeometryType;
	function set_parsed_collision_mask(p_mask:Int):Int;
	function get_parsed_collision_mask():Int;
	function set_parsed_collision_mask_value(p_layer_number:Int, p_value:Bool):Void;
	function get_parsed_collision_mask_value(p_layer_number:Int):Bool;
	function set_source_geometry_mode(p_geometry_mode:gd.navigationpolygon.SourceGeometryMode):gd.navigationpolygon.SourceGeometryMode;
	function get_source_geometry_mode():gd.navigationpolygon.SourceGeometryMode;
	function set_source_geometry_group_name(p_group_name:std.String):std.String;
	function get_source_geometry_group_name():std.String;
	function set_agent_radius(p_agent_radius:Float):Float;
	function get_agent_radius():Float;
	function set_baking_rect(p_rect:gd.Rect2):gd.Rect2;
	function get_baking_rect():gd.Rect2;
	function set_baking_rect_offset(p_rect_offset:gd.Vector2):gd.Vector2;
	function get_baking_rect_offset():gd.Vector2;
	function clear():Void;
	var vertices(get, set) : gd.PackedVector2Array;
	var parsed_geometry_type(get, set) : gd.navigationpolygon.ParsedGeometryType;
	var parsed_collision_mask(get, set) : Int;
	var source_geometry_mode(get, set) : gd.navigationpolygon.SourceGeometryMode;
	var source_geometry_group_name(get, set) : std.String;
	var cell_size(get, set) : Float;
	var border_size(get, set) : Float;
	var agent_radius(get, set) : Float;
	var baking_rect(get, set) : gd.Rect2;
	var baking_rect_offset(get, set) : gd.Vector2;
}