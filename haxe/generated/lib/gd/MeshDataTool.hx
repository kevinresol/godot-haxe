package gd;
extern class MeshDataTool extends gd.RefCounted {
	function new(?owner:Dynamic);
	function clear():Void;
	function create_from_surface(p_mesh:gd.ArrayMesh, p_surface:Int):gd.Error;
	function commit_to_surface(p_mesh:gd.ArrayMesh, ?p_compression_flags:Int = 0):gd.Error;
	function get_format():Int;
	function get_vertex_count():Int;
	function get_edge_count():Int;
	function get_face_count():Int;
	function set_vertex(p_idx:Int, p_vertex:gd.Vector3):Void;
	function get_vertex(p_idx:Int):gd.Vector3;
	function set_vertex_normal(p_idx:Int, p_normal:gd.Vector3):Void;
	function get_vertex_normal(p_idx:Int):gd.Vector3;
	function set_vertex_tangent(p_idx:Int, p_tangent:gd.Plane):Void;
	function get_vertex_tangent(p_idx:Int):gd.Plane;
	function set_vertex_uv(p_idx:Int, p_uv:gd.Vector2):Void;
	function get_vertex_uv(p_idx:Int):gd.Vector2;
	function set_vertex_uv2(p_idx:Int, p_uv2:gd.Vector2):Void;
	function get_vertex_uv2(p_idx:Int):gd.Vector2;
	function set_vertex_color(p_idx:Int, p_color:gd.Color):Void;
	function get_vertex_color(p_idx:Int):gd.Color;
	function set_vertex_bones(p_idx:Int, p_bones:gd.PackedInt32Array):Void;
	function get_vertex_bones(p_idx:Int):gd.PackedInt32Array;
	function set_vertex_weights(p_idx:Int, p_weights:gd.PackedFloat32Array):Void;
	function get_vertex_weights(p_idx:Int):gd.PackedFloat32Array;
	function set_vertex_meta(p_idx:Int, p_meta:gd.Variant):Void;
	function get_vertex_meta(p_idx:Int):gd.Variant;
	function get_vertex_edges(p_idx:Int):gd.PackedInt32Array;
	function get_vertex_faces(p_idx:Int):gd.PackedInt32Array;
	function get_edge_vertex(p_idx:Int, p_vertex:Int):Int;
	function get_edge_faces(p_idx:Int):gd.PackedInt32Array;
	function set_edge_meta(p_idx:Int, p_meta:gd.Variant):Void;
	function get_edge_meta(p_idx:Int):gd.Variant;
	function get_face_vertex(p_idx:Int, p_vertex:Int):Int;
	function get_face_edge(p_idx:Int, p_edge:Int):Int;
	function set_face_meta(p_idx:Int, p_meta:gd.Variant):Void;
	function get_face_meta(p_idx:Int):gd.Variant;
	function get_face_normal(p_idx:Int):gd.Vector3;
	function set_material(p_material:gd.Material):Void;
	function get_material():gd.Material;
}