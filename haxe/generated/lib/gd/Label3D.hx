package gd;
extern class Label3D extends gd.GeometryInstance3D {
	function new(?owner:Dynamic);
	function set_horizontal_alignment(p_alignment:gd.HorizontalAlignment):gd.HorizontalAlignment;
	function get_horizontal_alignment():gd.HorizontalAlignment;
	function set_vertical_alignment(p_alignment:gd.VerticalAlignment):gd.VerticalAlignment;
	function get_vertical_alignment():gd.VerticalAlignment;
	function set_modulate(p_modulate:gd.Color):gd.Color;
	function get_modulate():gd.Color;
	function set_outline_modulate(p_modulate:gd.Color):gd.Color;
	function get_outline_modulate():gd.Color;
	function set_text(p_text:std.String):std.String;
	function get_text():std.String;
	function set_text_direction(p_direction:gd.textserver.Direction):gd.textserver.Direction;
	function get_text_direction():gd.textserver.Direction;
	function set_language(p_language:std.String):std.String;
	function get_language():std.String;
	function set_structured_text_bidi_override(p_parser:gd.textserver.StructuredTextParser):gd.textserver.StructuredTextParser;
	function get_structured_text_bidi_override():gd.textserver.StructuredTextParser;
	function set_structured_text_bidi_override_options(p_args:gd.Array):gd.Array;
	function get_structured_text_bidi_override_options():gd.Array;
	function set_uppercase(p_enable:Bool):Bool;
	function is_uppercase():Bool;
	function set_render_priority(p_priority:Int):Int;
	function get_render_priority():Int;
	function set_outline_render_priority(p_priority:Int):Int;
	function get_outline_render_priority():Int;
	function set_font(p_font:gd.Font):gd.Font;
	function get_font():gd.Font;
	function set_font_size(p_size:Int):Int;
	function get_font_size():Int;
	function set_outline_size(p_outline_size:Int):Int;
	function get_outline_size():Int;
	function set_line_spacing(p_line_spacing:Float):Float;
	function get_line_spacing():Float;
	function set_autowrap_mode(p_autowrap_mode:gd.textserver.AutowrapMode):gd.textserver.AutowrapMode;
	function get_autowrap_mode():gd.textserver.AutowrapMode;
	function set_justification_flags(p_justification_flags:Int):Int;
	function get_justification_flags():Int;
	function set_width(p_width:Float):Float;
	function get_width():Float;
	function set_pixel_size(p_pixel_size:Float):Float;
	function get_pixel_size():Float;
	function set_offset(p_offset:gd.Vector2):gd.Vector2;
	function get_offset():gd.Vector2;
	function set_draw_flag(p_flag:gd.label3d.DrawFlags, p_enabled:Bool):Void;
	function get_draw_flag(p_flag:gd.label3d.DrawFlags):Bool;
	function set_billboard_mode(p_mode:gd.basematerial3d.BillboardMode):Void;
	function get_billboard_mode():gd.basematerial3d.BillboardMode;
	function set_alpha_cut_mode(p_mode:gd.label3d.AlphaCutMode):Void;
	function get_alpha_cut_mode():gd.label3d.AlphaCutMode;
	function set_alpha_scissor_threshold(p_threshold:Float):Float;
	function get_alpha_scissor_threshold():Float;
	function set_alpha_hash_scale(p_threshold:Float):Float;
	function get_alpha_hash_scale():Float;
	function set_alpha_antialiasing(p_alpha_aa:gd.basematerial3d.AlphaAntiAliasing):Void;
	function get_alpha_antialiasing():gd.basematerial3d.AlphaAntiAliasing;
	function set_alpha_antialiasing_edge(p_edge:Float):Float;
	function get_alpha_antialiasing_edge():Float;
	function set_texture_filter(p_mode:gd.basematerial3d.TextureFilter):gd.basematerial3d.TextureFilter;
	function get_texture_filter():gd.basematerial3d.TextureFilter;
	function generate_triangle_mesh():gd.TriangleMesh;
	var pixel_size(get, set) : Float;
	var offset(get, set) : gd.Vector2;
	var billboard(get, set) : gd.basematerial3d.BillboardMode;
	function get_billboard():gd.basematerial3d.BillboardMode;
	function set_billboard(v:gd.basematerial3d.BillboardMode):gd.basematerial3d.BillboardMode;
	var shaded(get, set) : Bool;
	function get_shaded():Bool;
	function set_shaded(v:Bool):Bool;
	var double_sided(get, set) : Bool;
	function get_double_sided():Bool;
	function set_double_sided(v:Bool):Bool;
	var no_depth_test(get, set) : Bool;
	function get_no_depth_test():Bool;
	function set_no_depth_test(v:Bool):Bool;
	var fixed_size(get, set) : Bool;
	function get_fixed_size():Bool;
	function set_fixed_size(v:Bool):Bool;
	var alpha_cut(get, set) : gd.label3d.AlphaCutMode;
	function get_alpha_cut():gd.label3d.AlphaCutMode;
	function set_alpha_cut(v:gd.label3d.AlphaCutMode):gd.label3d.AlphaCutMode;
	var alpha_scissor_threshold(get, set) : Float;
	var alpha_hash_scale(get, set) : Float;
	var alpha_antialiasing_mode(get, set) : gd.basematerial3d.AlphaAntiAliasing;
	function get_alpha_antialiasing_mode():gd.basematerial3d.AlphaAntiAliasing;
	function set_alpha_antialiasing_mode(v:gd.basematerial3d.AlphaAntiAliasing):gd.basematerial3d.AlphaAntiAliasing;
	var alpha_antialiasing_edge(get, set) : Float;
	var texture_filter(get, set) : gd.basematerial3d.TextureFilter;
	var render_priority(get, set) : Int;
	var outline_render_priority(get, set) : Int;
	var modulate(get, set) : gd.Color;
	var outline_modulate(get, set) : gd.Color;
	var text(get, set) : std.String;
	var font(get, set) : gd.Font;
	var font_size(get, set) : Int;
	var outline_size(get, set) : Int;
	var horizontal_alignment(get, set) : gd.HorizontalAlignment;
	var vertical_alignment(get, set) : gd.VerticalAlignment;
	var uppercase(get, set) : Bool;
	function get_uppercase():Bool;
	var line_spacing(get, set) : Float;
	var autowrap_mode(get, set) : gd.textserver.AutowrapMode;
	var justification_flags(get, set) : Int;
	var width(get, set) : Float;
	var text_direction(get, set) : gd.textserver.Direction;
	var language(get, set) : std.String;
	var structured_text_bidi_override(get, set) : gd.textserver.StructuredTextParser;
	var structured_text_bidi_override_options(get, set) : gd.Array;
}