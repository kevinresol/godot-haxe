package gd;
extern class TileMap extends gd.Node2D {
	function new(?owner:Dynamic);
	function _use_tile_data_runtime_update(p_layer:Int, p_coords:gd.Vector2i):Bool;
	function _tile_data_runtime_update(p_layer:Int, p_coords:gd.Vector2i, p_tile_data:gd.TileData):Void;
	function set_navigation_map(p_layer:Int, p_map:gd.RID):Void;
	function get_navigation_map(p_layer:Int):gd.RID;
	function force_update(?p_layer:Int = -1):Void;
	function set_tileset(p_tileset:gd.TileSet):Void;
	function get_tileset():gd.TileSet;
	function set_rendering_quadrant_size(p_size:Int):Int;
	function get_rendering_quadrant_size():Int;
	function get_layers_count():Int;
	function add_layer(p_to_position:Int):Void;
	function move_layer(p_layer:Int, p_to_position:Int):Void;
	function remove_layer(p_layer:Int):Void;
	function set_layer_name(p_layer:Int, p_name:std.String):Void;
	function get_layer_name(p_layer:Int):std.String;
	function set_layer_enabled(p_layer:Int, p_enabled:Bool):Void;
	function is_layer_enabled(p_layer:Int):Bool;
	function set_layer_modulate(p_layer:Int, p_modulate:gd.Color):Void;
	function get_layer_modulate(p_layer:Int):gd.Color;
	function set_layer_y_sort_enabled(p_layer:Int, p_y_sort_enabled:Bool):Void;
	function is_layer_y_sort_enabled(p_layer:Int):Bool;
	function set_layer_y_sort_origin(p_layer:Int, p_y_sort_origin:Int):Void;
	function get_layer_y_sort_origin(p_layer:Int):Int;
	function set_layer_z_index(p_layer:Int, p_z_index:Int):Void;
	function get_layer_z_index(p_layer:Int):Int;
	function set_layer_navigation_enabled(p_layer:Int, p_enabled:Bool):Void;
	function is_layer_navigation_enabled(p_layer:Int):Bool;
	function set_layer_navigation_map(p_layer:Int, p_map:gd.RID):Void;
	function get_layer_navigation_map(p_layer:Int):gd.RID;
	function set_collision_animatable(p_enabled:Bool):Bool;
	function is_collision_animatable():Bool;
	function set_collision_visibility_mode(p_collision_visibility_mode:gd.tilemap.VisibilityMode):gd.tilemap.VisibilityMode;
	function get_collision_visibility_mode():gd.tilemap.VisibilityMode;
	function set_navigation_visibility_mode(p_navigation_visibility_mode:gd.tilemap.VisibilityMode):gd.tilemap.VisibilityMode;
	function get_navigation_visibility_mode():gd.tilemap.VisibilityMode;
	function erase_cell(p_layer:Int, p_coords:gd.Vector2i):Void;
	function get_cell_source_id(p_layer:Int, p_coords:gd.Vector2i, ?p_use_proxies:Bool = false):Int;
	function get_cell_atlas_coords(p_layer:Int, p_coords:gd.Vector2i, ?p_use_proxies:Bool = false):gd.Vector2i;
	function get_cell_alternative_tile(p_layer:Int, p_coords:gd.Vector2i, ?p_use_proxies:Bool = false):Int;
	function get_cell_tile_data(p_layer:Int, p_coords:gd.Vector2i, ?p_use_proxies:Bool = false):gd.TileData;
	function get_coords_for_body_rid(p_body:gd.RID):gd.Vector2i;
	function get_layer_for_body_rid(p_body:gd.RID):Int;
	function map_pattern(p_position_in_tilemap:gd.Vector2i, p_coords_in_pattern:gd.Vector2i, p_pattern:gd.TileMapPattern):gd.Vector2i;
	function set_pattern(p_layer:Int, p_position:gd.Vector2i, p_pattern:gd.TileMapPattern):Void;
	function fix_invalid_tiles():Void;
	function clear_layer(p_layer:Int):Void;
	function clear():Void;
	function update_internals():Void;
	function notify_runtime_tile_data_update(?p_layer:Int = -1):Void;
	function get_used_rect():gd.Rect2i;
	function map_to_local(p_map_position:gd.Vector2i):gd.Vector2;
	function local_to_map(p_local_position:gd.Vector2):gd.Vector2i;
	function get_neighbor_cell(p_coords:gd.Vector2i, p_neighbor:gd.tileset.CellNeighbor):gd.Vector2i;
	var tile_set(get, set) : gd.TileSet;
	function get_tile_set():gd.TileSet;
	function set_tile_set(v:gd.TileSet):gd.TileSet;
	var rendering_quadrant_size(get, set) : Int;
	var collision_animatable(get, set) : Bool;
	function get_collision_animatable():Bool;
	var collision_visibility_mode(get, set) : gd.tilemap.VisibilityMode;
	var navigation_visibility_mode(get, set) : gd.tilemap.VisibilityMode;
}