package gd;
extern class TextParagraph extends gd.RefCounted {
	function new(?owner:Dynamic);
	function clear():Void;
	function set_direction(p_direction:gd.textserver.Direction):gd.textserver.Direction;
	function get_direction():gd.textserver.Direction;
	function set_custom_punctuation(p_custom_punctuation:std.String):std.String;
	function get_custom_punctuation():std.String;
	function set_orientation(p_orientation:gd.textserver.Orientation):gd.textserver.Orientation;
	function get_orientation():gd.textserver.Orientation;
	function set_preserve_invalid(p_enabled:Bool):Bool;
	function get_preserve_invalid():Bool;
	function set_preserve_control(p_enabled:Bool):Bool;
	function get_preserve_control():Bool;
	function set_bidi_override(p_override:gd.Array):Void;
	function clear_dropcap():Void;
	function set_alignment(p_alignment:gd.HorizontalAlignment):gd.HorizontalAlignment;
	function get_alignment():gd.HorizontalAlignment;
	function tab_align(p_tab_stops:gd.PackedFloat32Array):Void;
	function set_break_flags(p_flags:Int):Int;
	function get_break_flags():Int;
	function set_justification_flags(p_flags:Int):Int;
	function get_justification_flags():Int;
	function set_text_overrun_behavior(p_overrun_behavior:gd.textserver.OverrunBehavior):gd.textserver.OverrunBehavior;
	function get_text_overrun_behavior():gd.textserver.OverrunBehavior;
	function set_ellipsis_char(p_char:std.String):std.String;
	function get_ellipsis_char():std.String;
	function set_width(p_width:Float):Float;
	function get_width():Float;
	function get_non_wrapped_size():gd.Vector2;
	function get_size():gd.Vector2;
	function get_rid():gd.RID;
	function get_line_rid(p_line:Int):gd.RID;
	function get_dropcap_rid():gd.RID;
	function get_line_count():Int;
	function set_max_lines_visible(p_max_lines_visible:Int):Int;
	function get_max_lines_visible():Int;
	function get_line_objects(p_line:Int):gd.Array;
	function get_line_object_rect(p_line:Int, p_key:gd.Variant):gd.Rect2;
	function get_line_size(p_line:Int):gd.Vector2;
	function get_line_range(p_line:Int):gd.Vector2i;
	function get_line_ascent(p_line:Int):Float;
	function get_line_descent(p_line:Int):Float;
	function get_line_width(p_line:Int):Float;
	function get_line_underline_position(p_line:Int):Float;
	function get_line_underline_thickness(p_line:Int):Float;
	function get_dropcap_size():gd.Vector2;
	function get_dropcap_lines():Int;
	function hit_test(p_coords:gd.Vector2):Int;
	var direction(get, set) : gd.textserver.Direction;
	var custom_punctuation(get, set) : std.String;
	var orientation(get, set) : gd.textserver.Orientation;
	var preserve_invalid(get, set) : Bool;
	var preserve_control(get, set) : Bool;
	var alignment(get, set) : gd.HorizontalAlignment;
	var break_flags(get, set) : Int;
	var justification_flags(get, set) : Int;
	var text_overrun_behavior(get, set) : gd.textserver.OverrunBehavior;
	var ellipsis_char(get, set) : std.String;
	var width(get, set) : Float;
	var max_lines_visible(get, set) : Int;
}