package gd;
extern class TileData extends gd.Object {
	function new(?owner:Dynamic);
	function set_flip_h(p_flip_h:Bool):Bool;
	function get_flip_h():Bool;
	function set_flip_v(p_flip_v:Bool):Bool;
	function get_flip_v():Bool;
	function set_transpose(p_transpose:Bool):Bool;
	function get_transpose():Bool;
	function set_material(p_material:gd.Material):gd.Material;
	function get_material():gd.Material;
	function set_texture_origin(p_texture_origin:gd.Vector2i):gd.Vector2i;
	function get_texture_origin():gd.Vector2i;
	function set_modulate(p_modulate:gd.Color):gd.Color;
	function get_modulate():gd.Color;
	function set_z_index(p_z_index:Int):Int;
	function get_z_index():Int;
	function set_y_sort_origin(p_y_sort_origin:Int):Int;
	function get_y_sort_origin():Int;
	function set_occluder(p_layer_id:Int, p_occluder_polygon:gd.OccluderPolygon2D):Void;
	function get_occluder(p_layer_id:Int, ?p_flip_h:Bool = false, ?p_flip_v:Bool = false, ?p_transpose:Bool = false):gd.OccluderPolygon2D;
	function set_constant_linear_velocity(p_layer_id:Int, p_velocity:gd.Vector2):Void;
	function get_constant_linear_velocity(p_layer_id:Int):gd.Vector2;
	function set_constant_angular_velocity(p_layer_id:Int, p_velocity:Float):Void;
	function get_constant_angular_velocity(p_layer_id:Int):Float;
	function set_collision_polygons_count(p_layer_id:Int, p_polygons_count:Int):Void;
	function get_collision_polygons_count(p_layer_id:Int):Int;
	function add_collision_polygon(p_layer_id:Int):Void;
	function remove_collision_polygon(p_layer_id:Int, p_polygon_index:Int):Void;
	function set_collision_polygon_points(p_layer_id:Int, p_polygon_index:Int, p_polygon:gd.PackedVector2Array):Void;
	function get_collision_polygon_points(p_layer_id:Int, p_polygon_index:Int):gd.PackedVector2Array;
	function set_collision_polygon_one_way(p_layer_id:Int, p_polygon_index:Int, p_one_way:Bool):Void;
	function is_collision_polygon_one_way(p_layer_id:Int, p_polygon_index:Int):Bool;
	function set_collision_polygon_one_way_margin(p_layer_id:Int, p_polygon_index:Int, p_one_way_margin:Float):Void;
	function get_collision_polygon_one_way_margin(p_layer_id:Int, p_polygon_index:Int):Float;
	function set_terrain_set(p_terrain_set:Int):Int;
	function get_terrain_set():Int;
	function set_terrain(p_terrain:Int):Int;
	function get_terrain():Int;
	function set_terrain_peering_bit(p_peering_bit:gd.tileset.CellNeighbor, p_terrain:Int):Void;
	function get_terrain_peering_bit(p_peering_bit:gd.tileset.CellNeighbor):Int;
	function is_valid_terrain_peering_bit(p_peering_bit:gd.tileset.CellNeighbor):Bool;
	function set_navigation_polygon(p_layer_id:Int, p_navigation_polygon:gd.NavigationPolygon):Void;
	function get_navigation_polygon(p_layer_id:Int, ?p_flip_h:Bool = false, ?p_flip_v:Bool = false, ?p_transpose:Bool = false):gd.NavigationPolygon;
	function set_probability(p_probability:Float):Float;
	function get_probability():Float;
	function set_custom_data(p_layer_name:std.String, p_value:gd.Variant):Void;
	function get_custom_data(p_layer_name:std.String):gd.Variant;
	function set_custom_data_by_layer_id(p_layer_id:Int, p_value:gd.Variant):Void;
	function get_custom_data_by_layer_id(p_layer_id:Int):gd.Variant;
	var flip_h(get, set) : Bool;
	var flip_v(get, set) : Bool;
	var transpose(get, set) : Bool;
	var texture_origin(get, set) : gd.Vector2i;
	var modulate(get, set) : gd.Color;
	var material(get, set) : gd.Material;
	var z_index(get, set) : Int;
	var y_sort_origin(get, set) : Int;
	var terrain_set(get, set) : Int;
	var terrain(get, set) : Int;
	var probability(get, set) : Float;
}