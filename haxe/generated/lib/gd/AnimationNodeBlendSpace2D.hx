package gd;
extern class AnimationNodeBlendSpace2D extends gd.AnimationRootNode {
	function new(?owner:Dynamic);
	function add_blend_point(p_node:gd.AnimationRootNode, p_pos:gd.Vector2, ?p_at_index:Int):Void;
	function set_blend_point_position(p_point:Int, p_pos:gd.Vector2):Void;
	function get_blend_point_position(p_point:Int):gd.Vector2;
	function set_blend_point_node(p_point:Int, p_node:gd.AnimationRootNode):Void;
	function get_blend_point_node(p_point:Int):gd.AnimationRootNode;
	function remove_blend_point(p_point:Int):Void;
	function get_blend_point_count():Int;
	function add_triangle(p_x:Int, p_y:Int, p_z:Int, ?p_at_index:Int):Void;
	function get_triangle_point(p_triangle:Int, p_point:Int):Int;
	function remove_triangle(p_triangle:Int):Void;
	function get_triangle_count():Int;
	function set_min_space(p_min_space:gd.Vector2):gd.Vector2;
	function get_min_space():gd.Vector2;
	function set_max_space(p_max_space:gd.Vector2):gd.Vector2;
	function get_max_space():gd.Vector2;
	function set_snap(p_snap:gd.Vector2):gd.Vector2;
	function get_snap():gd.Vector2;
	function set_x_label(p_text:std.String):std.String;
	function get_x_label():std.String;
	function set_y_label(p_text:std.String):std.String;
	function get_y_label():std.String;
	function set_auto_triangles(p_enable:Bool):Bool;
	function get_auto_triangles():Bool;
	function set_blend_mode(p_mode:gd.animationnodeblendspace2d.BlendMode):gd.animationnodeblendspace2d.BlendMode;
	function get_blend_mode():gd.animationnodeblendspace2d.BlendMode;
	function set_use_sync(p_enable:Bool):Void;
	function is_using_sync():Bool;
	var auto_triangles(get, set) : Bool;
	var min_space(get, set) : gd.Vector2;
	var max_space(get, set) : gd.Vector2;
	var snap(get, set) : gd.Vector2;
	var x_label(get, set) : std.String;
	var y_label(get, set) : std.String;
	var blend_mode(get, set) : gd.animationnodeblendspace2d.BlendMode;
	var sync(get, set) : Bool;
	function get_sync():Bool;
	function set_sync(v:Bool):Bool;
}