package gd;
extern class OpenXRInterface extends gd.XRInterface {
	function new(?owner:Dynamic);
	function get_display_refresh_rate():Float;
	function set_display_refresh_rate(p_refresh_rate:Float):Float;
	function get_render_target_size_multiplier():Float;
	function set_render_target_size_multiplier(p_multiplier:Float):Float;
	function is_foveation_supported():Bool;
	function get_foveation_level():Int;
	function set_foveation_level(p_foveation_level:Int):Int;
	function get_foveation_dynamic():Bool;
	function set_foveation_dynamic(p_foveation_dynamic:Bool):Bool;
	function is_action_set_active(p_name:std.String):Bool;
	function set_action_set_active(p_name:std.String, p_active:Bool):Void;
	function get_action_sets():gd.Array;
	function get_available_display_refresh_rates():gd.Array;
	function set_motion_range(p_hand:gd.openxrinterface.Hand, p_motion_range:gd.openxrinterface.HandMotionRange):Void;
	function get_motion_range(p_hand:gd.openxrinterface.Hand):gd.openxrinterface.HandMotionRange;
	function get_hand_tracking_source(p_hand:gd.openxrinterface.Hand):gd.openxrinterface.HandTrackedSource;
	function get_hand_joint_flags(p_hand:gd.openxrinterface.Hand, p_joint:gd.openxrinterface.HandJoints):Int;
	function get_hand_joint_rotation(p_hand:gd.openxrinterface.Hand, p_joint:gd.openxrinterface.HandJoints):gd.Quaternion;
	function get_hand_joint_position(p_hand:gd.openxrinterface.Hand, p_joint:gd.openxrinterface.HandJoints):gd.Vector3;
	function get_hand_joint_radius(p_hand:gd.openxrinterface.Hand, p_joint:gd.openxrinterface.HandJoints):Float;
	function get_hand_joint_linear_velocity(p_hand:gd.openxrinterface.Hand, p_joint:gd.openxrinterface.HandJoints):gd.Vector3;
	function get_hand_joint_angular_velocity(p_hand:gd.openxrinterface.Hand, p_joint:gd.openxrinterface.HandJoints):gd.Vector3;
	function is_hand_tracking_supported():Bool;
	function is_hand_interaction_supported():Bool;
	function is_eye_gaze_interaction_supported():Bool;
	function get_vrs_min_radius():Float;
	function set_vrs_min_radius(p_radius:Float):Float;
	function get_vrs_strength():Float;
	function set_vrs_strength(p_strength:Float):Float;
	var display_refresh_rate(get, set) : Float;
	var render_target_size_multiplier(get, set) : Float;
	var foveation_level(get, set) : Int;
	var foveation_dynamic(get, set) : Bool;
	var vrs_min_radius(get, set) : Float;
	var vrs_strength(get, set) : Float;
}