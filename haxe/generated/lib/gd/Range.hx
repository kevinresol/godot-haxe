package gd;
extern class Range extends gd.Control {
	function new(?owner:Dynamic);
	function _value_changed(p_new_value:Float):Void;
	function get_value():Float;
	function get_min():Float;
	function get_max():Float;
	function get_step():Float;
	function get_page():Float;
	function get_as_ratio():Float;
	function set_value(p_value:Float):Float;
	function set_value_no_signal(p_value:Float):Void;
	function set_min(p_minimum:Float):Void;
	function set_max(p_maximum:Float):Void;
	function set_step(p_step:Float):Float;
	function set_page(p_pagesize:Float):Float;
	function set_as_ratio(p_value:Float):Void;
	function set_use_rounded_values(p_enabled:Bool):Void;
	function is_using_rounded_values():Bool;
	function set_exp_ratio(p_enabled:Bool):Void;
	function is_ratio_exp():Bool;
	function set_allow_greater(p_allow:Bool):Bool;
	function is_greater_allowed():Bool;
	function set_allow_lesser(p_allow:Bool):Bool;
	function is_lesser_allowed():Bool;
	function share(p_with:gd.Node):Void;
	function unshare():Void;
	var min_value(get, set) : Float;
	function get_min_value():Float;
	function set_min_value(v:Float):Float;
	var max_value(get, set) : Float;
	function get_max_value():Float;
	function set_max_value(v:Float):Float;
	var step(get, set) : Float;
	var page(get, set) : Float;
	var value(get, set) : Float;
	var ratio(get, set) : Float;
	function get_ratio():Float;
	function set_ratio(v:Float):Float;
	var exp_edit(get, set) : Bool;
	function get_exp_edit():Bool;
	function set_exp_edit(v:Bool):Bool;
	var rounded(get, set) : Bool;
	function get_rounded():Bool;
	function set_rounded(v:Bool):Bool;
	var allow_greater(get, set) : Bool;
	function get_allow_greater():Bool;
	var allow_lesser(get, set) : Bool;
	function get_allow_lesser():Bool;
}