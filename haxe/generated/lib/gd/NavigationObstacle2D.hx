package gd;
extern class NavigationObstacle2D extends gd.Node2D {
	function new(?owner:Dynamic);
	function get_rid():gd.RID;
	function set_avoidance_enabled(p_enabled:Bool):Bool;
	function get_avoidance_enabled():Bool;
	function set_navigation_map(p_navigation_map:gd.RID):Void;
	function get_navigation_map():gd.RID;
	function set_radius(p_radius:Float):Float;
	function get_radius():Float;
	function set_velocity(p_velocity:gd.Vector2):gd.Vector2;
	function get_velocity():gd.Vector2;
	function set_vertices(p_vertices:gd.PackedVector2Array):gd.PackedVector2Array;
	function get_vertices():gd.PackedVector2Array;
	function set_avoidance_layers(p_layers:Int):Int;
	function get_avoidance_layers():Int;
	function set_avoidance_layer_value(p_layer_number:Int, p_value:Bool):Void;
	function get_avoidance_layer_value(p_layer_number:Int):Bool;
	function set_affect_navigation_mesh(p_enabled:Bool):Bool;
	function get_affect_navigation_mesh():Bool;
	function set_carve_navigation_mesh(p_enabled:Bool):Bool;
	function get_carve_navigation_mesh():Bool;
	var radius(get, set) : Float;
	var vertices(get, set) : gd.PackedVector2Array;
	var affect_navigation_mesh(get, set) : Bool;
	var carve_navigation_mesh(get, set) : Bool;
	var avoidance_enabled(get, set) : Bool;
	var velocity(get, set) : gd.Vector2;
	var avoidance_layers(get, set) : Int;
}