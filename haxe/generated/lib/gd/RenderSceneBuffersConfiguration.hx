package gd;
extern class RenderSceneBuffersConfiguration extends gd.RefCounted {
	function new(?owner:Dynamic);
	function get_render_target():gd.RID;
	function set_render_target(p_render_target:gd.RID):gd.RID;
	function get_internal_size():gd.Vector2i;
	function set_internal_size(p_internal_size:gd.Vector2i):gd.Vector2i;
	function get_target_size():gd.Vector2i;
	function set_target_size(p_target_size:gd.Vector2i):gd.Vector2i;
	function get_view_count():Int;
	function set_view_count(p_view_count:Int):Int;
	function get_scaling_3d_mode():gd.renderingserver.ViewportScaling3DMode;
	function set_scaling_3d_mode(p_scaling_3d_mode:gd.renderingserver.ViewportScaling3DMode):gd.renderingserver.ViewportScaling3DMode;
	function get_msaa_3d():gd.renderingserver.ViewportMSAA;
	function set_msaa_3d(p_msaa_3d:gd.renderingserver.ViewportMSAA):gd.renderingserver.ViewportMSAA;
	function get_screen_space_aa():gd.renderingserver.ViewportScreenSpaceAA;
	function set_screen_space_aa(p_screen_space_aa:gd.renderingserver.ViewportScreenSpaceAA):gd.renderingserver.ViewportScreenSpaceAA;
	function get_fsr_sharpness():Float;
	function set_fsr_sharpness(p_fsr_sharpness:Float):Float;
	function get_texture_mipmap_bias():Float;
	function set_texture_mipmap_bias(p_texture_mipmap_bias:Float):Float;
	var render_target(get, set) : gd.RID;
	var internal_size(get, set) : gd.Vector2i;
	var target_size(get, set) : gd.Vector2i;
	var view_count(get, set) : Int;
	var scaling_3d_mode(get, set) : gd.renderingserver.ViewportScaling3DMode;
	var msaa_3d(get, set) : gd.renderingserver.ViewportMSAA;
	var screen_space_aa(get, set) : gd.renderingserver.ViewportScreenSpaceAA;
	var fsr_sharpness(get, set) : Float;
	var texture_mipmap_bias(get, set) : Float;
}