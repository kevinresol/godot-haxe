package gd;
extern class GraphEdit extends gd.Control {
	function new(?owner:Dynamic);
	function _is_in_input_hotzone(p_in_node:gd.Object, p_in_port:Int, p_mouse_position:gd.Vector2):Bool;
	function _is_in_output_hotzone(p_in_node:gd.Object, p_in_port:Int, p_mouse_position:gd.Vector2):Bool;
	function _get_connection_line(p_from_position:gd.Vector2, p_to_position:gd.Vector2):gd.PackedVector2Array;
	function _is_node_hover_valid(p_from_node:std.String, p_from_port:Int, p_to_node:std.String, p_to_port:Int):Bool;
	function connect_node(p_from_node:std.String, p_from_port:Int, p_to_node:std.String, p_to_port:Int):gd.Error;
	function is_node_connected(p_from_node:std.String, p_from_port:Int, p_to_node:std.String, p_to_port:Int):Bool;
	function disconnect_node(p_from_node:std.String, p_from_port:Int, p_to_node:std.String, p_to_port:Int):Void;
	function set_connection_activity(p_from_node:std.String, p_from_port:Int, p_to_node:std.String, p_to_port:Int, p_amount:Float):Void;
	function get_closest_connection_at_point(p_point:gd.Vector2, ?p_max_distance:Float):gd.Dictionary;
	function clear_connections():Void;
	function force_connection_drag_end():Void;
	function get_scroll_offset():gd.Vector2;
	function set_scroll_offset(p_offset:gd.Vector2):gd.Vector2;
	function add_valid_right_disconnect_type(p_type:Int):Void;
	function remove_valid_right_disconnect_type(p_type:Int):Void;
	function add_valid_left_disconnect_type(p_type:Int):Void;
	function remove_valid_left_disconnect_type(p_type:Int):Void;
	function add_valid_connection_type(p_from_type:Int, p_to_type:Int):Void;
	function remove_valid_connection_type(p_from_type:Int, p_to_type:Int):Void;
	function is_valid_connection_type(p_from_type:Int, p_to_type:Int):Bool;
	function get_connection_line(p_from_node:gd.Vector2, p_to_node:gd.Vector2):gd.PackedVector2Array;
	function attach_graph_element_to_frame(p_element:std.String, p_frame:std.String):Void;
	function detach_graph_element_from_frame(p_element:std.String):Void;
	function get_element_frame(p_element:std.String):gd.GraphFrame;
	function set_panning_scheme(p_scheme:gd.graphedit.PanningScheme):gd.graphedit.PanningScheme;
	function get_panning_scheme():gd.graphedit.PanningScheme;
	function set_zoom(p_zoom:Float):Float;
	function get_zoom():Float;
	function set_zoom_min(p_zoom_min:Float):Float;
	function get_zoom_min():Float;
	function set_zoom_max(p_zoom_max:Float):Float;
	function get_zoom_max():Float;
	function set_zoom_step(p_zoom_step:Float):Float;
	function get_zoom_step():Float;
	function set_show_grid(p_enable:Bool):Bool;
	function is_showing_grid():Bool;
	function set_grid_pattern(p_pattern:gd.graphedit.GridPattern):gd.graphedit.GridPattern;
	function get_grid_pattern():gd.graphedit.GridPattern;
	function set_snapping_enabled(p_enable:Bool):Bool;
	function is_snapping_enabled():Bool;
	function set_snapping_distance(p_pixels:Int):Int;
	function get_snapping_distance():Int;
	function set_connection_lines_curvature(p_curvature:Float):Float;
	function get_connection_lines_curvature():Float;
	function set_connection_lines_thickness(p_pixels:Float):Float;
	function get_connection_lines_thickness():Float;
	function set_connection_lines_antialiased(p_pixels:Bool):Bool;
	function is_connection_lines_antialiased():Bool;
	function set_minimap_size(p_size:gd.Vector2):gd.Vector2;
	function get_minimap_size():gd.Vector2;
	function set_minimap_opacity(p_opacity:Float):Float;
	function get_minimap_opacity():Float;
	function set_minimap_enabled(p_enable:Bool):Bool;
	function is_minimap_enabled():Bool;
	function set_show_menu(p_hidden:Bool):Bool;
	function is_showing_menu():Bool;
	function set_show_zoom_label(p_enable:Bool):Bool;
	function is_showing_zoom_label():Bool;
	function set_show_grid_buttons(p_hidden:Bool):Bool;
	function is_showing_grid_buttons():Bool;
	function set_show_zoom_buttons(p_hidden:Bool):Bool;
	function is_showing_zoom_buttons():Bool;
	function set_show_minimap_button(p_hidden:Bool):Bool;
	function is_showing_minimap_button():Bool;
	function set_show_arrange_button(p_hidden:Bool):Bool;
	function is_showing_arrange_button():Bool;
	function set_right_disconnects(p_enable:Bool):Bool;
	function is_right_disconnects_enabled():Bool;
	function get_menu_hbox():gd.HBoxContainer;
	function arrange_nodes():Void;
	function set_selected(p_node:gd.Node):Void;
	var scroll_offset(get, set) : gd.Vector2;
	var show_grid(get, set) : Bool;
	function get_show_grid():Bool;
	var grid_pattern(get, set) : gd.graphedit.GridPattern;
	var snapping_enabled(get, set) : Bool;
	function get_snapping_enabled():Bool;
	var snapping_distance(get, set) : Int;
	var panning_scheme(get, set) : gd.graphedit.PanningScheme;
	var right_disconnects(get, set) : Bool;
	function get_right_disconnects():Bool;
	var connection_lines_curvature(get, set) : Float;
	var connection_lines_thickness(get, set) : Float;
	var connection_lines_antialiased(get, set) : Bool;
	function get_connection_lines_antialiased():Bool;
	var zoom(get, set) : Float;
	var zoom_min(get, set) : Float;
	var zoom_max(get, set) : Float;
	var zoom_step(get, set) : Float;
	var minimap_enabled(get, set) : Bool;
	function get_minimap_enabled():Bool;
	var minimap_size(get, set) : gd.Vector2;
	var minimap_opacity(get, set) : Float;
	var show_menu(get, set) : Bool;
	function get_show_menu():Bool;
	var show_zoom_label(get, set) : Bool;
	function get_show_zoom_label():Bool;
	var show_zoom_buttons(get, set) : Bool;
	function get_show_zoom_buttons():Bool;
	var show_grid_buttons(get, set) : Bool;
	function get_show_grid_buttons():Bool;
	var show_minimap_button(get, set) : Bool;
	function get_show_minimap_button():Bool;
	var show_arrange_button(get, set) : Bool;
	function get_show_arrange_button():Bool;
}