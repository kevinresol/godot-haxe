package gd;
extern class EditorInterface extends gd.Object {
	function new(?owner:Dynamic);
	static final singleton : gd.EditorInterface;
	function restart_editor(?p_save:Bool = true):Void;
	function get_command_palette():gd.EditorCommandPalette;
	function get_resource_filesystem():gd.EditorFileSystem;
	function get_editor_paths():gd.EditorPaths;
	function get_resource_previewer():gd.EditorResourcePreview;
	function get_selection():gd.EditorSelection;
	function get_editor_settings():gd.EditorSettings;
	function set_plugin_enabled(p_plugin:std.String, p_enabled:Bool):Void;
	function is_plugin_enabled(p_plugin:std.String):Bool;
	function get_editor_theme():gd.Theme;
	function get_base_control():gd.Control;
	function get_editor_main_screen():gd.VBoxContainer;
	function get_script_editor():gd.ScriptEditor;
	function get_editor_viewport_2d():gd.SubViewport;
	function get_editor_viewport_3d(?p_idx:Int = 0):gd.SubViewport;
	function set_main_screen_editor(p_name:std.String):Void;
	function set_distraction_free_mode(p_enter:Bool):Bool;
	function is_distraction_free_mode_enabled():Bool;
	function is_multi_window_enabled():Bool;
	function get_editor_scale():Float;
	function popup_dialog_centered_ratio(p_dialog:gd.Window, ?p_ratio:Float = 0.8):Void;
	function get_current_feature_profile():std.String;
	function set_current_feature_profile(p_profile_name:std.String):Void;
	function get_file_system_dock():gd.FileSystemDock;
	function select_file(p_file:std.String):Void;
	function get_selected_paths():gd.PackedStringArray;
	function get_current_path():std.String;
	function get_current_directory():std.String;
	function get_inspector():gd.EditorInspector;
	function inspect_object(p_object:gd.Object, ?p_for_property:std.String = "\"\"", ?p_inspector_only:Bool = false):Void;
	function edit_resource(p_resource:gd.Resource):Void;
	function edit_node(p_node:gd.Node):Void;
	function edit_script(p_script:gd.Script, ?p_line:Int = -1, ?p_column:Int = 0, ?p_grab_focus:Bool = true):Void;
	function open_scene_from_path(p_scene_filepath:std.String):Void;
	function reload_scene_from_path(p_scene_filepath:std.String):Void;
	function get_open_scenes():gd.PackedStringArray;
	function get_edited_scene_root():gd.Node;
	function save_scene():gd.Error;
	function save_scene_as(p_path:std.String, ?p_with_preview:Bool = true):Void;
	function save_all_scenes():Void;
	function mark_scene_as_unsaved():Void;
	function play_main_scene():Void;
	function play_current_scene():Void;
	function play_custom_scene(p_scene_filepath:std.String):Void;
	function stop_playing_scene():Void;
	function is_playing_scene():Bool;
	function get_playing_scene():std.String;
	function set_movie_maker_enabled(p_enabled:Bool):Bool;
	function is_movie_maker_enabled():Bool;
	var distraction_free_mode(get, set) : Bool;
	function get_distraction_free_mode():Bool;
	var movie_maker_enabled(get, set) : Bool;
	function get_movie_maker_enabled():Bool;
}