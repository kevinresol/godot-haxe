package gd;
extern class DisplayServer extends gd.Object {
	function new(?owner:Dynamic);
	static var singleton(get, null) : gd.DisplayServer;
	static function get_singleton():gd.DisplayServer;
	static final SCREEN_WITH_MOUSE_FOCUS : Int;
	static final SCREEN_WITH_KEYBOARD_FOCUS : Int;
	static final SCREEN_PRIMARY : Int;
	static final SCREEN_OF_MAIN_WINDOW : Int;
	static final MAIN_WINDOW_ID : Int;
	static final INVALID_WINDOW_ID : Int;
	static final INVALID_INDICATOR_ID : Int;
	function has_feature(p_feature:gd.displayserver.Feature):Bool;
	function get_name():std.String;
	function help_set_search_callbacks(p_search_callback:gd.Callable, p_action_callback:gd.Callable):Void;
	function global_menu_set_popup_callbacks(p_menu_root:std.String, p_open_callback:gd.Callable, p_close_callback:gd.Callable):Void;
	function global_menu_add_submenu_item(p_menu_root:std.String, p_label:std.String, p_submenu:std.String, ?p_index:Int):Int;
	function global_menu_add_item(p_menu_root:std.String, p_label:std.String, ?p_callback:gd.Callable, ?p_key_callback:gd.Callable, ?p_tag:gd.Variant, ?p_accelerator:gd.Key, ?p_index:Int):Int;
	function global_menu_add_check_item(p_menu_root:std.String, p_label:std.String, ?p_callback:gd.Callable, ?p_key_callback:gd.Callable, ?p_tag:gd.Variant, ?p_accelerator:gd.Key, ?p_index:Int):Int;
	function global_menu_add_icon_item(p_menu_root:std.String, p_icon:gd.Texture2D, p_label:std.String, ?p_callback:gd.Callable, ?p_key_callback:gd.Callable, ?p_tag:gd.Variant, ?p_accelerator:gd.Key, ?p_index:Int):Int;
	function global_menu_add_icon_check_item(p_menu_root:std.String, p_icon:gd.Texture2D, p_label:std.String, ?p_callback:gd.Callable, ?p_key_callback:gd.Callable, ?p_tag:gd.Variant, ?p_accelerator:gd.Key, ?p_index:Int):Int;
	function global_menu_add_radio_check_item(p_menu_root:std.String, p_label:std.String, ?p_callback:gd.Callable, ?p_key_callback:gd.Callable, ?p_tag:gd.Variant, ?p_accelerator:gd.Key, ?p_index:Int):Int;
	function global_menu_add_icon_radio_check_item(p_menu_root:std.String, p_icon:gd.Texture2D, p_label:std.String, ?p_callback:gd.Callable, ?p_key_callback:gd.Callable, ?p_tag:gd.Variant, ?p_accelerator:gd.Key, ?p_index:Int):Int;
	function global_menu_add_multistate_item(p_menu_root:std.String, p_label:std.String, p_max_states:Int, p_default_state:Int, ?p_callback:gd.Callable, ?p_key_callback:gd.Callable, ?p_tag:gd.Variant, ?p_accelerator:gd.Key, ?p_index:Int):Int;
	function global_menu_add_separator(p_menu_root:std.String, ?p_index:Int):Int;
	function global_menu_get_item_index_from_text(p_menu_root:std.String, p_text:std.String):Int;
	function global_menu_get_item_index_from_tag(p_menu_root:std.String, p_tag:gd.Variant):Int;
	function global_menu_is_item_checked(p_menu_root:std.String, p_idx:Int):Bool;
	function global_menu_is_item_checkable(p_menu_root:std.String, p_idx:Int):Bool;
	function global_menu_is_item_radio_checkable(p_menu_root:std.String, p_idx:Int):Bool;
	function global_menu_get_item_callback(p_menu_root:std.String, p_idx:Int):gd.Callable;
	function global_menu_get_item_key_callback(p_menu_root:std.String, p_idx:Int):gd.Callable;
	function global_menu_get_item_tag(p_menu_root:std.String, p_idx:Int):gd.Variant;
	function global_menu_get_item_text(p_menu_root:std.String, p_idx:Int):std.String;
	function global_menu_get_item_submenu(p_menu_root:std.String, p_idx:Int):std.String;
	function global_menu_get_item_accelerator(p_menu_root:std.String, p_idx:Int):gd.Key;
	function global_menu_is_item_disabled(p_menu_root:std.String, p_idx:Int):Bool;
	function global_menu_is_item_hidden(p_menu_root:std.String, p_idx:Int):Bool;
	function global_menu_get_item_tooltip(p_menu_root:std.String, p_idx:Int):std.String;
	function global_menu_get_item_state(p_menu_root:std.String, p_idx:Int):Int;
	function global_menu_get_item_max_states(p_menu_root:std.String, p_idx:Int):Int;
	function global_menu_get_item_icon(p_menu_root:std.String, p_idx:Int):gd.Texture2D;
	function global_menu_get_item_indentation_level(p_menu_root:std.String, p_idx:Int):Int;
	function global_menu_set_item_checked(p_menu_root:std.String, p_idx:Int, p_checked:Bool):Void;
	function global_menu_set_item_checkable(p_menu_root:std.String, p_idx:Int, p_checkable:Bool):Void;
	function global_menu_set_item_radio_checkable(p_menu_root:std.String, p_idx:Int, p_checkable:Bool):Void;
	function global_menu_set_item_callback(p_menu_root:std.String, p_idx:Int, p_callback:gd.Callable):Void;
	function global_menu_set_item_hover_callbacks(p_menu_root:std.String, p_idx:Int, p_callback:gd.Callable):Void;
	function global_menu_set_item_key_callback(p_menu_root:std.String, p_idx:Int, p_key_callback:gd.Callable):Void;
	function global_menu_set_item_tag(p_menu_root:std.String, p_idx:Int, p_tag:gd.Variant):Void;
	function global_menu_set_item_text(p_menu_root:std.String, p_idx:Int, p_text:std.String):Void;
	function global_menu_set_item_submenu(p_menu_root:std.String, p_idx:Int, p_submenu:std.String):Void;
	function global_menu_set_item_accelerator(p_menu_root:std.String, p_idx:Int, p_keycode:gd.Key):Void;
	function global_menu_set_item_disabled(p_menu_root:std.String, p_idx:Int, p_disabled:Bool):Void;
	function global_menu_set_item_hidden(p_menu_root:std.String, p_idx:Int, p_hidden:Bool):Void;
	function global_menu_set_item_tooltip(p_menu_root:std.String, p_idx:Int, p_tooltip:std.String):Void;
	function global_menu_set_item_state(p_menu_root:std.String, p_idx:Int, p_state:Int):Void;
	function global_menu_set_item_max_states(p_menu_root:std.String, p_idx:Int, p_max_states:Int):Void;
	function global_menu_set_item_icon(p_menu_root:std.String, p_idx:Int, p_icon:gd.Texture2D):Void;
	function global_menu_set_item_indentation_level(p_menu_root:std.String, p_idx:Int, p_level:Int):Void;
	function global_menu_get_item_count(p_menu_root:std.String):Int;
	function global_menu_remove_item(p_menu_root:std.String, p_idx:Int):Void;
	function global_menu_clear(p_menu_root:std.String):Void;
	function global_menu_get_system_menu_roots():gd.Dictionary;
	function tts_is_speaking():Bool;
	function tts_is_paused():Bool;
	function tts_get_voices_for_language(p_language:std.String):gd.PackedStringArray;
	function tts_speak(p_text:std.String, p_voice:std.String, ?p_volume:Int, ?p_pitch:Float, ?p_rate:Float, ?p_utterance_id:Int, ?p_interrupt:Bool):Void;
	function tts_pause():Void;
	function tts_resume():Void;
	function tts_stop():Void;
	function tts_set_utterance_callback(p_event:gd.displayserver.TTSUtteranceEvent, p_callable:gd.Callable):Void;
	function is_dark_mode_supported():Bool;
	function is_dark_mode():Bool;
	function get_accent_color():gd.Color;
	function get_base_color():gd.Color;
	function set_system_theme_change_callback(p_callable:gd.Callable):Void;
	function mouse_set_mode(p_mouse_mode:gd.displayserver.MouseMode):Void;
	function mouse_get_mode():gd.displayserver.MouseMode;
	function warp_mouse(p_position:gd.Vector2i):Void;
	function mouse_get_position():gd.Vector2i;
	function mouse_get_button_state():Int;
	function clipboard_set(p_clipboard:std.String):Void;
	function clipboard_get():std.String;
	function clipboard_get_image():gd.Image;
	function clipboard_has():Bool;
	function clipboard_has_image():Bool;
	function clipboard_set_primary(p_clipboard_primary:std.String):Void;
	function clipboard_get_primary():std.String;
	function get_display_safe_area():gd.Rect2i;
	function get_screen_count():Int;
	function get_primary_screen():Int;
	function get_keyboard_focus_screen():Int;
	function get_screen_from_rect(p_rect:gd.Rect2):Int;
	function screen_get_position(?p_screen:Int):gd.Vector2i;
	function screen_get_size(?p_screen:Int):gd.Vector2i;
	function screen_get_usable_rect(?p_screen:Int):gd.Rect2i;
	function screen_get_dpi(?p_screen:Int):Int;
	function screen_get_scale(?p_screen:Int):Float;
	function is_touchscreen_available():Bool;
	function screen_get_max_scale():Float;
	function screen_get_refresh_rate(?p_screen:Int):Float;
	function screen_get_pixel(p_position:gd.Vector2i):gd.Color;
	function screen_get_image(?p_screen:Int):gd.Image;
	function screen_set_orientation(p_orientation:gd.displayserver.ScreenOrientation, ?p_screen:Int):Void;
	function screen_get_orientation(?p_screen:Int):gd.displayserver.ScreenOrientation;
	function screen_set_keep_on(p_enable:Bool):Void;
	function screen_is_kept_on():Bool;
	function get_window_list():gd.PackedInt32Array;
	function get_window_at_screen_position(p_position:gd.Vector2i):Int;
	function window_get_native_handle(p_handle_type:gd.displayserver.HandleType, ?p_window_id:Int):Int;
	function window_get_active_popup():Int;
	function window_set_popup_safe_rect(p_window:Int, p_rect:gd.Rect2i):Void;
	function window_get_popup_safe_rect(p_window:Int):gd.Rect2i;
	function window_set_title(p_title:std.String, ?p_window_id:Int):Void;
	function window_get_title_size(p_title:std.String, ?p_window_id:Int):gd.Vector2i;
	function window_set_mouse_passthrough(p_region:gd.PackedVector2Array, ?p_window_id:Int):Void;
	function window_get_current_screen(?p_window_id:Int):Int;
	function window_set_current_screen(p_screen:Int, ?p_window_id:Int):Void;
	function window_get_position(?p_window_id:Int):gd.Vector2i;
	function window_get_position_with_decorations(?p_window_id:Int):gd.Vector2i;
	function window_set_position(p_position:gd.Vector2i, ?p_window_id:Int):Void;
	function window_get_size(?p_window_id:Int):gd.Vector2i;
	function window_set_size(p_size:gd.Vector2i, ?p_window_id:Int):Void;
	function window_set_rect_changed_callback(p_callback:gd.Callable, ?p_window_id:Int):Void;
	function window_set_window_event_callback(p_callback:gd.Callable, ?p_window_id:Int):Void;
	function window_set_input_event_callback(p_callback:gd.Callable, ?p_window_id:Int):Void;
	function window_set_input_text_callback(p_callback:gd.Callable, ?p_window_id:Int):Void;
	function window_set_drop_files_callback(p_callback:gd.Callable, ?p_window_id:Int):Void;
	function window_get_attached_instance_id(?p_window_id:Int):Int;
	function window_get_max_size(?p_window_id:Int):gd.Vector2i;
	function window_set_max_size(p_max_size:gd.Vector2i, ?p_window_id:Int):Void;
	function window_get_min_size(?p_window_id:Int):gd.Vector2i;
	function window_set_min_size(p_min_size:gd.Vector2i, ?p_window_id:Int):Void;
	function window_get_size_with_decorations(?p_window_id:Int):gd.Vector2i;
	function window_get_mode(?p_window_id:Int):gd.displayserver.WindowMode;
	function window_set_mode(p_mode:gd.displayserver.WindowMode, ?p_window_id:Int):Void;
	function window_set_flag(p_flag:gd.displayserver.WindowFlags, p_enabled:Bool, ?p_window_id:Int):Void;
	function window_get_flag(p_flag:gd.displayserver.WindowFlags, ?p_window_id:Int):Bool;
	function window_set_window_buttons_offset(p_offset:gd.Vector2i, ?p_window_id:Int):Void;
	function window_get_safe_title_margins(?p_window_id:Int):gd.Vector3i;
	function window_request_attention(?p_window_id:Int):Void;
	function window_move_to_foreground(?p_window_id:Int):Void;
	function window_is_focused(?p_window_id:Int):Bool;
	function window_can_draw(?p_window_id:Int):Bool;
	function window_set_transient(p_window_id:Int, p_parent_window_id:Int):Void;
	function window_set_exclusive(p_window_id:Int, p_exclusive:Bool):Void;
	function window_set_ime_active(p_active:Bool, ?p_window_id:Int):Void;
	function window_set_ime_position(p_position:gd.Vector2i, ?p_window_id:Int):Void;
	function window_set_vsync_mode(p_vsync_mode:gd.displayserver.VSyncMode, ?p_window_id:Int):Void;
	function window_get_vsync_mode(?p_window_id:Int):gd.displayserver.VSyncMode;
	function window_is_maximize_allowed(?p_window_id:Int):Bool;
	function window_maximize_on_title_dbl_click():Bool;
	function window_minimize_on_title_dbl_click():Bool;
	function ime_get_selection():gd.Vector2i;
	function ime_get_text():std.String;
	function virtual_keyboard_show(p_existing_text:std.String, ?p_position:gd.Rect2, ?p_type:gd.displayserver.VirtualKeyboardType, ?p_max_length:Int, ?p_cursor_start:Int, ?p_cursor_end:Int):Void;
	function virtual_keyboard_hide():Void;
	function virtual_keyboard_get_height():Int;
	function cursor_set_shape(p_shape:gd.displayserver.CursorShape):Void;
	function cursor_get_shape():gd.displayserver.CursorShape;
	function cursor_set_custom_image(p_cursor:gd.Resource, ?p_shape:gd.displayserver.CursorShape, ?p_hotspot:gd.Vector2):Void;
	function get_swap_cancel_ok():Bool;
	function enable_for_stealing_focus(p_process_id:Int):Void;
	function dialog_show(p_title:std.String, p_description:std.String, p_buttons:gd.PackedStringArray, p_callback:gd.Callable):gd.Error;
	function dialog_input_text(p_title:std.String, p_description:std.String, p_existing_text:std.String, p_callback:gd.Callable):gd.Error;
	function file_dialog_show(p_title:std.String, p_current_directory:std.String, p_filename:std.String, p_show_hidden:Bool, p_mode:gd.displayserver.FileDialogMode, p_filters:gd.PackedStringArray, p_callback:gd.Callable):gd.Error;
	function keyboard_get_layout_count():Int;
	function keyboard_get_current_layout():Int;
	function keyboard_set_current_layout(p_index:Int):Void;
	function keyboard_get_layout_language(p_index:Int):std.String;
	function keyboard_get_layout_name(p_index:Int):std.String;
	function keyboard_get_keycode_from_physical(p_keycode:gd.Key):gd.Key;
	function keyboard_get_label_from_physical(p_keycode:gd.Key):gd.Key;
	function process_events():Void;
	function force_process_and_drop_events():Void;
	function set_native_icon(p_filename:std.String):Void;
	function set_icon(p_image:gd.Image):Void;
	function create_status_indicator(p_icon:gd.Texture2D, p_tooltip:std.String, p_callback:gd.Callable):Int;
	function status_indicator_set_icon(p_id:Int, p_icon:gd.Texture2D):Void;
	function status_indicator_set_tooltip(p_id:Int, p_tooltip:std.String):Void;
	function status_indicator_set_menu(p_id:Int, p_menu_rid:gd.RID):Void;
	function status_indicator_set_callback(p_id:Int, p_callback:gd.Callable):Void;
	function status_indicator_get_rect(p_id:Int):gd.Rect2;
	function delete_status_indicator(p_id:Int):Void;
	function tablet_get_driver_count():Int;
	function tablet_get_driver_name(p_idx:Int):std.String;
	function tablet_get_current_driver():std.String;
	function tablet_set_current_driver(p_name:std.String):Void;
	function is_window_transparency_available():Bool;
	function register_additional_output(p_object:gd.Object):Void;
	function unregister_additional_output(p_object:gd.Object):Void;
	function has_additional_outputs():Bool;
}