package gd;
extern class Control extends gd.CanvasItem {
	function new(?owner:Dynamic);
	function _has_point(p_point:gd.Vector2):Bool;
	function _get_minimum_size():gd.Vector2;
	function _get_tooltip(p_at_position:gd.Vector2):std.String;
	function _get_drag_data(p_at_position:gd.Vector2):gd.Variant;
	function _can_drop_data(p_at_position:gd.Vector2, p_data:gd.Variant):Bool;
	function _drop_data(p_at_position:gd.Vector2, p_data:gd.Variant):Void;
	function _make_custom_tooltip(p_for_text:std.String):gd.Object;
	function _gui_input(p_event:gd.InputEvent):Void;
	function accept_event():Void;
	function get_minimum_size():gd.Vector2;
	function get_combined_minimum_size():gd.Vector2;
	function set_anchors_preset(p_preset:gd.control.LayoutPreset, ?p_keep_offsets:Bool):Void;
	function set_offsets_preset(p_preset:gd.control.LayoutPreset, ?p_resize_mode:gd.control.LayoutPresetMode, ?p_margin:Int):Void;
	function set_anchors_and_offsets_preset(p_preset:gd.control.LayoutPreset, ?p_resize_mode:gd.control.LayoutPresetMode, ?p_margin:Int):Void;
	function set_anchor(p_side:gd.Side, p_anchor:Float, ?p_keep_offset:Bool, ?p_push_opposite_anchor:Bool):Void;
	function get_anchor(p_side:gd.Side):Float;
	function set_offset(p_side:gd.Side, p_offset:Float):Void;
	function get_offset(p_offset:gd.Side):Float;
	function set_anchor_and_offset(p_side:gd.Side, p_anchor:Float, p_offset:Float, ?p_push_opposite_anchor:Bool):Void;
	function set_begin(p_position:gd.Vector2):Void;
	function set_end(p_position:gd.Vector2):Void;
	function set_position(p_position:gd.Vector2, ?p_keep_offsets:Bool):Void;
	function set_size(p_size:gd.Vector2, ?p_keep_offsets:Bool):Void;
	function reset_size():Void;
	function set_custom_minimum_size(p_size:gd.Vector2):gd.Vector2;
	function set_global_position(p_position:gd.Vector2, ?p_keep_offsets:Bool):Void;
	function set_rotation(p_radians:Float):Float;
	function set_rotation_degrees(p_degrees:Float):Float;
	function set_scale(p_scale:gd.Vector2):gd.Vector2;
	function set_pivot_offset(p_pivot_offset:gd.Vector2):gd.Vector2;
	function get_begin():gd.Vector2;
	function get_end():gd.Vector2;
	function get_position():gd.Vector2;
	function get_size():gd.Vector2;
	function get_rotation():Float;
	function get_rotation_degrees():Float;
	function get_scale():gd.Vector2;
	function get_pivot_offset():gd.Vector2;
	function get_custom_minimum_size():gd.Vector2;
	function get_parent_area_size():gd.Vector2;
	function get_global_position():gd.Vector2;
	function get_screen_position():gd.Vector2;
	function get_rect():gd.Rect2;
	function get_global_rect():gd.Rect2;
	function set_focus_mode(p_mode:gd.control.FocusMode):gd.control.FocusMode;
	function get_focus_mode():gd.control.FocusMode;
	function has_focus():Bool;
	function grab_focus():Void;
	function release_focus():Void;
	function find_prev_valid_focus():gd.Control;
	function find_next_valid_focus():gd.Control;
	function find_valid_focus_neighbor(p_side:gd.Side):gd.Control;
	function set_h_size_flags(p_flags:Int):Void;
	function get_h_size_flags():Int;
	function set_stretch_ratio(p_ratio:Float):Void;
	function get_stretch_ratio():Float;
	function set_v_size_flags(p_flags:Int):Void;
	function get_v_size_flags():Int;
	function set_theme(p_theme:gd.Theme):gd.Theme;
	function get_theme():gd.Theme;
	function set_theme_type_variation(p_theme_type:std.String):std.String;
	function get_theme_type_variation():std.String;
	function begin_bulk_theme_override():Void;
	function end_bulk_theme_override():Void;
	function add_theme_icon_override(p_name:std.String, p_texture:gd.Texture2D):Void;
	function add_theme_stylebox_override(p_name:std.String, p_stylebox:gd.StyleBox):Void;
	function add_theme_font_override(p_name:std.String, p_font:gd.Font):Void;
	function add_theme_font_size_override(p_name:std.String, p_font_size:Int):Void;
	function add_theme_color_override(p_name:std.String, p_color:gd.Color):Void;
	function add_theme_constant_override(p_name:std.String, p_constant:Int):Void;
	function remove_theme_icon_override(p_name:std.String):Void;
	function remove_theme_stylebox_override(p_name:std.String):Void;
	function remove_theme_font_override(p_name:std.String):Void;
	function remove_theme_font_size_override(p_name:std.String):Void;
	function remove_theme_color_override(p_name:std.String):Void;
	function remove_theme_constant_override(p_name:std.String):Void;
	function get_theme_icon(p_name:std.String, ?p_theme_type:std.String):gd.Texture2D;
	function get_theme_stylebox(p_name:std.String, ?p_theme_type:std.String):gd.StyleBox;
	function get_theme_font(p_name:std.String, ?p_theme_type:std.String):gd.Font;
	function get_theme_font_size(p_name:std.String, ?p_theme_type:std.String):Int;
	function get_theme_color(p_name:std.String, ?p_theme_type:std.String):gd.Color;
	function get_theme_constant(p_name:std.String, ?p_theme_type:std.String):Int;
	function has_theme_icon_override(p_name:std.String):Bool;
	function has_theme_stylebox_override(p_name:std.String):Bool;
	function has_theme_font_override(p_name:std.String):Bool;
	function has_theme_font_size_override(p_name:std.String):Bool;
	function has_theme_color_override(p_name:std.String):Bool;
	function has_theme_constant_override(p_name:std.String):Bool;
	function has_theme_icon(p_name:std.String, ?p_theme_type:std.String):Bool;
	function has_theme_stylebox(p_name:std.String, ?p_theme_type:std.String):Bool;
	function has_theme_font(p_name:std.String, ?p_theme_type:std.String):Bool;
	function has_theme_font_size(p_name:std.String, ?p_theme_type:std.String):Bool;
	function has_theme_color(p_name:std.String, ?p_theme_type:std.String):Bool;
	function has_theme_constant(p_name:std.String, ?p_theme_type:std.String):Bool;
	function get_theme_default_base_scale():Float;
	function get_theme_default_font():gd.Font;
	function get_theme_default_font_size():Int;
	function get_parent_control():gd.Control;
	function set_h_grow_direction(p_direction:gd.control.GrowDirection):Void;
	function get_h_grow_direction():gd.control.GrowDirection;
	function set_v_grow_direction(p_direction:gd.control.GrowDirection):Void;
	function get_v_grow_direction():gd.control.GrowDirection;
	function set_tooltip_text(p_hint:std.String):std.String;
	function get_tooltip_text():std.String;
	function get_tooltip(?p_at_position:gd.Vector2):std.String;
	function set_default_cursor_shape(p_shape:gd.control.CursorShape):Void;
	function get_default_cursor_shape():gd.control.CursorShape;
	function get_cursor_shape(?p_position:gd.Vector2):gd.control.CursorShape;
	function set_focus_neighbor(p_side:gd.Side, p_neighbor:std.String):Void;
	function get_focus_neighbor(p_side:gd.Side):std.String;
	function set_focus_next(p_next:std.String):std.String;
	function get_focus_next():std.String;
	function set_focus_previous(p_previous:std.String):std.String;
	function get_focus_previous():std.String;
	function force_drag(p_data:gd.Variant, p_preview:gd.Control):Void;
	function set_mouse_filter(p_filter:gd.control.MouseFilter):gd.control.MouseFilter;
	function get_mouse_filter():gd.control.MouseFilter;
	function set_force_pass_scroll_events(p_force_pass_scroll_events:Bool):Void;
	function is_force_pass_scroll_events():Bool;
	function set_clip_contents(p_enable:Bool):Bool;
	function is_clipping_contents():Bool;
	function grab_click_focus():Void;
	function set_drag_forwarding(p_drag_func:gd.Callable, p_can_drop_func:gd.Callable, p_drop_func:gd.Callable):Void;
	function set_drag_preview(p_control:gd.Control):Void;
	function is_drag_successful():Bool;
	function warp_mouse(p_position:gd.Vector2):Void;
	function set_shortcut_context(p_node:gd.Node):gd.Node;
	function get_shortcut_context():gd.Node;
	function update_minimum_size():Void;
	function set_layout_direction(p_direction:gd.control.LayoutDirection):gd.control.LayoutDirection;
	function get_layout_direction():gd.control.LayoutDirection;
	function is_layout_rtl():Bool;
	function set_auto_translate(p_enable:Bool):Bool;
	function is_auto_translating():Bool;
	function set_localize_numeral_system(p_enable:Bool):Bool;
	function is_localizing_numeral_system():Bool;
	var clip_contents(get, set) : Bool;
	function get_clip_contents():Bool;
	var custom_minimum_size(get, set) : gd.Vector2;
	var layout_direction(get, set) : gd.control.LayoutDirection;
	var offset_left(get, set) : Float;
	function get_offset_left():Float;
	function set_offset_left(v:Float):Float;
	var offset_top(get, set) : Float;
	function get_offset_top():Float;
	function set_offset_top(v:Float):Float;
	var offset_right(get, set) : Float;
	function get_offset_right():Float;
	function set_offset_right(v:Float):Float;
	var offset_bottom(get, set) : Float;
	function get_offset_bottom():Float;
	function set_offset_bottom(v:Float):Float;
	var grow_horizontal(get, set) : gd.control.GrowDirection;
	function get_grow_horizontal():gd.control.GrowDirection;
	function set_grow_horizontal(v:gd.control.GrowDirection):gd.control.GrowDirection;
	var grow_vertical(get, set) : gd.control.GrowDirection;
	function get_grow_vertical():gd.control.GrowDirection;
	function set_grow_vertical(v:gd.control.GrowDirection):gd.control.GrowDirection;
	var rotation(get, set) : Float;
	var rotation_degrees(get, set) : Float;
	var scale(get, set) : gd.Vector2;
	var pivot_offset(get, set) : gd.Vector2;
	var size_flags_horizontal(get, set) : Int;
	function get_size_flags_horizontal():Int;
	function set_size_flags_horizontal(v:Int):Int;
	var size_flags_vertical(get, set) : Int;
	function get_size_flags_vertical():Int;
	function set_size_flags_vertical(v:Int):Int;
	var size_flags_stretch_ratio(get, set) : Float;
	function get_size_flags_stretch_ratio():Float;
	function set_size_flags_stretch_ratio(v:Float):Float;
	var localize_numeral_system(get, set) : Bool;
	function get_localize_numeral_system():Bool;
	var auto_translate(get, set) : Bool;
	function get_auto_translate():Bool;
	var tooltip_text(get, set) : std.String;
	var focus_neighbor_left(get, set) : std.String;
	function get_focus_neighbor_left():std.String;
	function set_focus_neighbor_left(v:std.String):std.String;
	var focus_neighbor_top(get, set) : std.String;
	function get_focus_neighbor_top():std.String;
	function set_focus_neighbor_top(v:std.String):std.String;
	var focus_neighbor_right(get, set) : std.String;
	function get_focus_neighbor_right():std.String;
	function set_focus_neighbor_right(v:std.String):std.String;
	var focus_neighbor_bottom(get, set) : std.String;
	function get_focus_neighbor_bottom():std.String;
	function set_focus_neighbor_bottom(v:std.String):std.String;
	var focus_next(get, set) : std.String;
	var focus_previous(get, set) : std.String;
	var focus_mode(get, set) : gd.control.FocusMode;
	var mouse_filter(get, set) : gd.control.MouseFilter;
	var mouse_force_pass_scroll_events(get, set) : Bool;
	function get_mouse_force_pass_scroll_events():Bool;
	function set_mouse_force_pass_scroll_events(v:Bool):Bool;
	var mouse_default_cursor_shape(get, set) : gd.control.CursorShape;
	function get_mouse_default_cursor_shape():gd.control.CursorShape;
	function set_mouse_default_cursor_shape(v:gd.control.CursorShape):gd.control.CursorShape;
	var shortcut_context(get, set) : gd.Node;
	var theme(get, set) : gd.Theme;
	var theme_type_variation(get, set) : std.String;
}