package gd;
extern class FontFile extends gd.Font {
	function new(?owner:Dynamic);
	function load_bitmap_font(p_path:std.String):gd.Error;
	function load_dynamic_font(p_path:std.String):gd.Error;
	function set_data(p_data:gd.PackedByteArray):gd.PackedByteArray;
	function get_data():gd.PackedByteArray;
	function set_font_name(p_name:std.String):Void;
	function set_font_style_name(p_name:std.String):Void;
	function set_font_style(p_style:Int):Void;
	function set_font_weight(p_weight:Int):Void;
	function set_font_stretch(p_stretch:Int):Void;
	function set_antialiasing(p_antialiasing:gd.textserver.FontAntialiasing):gd.textserver.FontAntialiasing;
	function get_antialiasing():gd.textserver.FontAntialiasing;
	function set_disable_embedded_bitmaps(p_disable_embedded_bitmaps:Bool):Bool;
	function get_disable_embedded_bitmaps():Bool;
	function set_generate_mipmaps(p_generate_mipmaps:Bool):Bool;
	function get_generate_mipmaps():Bool;
	function set_multichannel_signed_distance_field(p_msdf:Bool):Bool;
	function is_multichannel_signed_distance_field():Bool;
	function set_msdf_pixel_range(p_msdf_pixel_range:Int):Int;
	function get_msdf_pixel_range():Int;
	function set_msdf_size(p_msdf_size:Int):Int;
	function get_msdf_size():Int;
	function set_fixed_size(p_fixed_size:Int):Int;
	function get_fixed_size():Int;
	function set_fixed_size_scale_mode(p_fixed_size_scale_mode:gd.textserver.FixedSizeScaleMode):gd.textserver.FixedSizeScaleMode;
	function get_fixed_size_scale_mode():gd.textserver.FixedSizeScaleMode;
	function set_allow_system_fallback(p_allow_system_fallback:Bool):Bool;
	function is_allow_system_fallback():Bool;
	function set_force_autohinter(p_force_autohinter:Bool):Bool;
	function is_force_autohinter():Bool;
	function set_hinting(p_hinting:gd.textserver.Hinting):gd.textserver.Hinting;
	function get_hinting():gd.textserver.Hinting;
	function set_subpixel_positioning(p_subpixel_positioning:gd.textserver.SubpixelPositioning):gd.textserver.SubpixelPositioning;
	function get_subpixel_positioning():gd.textserver.SubpixelPositioning;
	function set_oversampling(p_oversampling:Float):Float;
	function get_oversampling():Float;
	function get_cache_count():Int;
	function clear_cache():Void;
	function remove_cache(p_cache_index:Int):Void;
	function clear_size_cache(p_cache_index:Int):Void;
	function remove_size_cache(p_cache_index:Int, p_size:gd.Vector2i):Void;
	function set_variation_coordinates(p_cache_index:Int, p_variation_coordinates:gd.Dictionary):Void;
	function get_variation_coordinates(p_cache_index:Int):gd.Dictionary;
	function set_embolden(p_cache_index:Int, p_strength:Float):Void;
	function get_embolden(p_cache_index:Int):Float;
	function set_transform(p_cache_index:Int, p_transform:gd.Transform2D):Void;
	function get_transform(p_cache_index:Int):gd.Transform2D;
	function set_extra_spacing(p_cache_index:Int, p_spacing:gd.textserver.SpacingType, p_value:Int):Void;
	function get_extra_spacing(p_cache_index:Int, p_spacing:gd.textserver.SpacingType):Int;
	function set_extra_baseline_offset(p_cache_index:Int, p_baseline_offset:Float):Void;
	function get_extra_baseline_offset(p_cache_index:Int):Float;
	function set_face_index(p_cache_index:Int, p_face_index:Int):Void;
	function get_face_index(p_cache_index:Int):Int;
	function set_cache_ascent(p_cache_index:Int, p_size:Int, p_ascent:Float):Void;
	function get_cache_ascent(p_cache_index:Int, p_size:Int):Float;
	function set_cache_descent(p_cache_index:Int, p_size:Int, p_descent:Float):Void;
	function get_cache_descent(p_cache_index:Int, p_size:Int):Float;
	function set_cache_underline_position(p_cache_index:Int, p_size:Int, p_underline_position:Float):Void;
	function get_cache_underline_position(p_cache_index:Int, p_size:Int):Float;
	function set_cache_underline_thickness(p_cache_index:Int, p_size:Int, p_underline_thickness:Float):Void;
	function get_cache_underline_thickness(p_cache_index:Int, p_size:Int):Float;
	function set_cache_scale(p_cache_index:Int, p_size:Int, p_scale:Float):Void;
	function get_cache_scale(p_cache_index:Int, p_size:Int):Float;
	function get_texture_count(p_cache_index:Int, p_size:gd.Vector2i):Int;
	function clear_textures(p_cache_index:Int, p_size:gd.Vector2i):Void;
	function remove_texture(p_cache_index:Int, p_size:gd.Vector2i, p_texture_index:Int):Void;
	function set_texture_image(p_cache_index:Int, p_size:gd.Vector2i, p_texture_index:Int, p_image:gd.Image):Void;
	function get_texture_image(p_cache_index:Int, p_size:gd.Vector2i, p_texture_index:Int):gd.Image;
	function set_texture_offsets(p_cache_index:Int, p_size:gd.Vector2i, p_texture_index:Int, p_offset:gd.PackedInt32Array):Void;
	function get_texture_offsets(p_cache_index:Int, p_size:gd.Vector2i, p_texture_index:Int):gd.PackedInt32Array;
	function get_glyph_list(p_cache_index:Int, p_size:gd.Vector2i):gd.PackedInt32Array;
	function clear_glyphs(p_cache_index:Int, p_size:gd.Vector2i):Void;
	function remove_glyph(p_cache_index:Int, p_size:gd.Vector2i, p_glyph:Int):Void;
	function set_glyph_advance(p_cache_index:Int, p_size:Int, p_glyph:Int, p_advance:gd.Vector2):Void;
	function get_glyph_advance(p_cache_index:Int, p_size:Int, p_glyph:Int):gd.Vector2;
	function set_glyph_offset(p_cache_index:Int, p_size:gd.Vector2i, p_glyph:Int, p_offset:gd.Vector2):Void;
	function get_glyph_offset(p_cache_index:Int, p_size:gd.Vector2i, p_glyph:Int):gd.Vector2;
	function set_glyph_size(p_cache_index:Int, p_size:gd.Vector2i, p_glyph:Int, p_gl_size:gd.Vector2):Void;
	function get_glyph_size(p_cache_index:Int, p_size:gd.Vector2i, p_glyph:Int):gd.Vector2;
	function set_glyph_uv_rect(p_cache_index:Int, p_size:gd.Vector2i, p_glyph:Int, p_uv_rect:gd.Rect2):Void;
	function get_glyph_uv_rect(p_cache_index:Int, p_size:gd.Vector2i, p_glyph:Int):gd.Rect2;
	function set_glyph_texture_idx(p_cache_index:Int, p_size:gd.Vector2i, p_glyph:Int, p_texture_idx:Int):Void;
	function get_glyph_texture_idx(p_cache_index:Int, p_size:gd.Vector2i, p_glyph:Int):Int;
	function clear_kerning_map(p_cache_index:Int, p_size:Int):Void;
	function remove_kerning(p_cache_index:Int, p_size:Int, p_glyph_pair:gd.Vector2i):Void;
	function set_kerning(p_cache_index:Int, p_size:Int, p_glyph_pair:gd.Vector2i, p_kerning:gd.Vector2):Void;
	function get_kerning(p_cache_index:Int, p_size:Int, p_glyph_pair:gd.Vector2i):gd.Vector2;
	function render_range(p_cache_index:Int, p_size:gd.Vector2i, p_start:Int, p_end:Int):Void;
	function render_glyph(p_cache_index:Int, p_size:gd.Vector2i, p_index:Int):Void;
	function set_language_support_override(p_language:std.String, p_supported:Bool):Void;
	function get_language_support_override(p_language:std.String):Bool;
	function remove_language_support_override(p_language:std.String):Void;
	function get_language_support_overrides():gd.PackedStringArray;
	function set_script_support_override(p_script:std.String, p_supported:Bool):Void;
	function get_script_support_override(p_script:std.String):Bool;
	function remove_script_support_override(p_script:std.String):Void;
	function get_script_support_overrides():gd.PackedStringArray;
	function set_opentype_feature_overrides(p_overrides:gd.Dictionary):gd.Dictionary;
	function get_opentype_feature_overrides():gd.Dictionary;
	function get_glyph_index(p_size:Int, p_char:Int, p_variation_selector:Int):Int;
	function get_char_from_glyph_index(p_size:Int, p_glyph_index:Int):Int;
	var data(get, set) : gd.PackedByteArray;
	var generate_mipmaps(get, set) : Bool;
	var disable_embedded_bitmaps(get, set) : Bool;
	var antialiasing(get, set) : gd.textserver.FontAntialiasing;
	var subpixel_positioning(get, set) : gd.textserver.SubpixelPositioning;
	var multichannel_signed_distance_field(get, set) : Bool;
	function get_multichannel_signed_distance_field():Bool;
	var msdf_pixel_range(get, set) : Int;
	var msdf_size(get, set) : Int;
	var allow_system_fallback(get, set) : Bool;
	function get_allow_system_fallback():Bool;
	var force_autohinter(get, set) : Bool;
	function get_force_autohinter():Bool;
	var hinting(get, set) : gd.textserver.Hinting;
	var oversampling(get, set) : Float;
	var fixed_size(get, set) : Int;
	var fixed_size_scale_mode(get, set) : gd.textserver.FixedSizeScaleMode;
	var opentype_feature_overrides(get, set) : gd.Dictionary;
}