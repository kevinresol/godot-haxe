package gd;
extern class DirAccess extends gd.RefCounted {
	function new(?owner:Dynamic);
	static function open(p_path:std.String):gd.DirAccess;
	static function get_open_error():gd.Error;
	function list_dir_begin():gd.Error;
	function get_next():std.String;
	function current_is_dir():Bool;
	function list_dir_end():Void;
	function get_files():gd.PackedStringArray;
	static function get_files_at(p_path:std.String):gd.PackedStringArray;
	function get_directories():gd.PackedStringArray;
	static function get_directories_at(p_path:std.String):gd.PackedStringArray;
	static function get_drive_count():Int;
	static function get_drive_name(p_idx:Int):std.String;
	function get_current_drive():Int;
	function change_dir(p_to_dir:std.String):gd.Error;
	function get_current_dir(?p_include_drive:Bool):std.String;
	function make_dir(p_path:std.String):gd.Error;
	static function make_dir_absolute(p_path:std.String):gd.Error;
	function make_dir_recursive(p_path:std.String):gd.Error;
	static function make_dir_recursive_absolute(p_path:std.String):gd.Error;
	function file_exists(p_path:std.String):Bool;
	function dir_exists(p_path:std.String):Bool;
	static function dir_exists_absolute(p_path:std.String):Bool;
	function get_space_left():Int;
	function copy(p_from:std.String, p_to:std.String, ?p_chmod_flags:Int):gd.Error;
	static function copy_absolute(p_from:std.String, p_to:std.String, ?p_chmod_flags:Int):gd.Error;
	function rename(p_from:std.String, p_to:std.String):gd.Error;
	static function rename_absolute(p_from:std.String, p_to:std.String):gd.Error;
	function remove(p_path:std.String):gd.Error;
	static function remove_absolute(p_path:std.String):gd.Error;
	function is_link(p_path:std.String):Bool;
	function read_link(p_path:std.String):std.String;
	function create_link(p_source:std.String, p_target:std.String):gd.Error;
	function set_include_navigational(p_enable:Bool):Bool;
	function get_include_navigational():Bool;
	function set_include_hidden(p_enable:Bool):Bool;
	function get_include_hidden():Bool;
	function is_case_sensitive(p_path:std.String):Bool;
	var include_navigational(get, set) : Bool;
	var include_hidden(get, set) : Bool;
}