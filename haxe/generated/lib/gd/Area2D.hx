package gd;
extern class Area2D extends gd.CollisionObject2D {
	function new(?owner:Dynamic);
	function set_gravity_space_override_mode(p_space_override_mode:gd.area2d.SpaceOverride):Void;
	function get_gravity_space_override_mode():gd.area2d.SpaceOverride;
	function set_gravity_is_point(p_enable:Bool):Void;
	function is_gravity_a_point():Bool;
	function set_gravity_point_unit_distance(p_distance_scale:Float):Float;
	function get_gravity_point_unit_distance():Float;
	function set_gravity_point_center(p_center:gd.Vector2):gd.Vector2;
	function get_gravity_point_center():gd.Vector2;
	function set_gravity_direction(p_direction:gd.Vector2):gd.Vector2;
	function get_gravity_direction():gd.Vector2;
	function set_gravity(p_gravity:Float):Float;
	function get_gravity():Float;
	function set_linear_damp_space_override_mode(p_space_override_mode:gd.area2d.SpaceOverride):Void;
	function get_linear_damp_space_override_mode():gd.area2d.SpaceOverride;
	function set_angular_damp_space_override_mode(p_space_override_mode:gd.area2d.SpaceOverride):Void;
	function get_angular_damp_space_override_mode():gd.area2d.SpaceOverride;
	function set_linear_damp(p_linear_damp:Float):Float;
	function get_linear_damp():Float;
	function set_angular_damp(p_angular_damp:Float):Float;
	function get_angular_damp():Float;
	function set_priority(p_priority:Int):Int;
	function get_priority():Int;
	function set_monitoring(p_enable:Bool):Bool;
	function is_monitoring():Bool;
	function set_monitorable(p_enable:Bool):Bool;
	function is_monitorable():Bool;
	function has_overlapping_bodies():Bool;
	function has_overlapping_areas():Bool;
	function overlaps_body(p_body:gd.Node):Bool;
	function overlaps_area(p_area:gd.Node):Bool;
	function set_audio_bus_name(p_name:std.String):std.String;
	function get_audio_bus_name():std.String;
	function set_audio_bus_override(p_enable:Bool):Bool;
	function is_overriding_audio_bus():Bool;
	var monitoring(get, set) : Bool;
	function get_monitoring():Bool;
	var monitorable(get, set) : Bool;
	function get_monitorable():Bool;
	var priority(get, set) : Int;
	var gravity_space_override(get, set) : gd.area2d.SpaceOverride;
	function get_gravity_space_override():gd.area2d.SpaceOverride;
	function set_gravity_space_override(v:gd.area2d.SpaceOverride):gd.area2d.SpaceOverride;
	var gravity_point(get, set) : Bool;
	function get_gravity_point():Bool;
	function set_gravity_point(v:Bool):Bool;
	var gravity_point_unit_distance(get, set) : Float;
	var gravity_point_center(get, set) : gd.Vector2;
	var gravity_direction(get, set) : gd.Vector2;
	var gravity(get, set) : Float;
	var linear_damp_space_override(get, set) : gd.area2d.SpaceOverride;
	function get_linear_damp_space_override():gd.area2d.SpaceOverride;
	function set_linear_damp_space_override(v:gd.area2d.SpaceOverride):gd.area2d.SpaceOverride;
	var linear_damp(get, set) : Float;
	var angular_damp_space_override(get, set) : gd.area2d.SpaceOverride;
	function get_angular_damp_space_override():gd.area2d.SpaceOverride;
	function set_angular_damp_space_override(v:gd.area2d.SpaceOverride):gd.area2d.SpaceOverride;
	var angular_damp(get, set) : Float;
	var audio_bus_override(get, set) : Bool;
	function get_audio_bus_override():Bool;
	var audio_bus_name(get, set) : std.String;
}