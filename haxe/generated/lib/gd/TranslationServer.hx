package gd;
extern class TranslationServer extends gd.Object {
	function new(?owner:Dynamic);
	static final singleton : gd.TranslationServer;
	function set_locale(p_locale:std.String):Void;
	function get_locale():std.String;
	function get_tool_locale():std.String;
	function compare_locales(p_locale_a:std.String, p_locale_b:std.String):Int;
	function standardize_locale(p_locale:std.String):std.String;
	function get_all_languages():gd.PackedStringArray;
	function get_language_name(p_language:std.String):std.String;
	function get_all_scripts():gd.PackedStringArray;
	function get_script_name(p_script:std.String):std.String;
	function get_all_countries():gd.PackedStringArray;
	function get_country_name(p_country:std.String):std.String;
	function get_locale_name(p_locale:std.String):std.String;
	function translate(p_message:std.String, ?p_context:std.String = "&\"\""):std.String;
	function translate_plural(p_message:std.String, p_plural_message:std.String, p_n:Int, ?p_context:std.String = "&\"\""):std.String;
	function add_translation(p_translation:gd.Translation):Void;
	function remove_translation(p_translation:gd.Translation):Void;
	function get_translation_object(p_locale:std.String):gd.Translation;
	function clear():Void;
	function get_loaded_locales():gd.PackedStringArray;
	function is_pseudolocalization_enabled():Bool;
	function set_pseudolocalization_enabled(p_enabled:Bool):Bool;
	function reload_pseudolocalization():Void;
	function pseudolocalize(p_message:std.String):std.String;
	var pseudolocalization_enabled(get, set) : Bool;
	function get_pseudolocalization_enabled():Bool;
}