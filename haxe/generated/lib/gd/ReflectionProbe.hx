package gd;
extern class ReflectionProbe extends gd.VisualInstance3D {
	function new(?owner:Dynamic);
	function set_intensity(p_intensity:Float):Float;
	function get_intensity():Float;
	function set_ambient_mode(p_ambient:gd.reflectionprobe.AmbientMode):gd.reflectionprobe.AmbientMode;
	function get_ambient_mode():gd.reflectionprobe.AmbientMode;
	function set_ambient_color(p_ambient:gd.Color):gd.Color;
	function get_ambient_color():gd.Color;
	function set_ambient_color_energy(p_ambient_energy:Float):Float;
	function get_ambient_color_energy():Float;
	function set_max_distance(p_max_distance:Float):Float;
	function get_max_distance():Float;
	function set_mesh_lod_threshold(p_ratio:Float):Float;
	function get_mesh_lod_threshold():Float;
	function set_size(p_size:gd.Vector3):gd.Vector3;
	function get_size():gd.Vector3;
	function set_origin_offset(p_origin_offset:gd.Vector3):gd.Vector3;
	function get_origin_offset():gd.Vector3;
	function set_as_interior(p_enable:Bool):Void;
	function is_set_as_interior():Bool;
	function set_enable_box_projection(p_enable:Bool):Void;
	function is_box_projection_enabled():Bool;
	function set_enable_shadows(p_enable:Bool):Bool;
	function are_shadows_enabled():Bool;
	function set_cull_mask(p_layers:Int):Int;
	function get_cull_mask():Int;
	function set_reflection_mask(p_layers:Int):Int;
	function get_reflection_mask():Int;
	function set_update_mode(p_mode:gd.reflectionprobe.UpdateMode):gd.reflectionprobe.UpdateMode;
	function get_update_mode():gd.reflectionprobe.UpdateMode;
	var update_mode(get, set) : gd.reflectionprobe.UpdateMode;
	var intensity(get, set) : Float;
	var max_distance(get, set) : Float;
	var size(get, set) : gd.Vector3;
	var origin_offset(get, set) : gd.Vector3;
	var box_projection(get, set) : Bool;
	function get_box_projection():Bool;
	function set_box_projection(v:Bool):Bool;
	var interior(get, set) : Bool;
	function get_interior():Bool;
	function set_interior(v:Bool):Bool;
	var enable_shadows(get, set) : Bool;
	function get_enable_shadows():Bool;
	var cull_mask(get, set) : Int;
	var reflection_mask(get, set) : Int;
	var mesh_lod_threshold(get, set) : Float;
	var ambient_mode(get, set) : gd.reflectionprobe.AmbientMode;
	var ambient_color(get, set) : gd.Color;
	var ambient_color_energy(get, set) : Float;
}