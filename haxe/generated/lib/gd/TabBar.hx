package gd;
extern class TabBar extends gd.Control {
	function new(?owner:Dynamic);
	function set_tab_count(p_count:Int):Int;
	function get_tab_count():Int;
	function set_current_tab(p_tab_idx:Int):Int;
	function get_current_tab():Int;
	function get_previous_tab():Int;
	function select_previous_available():Bool;
	function select_next_available():Bool;
	function set_tab_title(p_tab_idx:Int, p_title:std.String):Void;
	function get_tab_title(p_tab_idx:Int):std.String;
	function set_tab_tooltip(p_tab_idx:Int, p_tooltip:std.String):Void;
	function get_tab_tooltip(p_tab_idx:Int):std.String;
	function set_tab_text_direction(p_tab_idx:Int, p_direction:gd.control.TextDirection):Void;
	function get_tab_text_direction(p_tab_idx:Int):gd.control.TextDirection;
	function set_tab_language(p_tab_idx:Int, p_language:std.String):Void;
	function get_tab_language(p_tab_idx:Int):std.String;
	function set_tab_icon(p_tab_idx:Int, p_icon:gd.Texture2D):Void;
	function get_tab_icon(p_tab_idx:Int):gd.Texture2D;
	function set_tab_icon_max_width(p_tab_idx:Int, p_width:Int):Void;
	function get_tab_icon_max_width(p_tab_idx:Int):Int;
	function set_tab_button_icon(p_tab_idx:Int, p_icon:gd.Texture2D):Void;
	function get_tab_button_icon(p_tab_idx:Int):gd.Texture2D;
	function set_tab_disabled(p_tab_idx:Int, p_disabled:Bool):Void;
	function is_tab_disabled(p_tab_idx:Int):Bool;
	function set_tab_hidden(p_tab_idx:Int, p_hidden:Bool):Void;
	function is_tab_hidden(p_tab_idx:Int):Bool;
	function set_tab_metadata(p_tab_idx:Int, p_metadata:gd.Variant):Void;
	function get_tab_metadata(p_tab_idx:Int):gd.Variant;
	function remove_tab(p_tab_idx:Int):Void;
	function get_tab_idx_at_point(p_point:gd.Vector2):Int;
	function set_tab_alignment(p_alignment:gd.tabbar.AlignmentMode):gd.tabbar.AlignmentMode;
	function get_tab_alignment():gd.tabbar.AlignmentMode;
	function set_clip_tabs(p_clip_tabs:Bool):Bool;
	function get_clip_tabs():Bool;
	function get_tab_offset():Int;
	function get_offset_buttons_visible():Bool;
	function ensure_tab_visible(p_idx:Int):Void;
	function get_tab_rect(p_tab_idx:Int):gd.Rect2;
	function move_tab(p_from:Int, p_to:Int):Void;
	function set_tab_close_display_policy(p_policy:gd.tabbar.CloseButtonDisplayPolicy):gd.tabbar.CloseButtonDisplayPolicy;
	function get_tab_close_display_policy():gd.tabbar.CloseButtonDisplayPolicy;
	function set_max_tab_width(p_width:Int):Int;
	function get_max_tab_width():Int;
	function set_scrolling_enabled(p_enabled:Bool):Bool;
	function get_scrolling_enabled():Bool;
	function set_drag_to_rearrange_enabled(p_enabled:Bool):Bool;
	function get_drag_to_rearrange_enabled():Bool;
	function set_tabs_rearrange_group(p_group_id:Int):Int;
	function get_tabs_rearrange_group():Int;
	function set_scroll_to_selected(p_enabled:Bool):Bool;
	function get_scroll_to_selected():Bool;
	function set_select_with_rmb(p_enabled:Bool):Bool;
	function get_select_with_rmb():Bool;
	function set_deselect_enabled(p_enabled:Bool):Bool;
	function get_deselect_enabled():Bool;
	function clear_tabs():Void;
	var current_tab(get, set) : Int;
	var tab_alignment(get, set) : gd.tabbar.AlignmentMode;
	var clip_tabs(get, set) : Bool;
	var tab_close_display_policy(get, set) : gd.tabbar.CloseButtonDisplayPolicy;
	var max_tab_width(get, set) : Int;
	var scrolling_enabled(get, set) : Bool;
	var drag_to_rearrange_enabled(get, set) : Bool;
	var tabs_rearrange_group(get, set) : Int;
	var scroll_to_selected(get, set) : Bool;
	var select_with_rmb(get, set) : Bool;
	var deselect_enabled(get, set) : Bool;
	var tab_count(get, set) : Int;
}