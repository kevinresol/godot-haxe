package gd;
extern class TextEdit extends gd.Control {
	function new(?owner:Dynamic);
	function _handle_unicode_input(p_unicode_char:Int, p_caret_index:Int):Void;
	function _backspace(p_caret_index:Int):Void;
	function _cut(p_caret_index:Int):Void;
	function _copy(p_caret_index:Int):Void;
	function _paste(p_caret_index:Int):Void;
	function _paste_primary_clipboard(p_caret_index:Int):Void;
	function has_ime_text():Bool;
	function cancel_ime():Void;
	function apply_ime():Void;
	function set_editable(p_enabled:Bool):Bool;
	function is_editable():Bool;
	function set_text_direction(p_direction:gd.control.TextDirection):gd.control.TextDirection;
	function get_text_direction():gd.control.TextDirection;
	function set_language(p_language:std.String):std.String;
	function get_language():std.String;
	function set_structured_text_bidi_override(p_parser:gd.textserver.StructuredTextParser):gd.textserver.StructuredTextParser;
	function get_structured_text_bidi_override():gd.textserver.StructuredTextParser;
	function set_structured_text_bidi_override_options(p_args:gd.Array):gd.Array;
	function get_structured_text_bidi_override_options():gd.Array;
	function set_tab_size(p_size:Int):Void;
	function get_tab_size():Int;
	function set_indent_wrapped_lines(p_enabled:Bool):Bool;
	function is_indent_wrapped_lines():Bool;
	function set_overtype_mode_enabled(p_enabled:Bool):Void;
	function is_overtype_mode_enabled():Bool;
	function set_context_menu_enabled(p_enabled:Bool):Bool;
	function is_context_menu_enabled():Bool;
	function set_shortcut_keys_enabled(p_enabled:Bool):Bool;
	function is_shortcut_keys_enabled():Bool;
	function set_virtual_keyboard_enabled(p_enabled:Bool):Bool;
	function is_virtual_keyboard_enabled():Bool;
	function set_middle_mouse_paste_enabled(p_enabled:Bool):Bool;
	function is_middle_mouse_paste_enabled():Bool;
	function clear():Void;
	function set_text(p_text:std.String):std.String;
	function get_text():std.String;
	function get_line_count():Int;
	function set_placeholder(p_text:std.String):Void;
	function get_placeholder():std.String;
	function set_line(p_line:Int, p_new_text:std.String):Void;
	function get_line(p_line:Int):std.String;
	function get_line_width(p_line:Int, ?p_wrap_index:Int):Int;
	function get_line_height():Int;
	function get_indent_level(p_line:Int):Int;
	function get_first_non_whitespace_column(p_line:Int):Int;
	function swap_lines(p_from_line:Int, p_to_line:Int):Void;
	function insert_line_at(p_line:Int, p_text:std.String):Void;
	function remove_line_at(p_line:Int, ?p_move_carets_down:Bool):Void;
	function insert_text_at_caret(p_text:std.String, ?p_caret_index:Int):Void;
	function insert_text(p_text:std.String, p_line:Int, p_column:Int, ?p_before_selection_begin:Bool, ?p_before_selection_end:Bool):Void;
	function remove_text(p_from_line:Int, p_from_column:Int, p_to_line:Int, p_to_column:Int):Void;
	function get_last_unhidden_line():Int;
	function get_next_visible_line_offset_from(p_line:Int, p_visible_amount:Int):Int;
	function get_next_visible_line_index_offset_from(p_line:Int, p_wrap_index:Int, p_visible_amount:Int):gd.Vector2i;
	function backspace(?p_caret_index:Int):Void;
	function cut(?p_caret_index:Int):Void;
	function copy(?p_caret_index:Int):Void;
	function paste(?p_caret_index:Int):Void;
	function paste_primary_clipboard(?p_caret_index:Int):Void;
	function start_action(p_action:gd.textedit.EditAction):Void;
	function end_action():Void;
	function begin_complex_operation():Void;
	function end_complex_operation():Void;
	function has_undo():Bool;
	function has_redo():Bool;
	function undo():Void;
	function redo():Void;
	function clear_undo_history():Void;
	function tag_saved_version():Void;
	function get_version():Int;
	function get_saved_version():Int;
	function set_search_text(p_search_text:std.String):Void;
	function set_search_flags(p_flags:Int):Void;
	function search(p_text:std.String, p_flags:Int, p_from_line:Int, p_from_column:Int):gd.Vector2i;
	function set_tooltip_request_func(p_callback:gd.Callable):Void;
	function get_local_mouse_pos():gd.Vector2;
	function get_word_at_pos(p_position:gd.Vector2):std.String;
	function get_line_column_at_pos(p_position:gd.Vector2i, ?p_allow_out_of_bounds:Bool):gd.Vector2i;
	function get_pos_at_line_column(p_line:Int, p_column:Int):gd.Vector2i;
	function get_rect_at_line_column(p_line:Int, p_column:Int):gd.Rect2i;
	function get_minimap_line_at_pos(p_position:gd.Vector2i):Int;
	function is_dragging_cursor():Bool;
	function is_mouse_over_selection(p_edges:Bool, ?p_caret_index:Int):Bool;
	function set_caret_type(p_type:gd.textedit.CaretType):gd.textedit.CaretType;
	function get_caret_type():gd.textedit.CaretType;
	function set_caret_blink_enabled(p_enable:Bool):Void;
	function is_caret_blink_enabled():Bool;
	function set_caret_blink_interval(p_interval:Float):Float;
	function get_caret_blink_interval():Float;
	function set_draw_caret_when_editable_disabled(p_enable:Bool):Void;
	function is_drawing_caret_when_editable_disabled():Bool;
	function set_move_caret_on_right_click_enabled(p_enable:Bool):Void;
	function is_move_caret_on_right_click_enabled():Bool;
	function set_caret_mid_grapheme_enabled(p_enabled:Bool):Void;
	function is_caret_mid_grapheme_enabled():Bool;
	function set_multiple_carets_enabled(p_enabled:Bool):Void;
	function is_multiple_carets_enabled():Bool;
	function add_caret(p_line:Int, p_column:Int):Int;
	function remove_caret(p_caret:Int):Void;
	function remove_secondary_carets():Void;
	function get_caret_count():Int;
	function add_caret_at_carets(p_below:Bool):Void;
	function get_sorted_carets(?p_include_ignored_carets:Bool):gd.PackedInt32Array;
	function collapse_carets(p_from_line:Int, p_from_column:Int, p_to_line:Int, p_to_column:Int, ?p_inclusive:Bool):Void;
	function merge_overlapping_carets():Void;
	function begin_multicaret_edit():Void;
	function end_multicaret_edit():Void;
	function is_in_mulitcaret_edit():Bool;
	function multicaret_edit_ignore_caret(p_caret_index:Int):Bool;
	function is_caret_visible(?p_caret_index:Int):Bool;
	function get_caret_draw_pos(?p_caret_index:Int):gd.Vector2;
	function set_caret_line(p_line:Int, ?p_adjust_viewport:Bool, ?p_can_be_hidden:Bool, ?p_wrap_index:Int, ?p_caret_index:Int):Void;
	function get_caret_line(?p_caret_index:Int):Int;
	function set_caret_column(p_column:Int, ?p_adjust_viewport:Bool, ?p_caret_index:Int):Void;
	function get_caret_column(?p_caret_index:Int):Int;
	function get_caret_wrap_index(?p_caret_index:Int):Int;
	function get_word_under_caret(?p_caret_index:Int):std.String;
	function set_use_default_word_separators(p_enabled:Bool):Bool;
	function is_default_word_separators_enabled():Bool;
	function set_use_custom_word_separators(p_enabled:Bool):Bool;
	function is_custom_word_separators_enabled():Bool;
	function set_custom_word_separators(p_custom_word_separators:std.String):std.String;
	function get_custom_word_separators():std.String;
	function set_selecting_enabled(p_enable:Bool):Bool;
	function is_selecting_enabled():Bool;
	function set_deselect_on_focus_loss_enabled(p_enable:Bool):Bool;
	function is_deselect_on_focus_loss_enabled():Bool;
	function set_drag_and_drop_selection_enabled(p_enable:Bool):Bool;
	function is_drag_and_drop_selection_enabled():Bool;
	function set_selection_mode(p_mode:gd.textedit.SelectionMode):Void;
	function get_selection_mode():gd.textedit.SelectionMode;
	function select_all():Void;
	function select_word_under_caret(?p_caret_index:Int):Void;
	function add_selection_for_next_occurrence():Void;
	function skip_selection_for_next_occurrence():Void;
	function select(p_origin_line:Int, p_origin_column:Int, p_caret_line:Int, p_caret_column:Int, ?p_caret_index:Int):Void;
	function has_selection(?p_caret_index:Int):Bool;
	function get_selected_text(?p_caret_index:Int):std.String;
	function get_selection_at_line_column(p_line:Int, p_column:Int, ?p_include_edges:Bool, ?p_only_selections:Bool):Int;
	function get_selection_origin_line(?p_caret_index:Int):Int;
	function get_selection_origin_column(?p_caret_index:Int):Int;
	function set_selection_origin_line(p_line:Int, ?p_can_be_hidden:Bool, ?p_wrap_index:Int, ?p_caret_index:Int):Void;
	function set_selection_origin_column(p_column:Int, ?p_caret_index:Int):Void;
	function get_selection_from_line(?p_caret_index:Int):Int;
	function get_selection_from_column(?p_caret_index:Int):Int;
	function get_selection_to_line(?p_caret_index:Int):Int;
	function get_selection_to_column(?p_caret_index:Int):Int;
	function is_caret_after_selection_origin(?p_caret_index:Int):Bool;
	function deselect(?p_caret_index:Int):Void;
	function delete_selection(?p_caret_index:Int):Void;
	function set_line_wrapping_mode(p_mode:gd.textedit.LineWrappingMode):Void;
	function get_line_wrapping_mode():gd.textedit.LineWrappingMode;
	function set_autowrap_mode(p_autowrap_mode:gd.textserver.AutowrapMode):gd.textserver.AutowrapMode;
	function get_autowrap_mode():gd.textserver.AutowrapMode;
	function is_line_wrapped(p_line:Int):Bool;
	function get_line_wrap_count(p_line:Int):Int;
	function get_line_wrap_index_at_column(p_line:Int, p_column:Int):Int;
	function get_line_wrapped_text(p_line:Int):gd.PackedStringArray;
	function set_smooth_scroll_enabled(p_enable:Bool):Void;
	function is_smooth_scroll_enabled():Bool;
	function get_v_scroll_bar():gd.VScrollBar;
	function get_h_scroll_bar():gd.HScrollBar;
	function set_v_scroll(p_value:Float):Void;
	function get_v_scroll():Float;
	function set_h_scroll(p_value:Int):Void;
	function get_h_scroll():Int;
	function set_scroll_past_end_of_file_enabled(p_enable:Bool):Void;
	function is_scroll_past_end_of_file_enabled():Bool;
	function set_v_scroll_speed(p_speed:Float):Void;
	function get_v_scroll_speed():Float;
	function set_fit_content_height_enabled(p_enabled:Bool):Void;
	function is_fit_content_height_enabled():Bool;
	function get_scroll_pos_for_line(p_line:Int, ?p_wrap_index:Int):Float;
	function set_line_as_first_visible(p_line:Int, ?p_wrap_index:Int):Void;
	function get_first_visible_line():Int;
	function set_line_as_center_visible(p_line:Int, ?p_wrap_index:Int):Void;
	function set_line_as_last_visible(p_line:Int, ?p_wrap_index:Int):Void;
	function get_last_full_visible_line():Int;
	function get_last_full_visible_line_wrap_index():Int;
	function get_visible_line_count():Int;
	function get_visible_line_count_in_range(p_from_line:Int, p_to_line:Int):Int;
	function get_total_visible_line_count():Int;
	function adjust_viewport_to_caret(?p_caret_index:Int):Void;
	function center_viewport_to_caret(?p_caret_index:Int):Void;
	function set_draw_minimap(p_enabled:Bool):Void;
	function is_drawing_minimap():Bool;
	function set_minimap_width(p_width:Int):Int;
	function get_minimap_width():Int;
	function get_minimap_visible_lines():Int;
	function add_gutter(?p_at:Int):Void;
	function remove_gutter(p_gutter:Int):Void;
	function get_gutter_count():Int;
	function set_gutter_name(p_gutter:Int, p_name:std.String):Void;
	function get_gutter_name(p_gutter:Int):std.String;
	function set_gutter_type(p_gutter:Int, p_type:gd.textedit.GutterType):Void;
	function get_gutter_type(p_gutter:Int):gd.textedit.GutterType;
	function set_gutter_width(p_gutter:Int, p_width:Int):Void;
	function get_gutter_width(p_gutter:Int):Int;
	function set_gutter_draw(p_gutter:Int, p_draw:Bool):Void;
	function is_gutter_drawn(p_gutter:Int):Bool;
	function set_gutter_clickable(p_gutter:Int, p_clickable:Bool):Void;
	function is_gutter_clickable(p_gutter:Int):Bool;
	function set_gutter_overwritable(p_gutter:Int, p_overwritable:Bool):Void;
	function is_gutter_overwritable(p_gutter:Int):Bool;
	function merge_gutters(p_from_line:Int, p_to_line:Int):Void;
	function set_gutter_custom_draw(p_column:Int, p_draw_callback:gd.Callable):Void;
	function get_total_gutter_width():Int;
	function set_line_gutter_metadata(p_line:Int, p_gutter:Int, p_metadata:gd.Variant):Void;
	function get_line_gutter_metadata(p_line:Int, p_gutter:Int):gd.Variant;
	function set_line_gutter_text(p_line:Int, p_gutter:Int, p_text:std.String):Void;
	function get_line_gutter_text(p_line:Int, p_gutter:Int):std.String;
	function set_line_gutter_icon(p_line:Int, p_gutter:Int, p_icon:gd.Texture2D):Void;
	function get_line_gutter_icon(p_line:Int, p_gutter:Int):gd.Texture2D;
	function set_line_gutter_item_color(p_line:Int, p_gutter:Int, p_color:gd.Color):Void;
	function get_line_gutter_item_color(p_line:Int, p_gutter:Int):gd.Color;
	function set_line_gutter_clickable(p_line:Int, p_gutter:Int, p_clickable:Bool):Void;
	function is_line_gutter_clickable(p_line:Int, p_gutter:Int):Bool;
	function set_line_background_color(p_line:Int, p_color:gd.Color):Void;
	function get_line_background_color(p_line:Int):gd.Color;
	function set_syntax_highlighter(p_syntax_highlighter:gd.SyntaxHighlighter):gd.SyntaxHighlighter;
	function get_syntax_highlighter():gd.SyntaxHighlighter;
	function set_highlight_current_line(p_enabled:Bool):Bool;
	function is_highlight_current_line_enabled():Bool;
	function set_highlight_all_occurrences(p_enabled:Bool):Bool;
	function is_highlight_all_occurrences_enabled():Bool;
	function get_draw_control_chars():Bool;
	function set_draw_control_chars(p_enabled:Bool):Bool;
	function set_draw_tabs(p_enabled:Bool):Bool;
	function is_drawing_tabs():Bool;
	function set_draw_spaces(p_enabled:Bool):Bool;
	function is_drawing_spaces():Bool;
	function get_menu():gd.PopupMenu;
	function is_menu_visible():Bool;
	function menu_option(p_option:Int):Void;
	function adjust_carets_after_edit(p_caret:Int, p_from_line:Int, p_from_col:Int, p_to_line:Int, p_to_col:Int):Void;
	function get_caret_index_edit_order():gd.PackedInt32Array;
	function get_selection_line(?p_caret_index:Int):Int;
	function get_selection_column(?p_caret_index:Int):Int;
	var text(get, set) : std.String;
	var placeholder_text(get, set) : std.String;
	function get_placeholder_text():std.String;
	function set_placeholder_text(v:std.String):std.String;
	var editable(get, set) : Bool;
	function get_editable():Bool;
	var context_menu_enabled(get, set) : Bool;
	function get_context_menu_enabled():Bool;
	var shortcut_keys_enabled(get, set) : Bool;
	function get_shortcut_keys_enabled():Bool;
	var selecting_enabled(get, set) : Bool;
	function get_selecting_enabled():Bool;
	var deselect_on_focus_loss_enabled(get, set) : Bool;
	function get_deselect_on_focus_loss_enabled():Bool;
	var drag_and_drop_selection_enabled(get, set) : Bool;
	function get_drag_and_drop_selection_enabled():Bool;
	var virtual_keyboard_enabled(get, set) : Bool;
	function get_virtual_keyboard_enabled():Bool;
	var middle_mouse_paste_enabled(get, set) : Bool;
	function get_middle_mouse_paste_enabled():Bool;
	var wrap_mode(get, set) : gd.textedit.LineWrappingMode;
	function get_wrap_mode():gd.textedit.LineWrappingMode;
	function set_wrap_mode(v:gd.textedit.LineWrappingMode):gd.textedit.LineWrappingMode;
	var autowrap_mode(get, set) : gd.textserver.AutowrapMode;
	var indent_wrapped_lines(get, set) : Bool;
	function get_indent_wrapped_lines():Bool;
	var scroll_smooth(get, set) : Bool;
	function get_scroll_smooth():Bool;
	function set_scroll_smooth(v:Bool):Bool;
	var scroll_v_scroll_speed(get, set) : Float;
	function get_scroll_v_scroll_speed():Float;
	function set_scroll_v_scroll_speed(v:Float):Float;
	var scroll_past_end_of_file(get, set) : Bool;
	function get_scroll_past_end_of_file():Bool;
	function set_scroll_past_end_of_file(v:Bool):Bool;
	var scroll_vertical(get, set) : Float;
	function get_scroll_vertical():Float;
	function set_scroll_vertical(v:Float):Float;
	var scroll_horizontal(get, set) : Int;
	function get_scroll_horizontal():Int;
	function set_scroll_horizontal(v:Int):Int;
	var scroll_fit_content_height(get, set) : Bool;
	function get_scroll_fit_content_height():Bool;
	function set_scroll_fit_content_height(v:Bool):Bool;
	var minimap_draw(get, set) : Bool;
	function get_minimap_draw():Bool;
	function set_minimap_draw(v:Bool):Bool;
	var minimap_width(get, set) : Int;
	var caret_type(get, set) : gd.textedit.CaretType;
	var caret_blink(get, set) : Bool;
	function get_caret_blink():Bool;
	function set_caret_blink(v:Bool):Bool;
	var caret_blink_interval(get, set) : Float;
	var caret_draw_when_editable_disabled(get, set) : Bool;
	function get_caret_draw_when_editable_disabled():Bool;
	function set_caret_draw_when_editable_disabled(v:Bool):Bool;
	var caret_move_on_right_click(get, set) : Bool;
	function get_caret_move_on_right_click():Bool;
	function set_caret_move_on_right_click(v:Bool):Bool;
	var caret_mid_grapheme(get, set) : Bool;
	function get_caret_mid_grapheme():Bool;
	function set_caret_mid_grapheme(v:Bool):Bool;
	var caret_multiple(get, set) : Bool;
	function get_caret_multiple():Bool;
	function set_caret_multiple(v:Bool):Bool;
	var use_default_word_separators(get, set) : Bool;
	function get_use_default_word_separators():Bool;
	var use_custom_word_separators(get, set) : Bool;
	function get_use_custom_word_separators():Bool;
	var custom_word_separators(get, set) : std.String;
	var syntax_highlighter(get, set) : gd.SyntaxHighlighter;
	var highlight_all_occurrences(get, set) : Bool;
	function get_highlight_all_occurrences():Bool;
	var highlight_current_line(get, set) : Bool;
	function get_highlight_current_line():Bool;
	var draw_control_chars(get, set) : Bool;
	var draw_tabs(get, set) : Bool;
	function get_draw_tabs():Bool;
	var draw_spaces(get, set) : Bool;
	function get_draw_spaces():Bool;
	var text_direction(get, set) : gd.control.TextDirection;
	var language(get, set) : std.String;
	var structured_text_bidi_override(get, set) : gd.textserver.StructuredTextParser;
	var structured_text_bidi_override_options(get, set) : gd.Array;
}