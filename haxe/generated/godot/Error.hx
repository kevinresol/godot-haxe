package godot;
@:include("godot_cpp/classes/global_constants.hpp") @:native("godot::Error") extern enum abstract Error(cpp.UInt32) to cpp.UInt32 {
	final OK;
	final FAILED;
	final ERR_UNAVAILABLE;
	final ERR_UNCONFIGURED;
	final ERR_UNAUTHORIZED;
	final ERR_PARAMETER_RANGE_ERROR;
	final ERR_OUT_OF_MEMORY;
	final ERR_FILE_NOT_FOUND;
	final ERR_FILE_BAD_DRIVE;
	final ERR_FILE_BAD_PATH;
	final ERR_FILE_NO_PERMISSION;
	final ERR_FILE_ALREADY_IN_USE;
	final ERR_FILE_CANT_OPEN;
	final ERR_FILE_CANT_WRITE;
	final ERR_FILE_CANT_READ;
	final ERR_FILE_UNRECOGNIZED;
	final ERR_FILE_CORRUPT;
	final ERR_FILE_MISSING_DEPENDENCIES;
	final ERR_FILE_EOF;
	final ERR_CANT_OPEN;
	final ERR_CANT_CREATE;
	final ERR_QUERY_FAILED;
	final ERR_ALREADY_IN_USE;
	final ERR_LOCKED;
	final ERR_TIMEOUT;
	final ERR_CANT_CONNECT;
	final ERR_CANT_RESOLVE;
	final ERR_CONNECTION_ERROR;
	final ERR_CANT_ACQUIRE_RESOURCE;
	final ERR_CANT_FORK;
	final ERR_INVALID_DATA;
	final ERR_INVALID_PARAMETER;
	final ERR_ALREADY_EXISTS;
	final ERR_DOES_NOT_EXIST;
	final ERR_DATABASE_CANT_READ;
	final ERR_DATABASE_CANT_WRITE;
	final ERR_COMPILATION_FAILED;
	final ERR_METHOD_NOT_FOUND;
	final ERR_LINK_FAILED;
	final ERR_SCRIPT_FAILED;
	final ERR_CYCLIC_LINK;
	final ERR_INVALID_DECLARATION;
	final ERR_DUPLICATE_SYMBOL;
	final ERR_PARSE_ERROR;
	final ERR_BUSY;
	final ERR_SKIP;
	final ERR_HELP;
	final ERR_BUG;
	final ERR_PRINTER_ON_FIRE;
}