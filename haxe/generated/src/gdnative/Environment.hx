package gdnative;
/**
	Class
**/
@:forward abstract Environment(gdnative.Ref<Environment_extern>) from gdnative.Ref<Environment_extern> to gdnative.Ref<Environment_extern> {
	@:from
	static inline function fromWrapper(v:gd.Environment):gdnative.Environment return @:privateAccess v.__ref.ptr().reinterpret();
	@:to
	inline function toWrapper():gd.Environment {
		final v = new gd.Environment(this.ptr());
		v.__ref = new gdnative.Ref.Ref_extern(untyped __cpp__('{0}.get()', this));
		return v;
	}
}
@:include("godot_cpp/classes/environment.hpp") @:native("godot::Environment") @:structAccess extern class Environment_extern extends gdnative.Resource.Resource_extern {
	extern static inline function __alloc():cpp.Pointer<Environment_extern> return gdnative.Memory.Memory_extern.memnew(untyped __cpp__("godot::Environment"));
	function set_background(p_mode:gdnative.environment.BGMode):Void;
	function get_background():gdnative.environment.BGMode;
	function set_sky(p_sky:gdnative.Sky):Void;
	function get_sky():gdnative.Sky;
	function set_sky_custom_fov(p_scale:Float):Void;
	function get_sky_custom_fov():Float;
	function set_sky_rotation(p_euler_radians:gdnative.Vector3):Void;
	function get_sky_rotation():gdnative.Vector3;
	function set_bg_color(p_color:gdnative.Color):Void;
	function get_bg_color():gdnative.Color;
	function set_bg_energy_multiplier(p_energy:Float):Void;
	function get_bg_energy_multiplier():Float;
	function set_bg_intensity(p_energy:Float):Void;
	function get_bg_intensity():Float;
	function set_canvas_max_layer(p_layer:Int):Void;
	function get_canvas_max_layer():Int;
	function set_camera_feed_id(p_id:Int):Void;
	function get_camera_feed_id():Int;
	function set_ambient_light_color(p_color:gdnative.Color):Void;
	function get_ambient_light_color():gdnative.Color;
	function set_ambient_source(p_source:gdnative.environment.AmbientSource):Void;
	function get_ambient_source():gdnative.environment.AmbientSource;
	function set_ambient_light_energy(p_energy:Float):Void;
	function get_ambient_light_energy():Float;
	function set_ambient_light_sky_contribution(p_ratio:Float):Void;
	function get_ambient_light_sky_contribution():Float;
	function set_reflection_source(p_source:gdnative.environment.ReflectionSource):Void;
	function get_reflection_source():gdnative.environment.ReflectionSource;
	function set_tonemapper(p_mode:gdnative.environment.ToneMapper):Void;
	function get_tonemapper():gdnative.environment.ToneMapper;
	function set_tonemap_exposure(p_exposure:Float):Void;
	function get_tonemap_exposure():Float;
	function set_tonemap_white(p_white:Float):Void;
	function get_tonemap_white():Float;
	function set_ssr_enabled(p_enabled:Bool):Void;
	function is_ssr_enabled():Bool;
	function set_ssr_max_steps(p_max_steps:Int):Void;
	function get_ssr_max_steps():Int;
	function set_ssr_fade_in(p_fade_in:Float):Void;
	function get_ssr_fade_in():Float;
	function set_ssr_fade_out(p_fade_out:Float):Void;
	function get_ssr_fade_out():Float;
	function set_ssr_depth_tolerance(p_depth_tolerance:Float):Void;
	function get_ssr_depth_tolerance():Float;
	function set_ssao_enabled(p_enabled:Bool):Void;
	function is_ssao_enabled():Bool;
	function set_ssao_radius(p_radius:Float):Void;
	function get_ssao_radius():Float;
	function set_ssao_intensity(p_intensity:Float):Void;
	function get_ssao_intensity():Float;
	function set_ssao_power(p_power:Float):Void;
	function get_ssao_power():Float;
	function set_ssao_detail(p_detail:Float):Void;
	function get_ssao_detail():Float;
	function set_ssao_horizon(p_horizon:Float):Void;
	function get_ssao_horizon():Float;
	function set_ssao_sharpness(p_sharpness:Float):Void;
	function get_ssao_sharpness():Float;
	function set_ssao_direct_light_affect(p_amount:Float):Void;
	function get_ssao_direct_light_affect():Float;
	function set_ssao_ao_channel_affect(p_amount:Float):Void;
	function get_ssao_ao_channel_affect():Float;
	function set_ssil_enabled(p_enabled:Bool):Void;
	function is_ssil_enabled():Bool;
	function set_ssil_radius(p_radius:Float):Void;
	function get_ssil_radius():Float;
	function set_ssil_intensity(p_intensity:Float):Void;
	function get_ssil_intensity():Float;
	function set_ssil_sharpness(p_sharpness:Float):Void;
	function get_ssil_sharpness():Float;
	function set_ssil_normal_rejection(p_normal_rejection:Float):Void;
	function get_ssil_normal_rejection():Float;
	function set_sdfgi_enabled(p_enabled:Bool):Void;
	function is_sdfgi_enabled():Bool;
	function set_sdfgi_cascades(p_amount:Int):Void;
	function get_sdfgi_cascades():Int;
	function set_sdfgi_min_cell_size(p_size:Float):Void;
	function get_sdfgi_min_cell_size():Float;
	function set_sdfgi_max_distance(p_distance:Float):Void;
	function get_sdfgi_max_distance():Float;
	function set_sdfgi_cascade0_distance(p_distance:Float):Void;
	function get_sdfgi_cascade0_distance():Float;
	function set_sdfgi_y_scale(p_scale:gdnative.environment.SDFGIYScale):Void;
	function get_sdfgi_y_scale():gdnative.environment.SDFGIYScale;
	function set_sdfgi_use_occlusion(p_enable:Bool):Void;
	function is_sdfgi_using_occlusion():Bool;
	function set_sdfgi_bounce_feedback(p_amount:Float):Void;
	function get_sdfgi_bounce_feedback():Float;
	function set_sdfgi_read_sky_light(p_enable:Bool):Void;
	function is_sdfgi_reading_sky_light():Bool;
	function set_sdfgi_energy(p_amount:Float):Void;
	function get_sdfgi_energy():Float;
	function set_sdfgi_normal_bias(p_bias:Float):Void;
	function get_sdfgi_normal_bias():Float;
	function set_sdfgi_probe_bias(p_bias:Float):Void;
	function get_sdfgi_probe_bias():Float;
	function set_glow_enabled(p_enabled:Bool):Void;
	function is_glow_enabled():Bool;
	function set_glow_level(p_idx:Int, p_intensity:Float):Void;
	function get_glow_level(p_idx:Int):Float;
	function set_glow_normalized(p_normalize:Bool):Void;
	function is_glow_normalized():Bool;
	function set_glow_intensity(p_intensity:Float):Void;
	function get_glow_intensity():Float;
	function set_glow_strength(p_strength:Float):Void;
	function get_glow_strength():Float;
	function set_glow_mix(p_mix:Float):Void;
	function get_glow_mix():Float;
	function set_glow_bloom(p_amount:Float):Void;
	function get_glow_bloom():Float;
	function set_glow_blend_mode(p_mode:gdnative.environment.GlowBlendMode):Void;
	function get_glow_blend_mode():gdnative.environment.GlowBlendMode;
	function set_glow_hdr_bleed_threshold(p_threshold:Float):Void;
	function get_glow_hdr_bleed_threshold():Float;
	function set_glow_hdr_bleed_scale(p_scale:Float):Void;
	function get_glow_hdr_bleed_scale():Float;
	function set_glow_hdr_luminance_cap(p_amount:Float):Void;
	function get_glow_hdr_luminance_cap():Float;
	function set_glow_map_strength(p_strength:Float):Void;
	function get_glow_map_strength():Float;
	function set_glow_map(p_mode:gdnative.Texture):Void;
	function get_glow_map():gdnative.Texture;
	function set_fog_enabled(p_enabled:Bool):Void;
	function is_fog_enabled():Bool;
	function set_fog_mode(p_mode:gdnative.environment.FogMode):Void;
	function get_fog_mode():gdnative.environment.FogMode;
	function set_fog_light_color(p_light_color:gdnative.Color):Void;
	function get_fog_light_color():gdnative.Color;
	function set_fog_light_energy(p_light_energy:Float):Void;
	function get_fog_light_energy():Float;
	function set_fog_sun_scatter(p_sun_scatter:Float):Void;
	function get_fog_sun_scatter():Float;
	function set_fog_density(p_density:Float):Void;
	function get_fog_density():Float;
	function set_fog_height(p_height:Float):Void;
	function get_fog_height():Float;
	function set_fog_height_density(p_height_density:Float):Void;
	function get_fog_height_density():Float;
	function set_fog_aerial_perspective(p_aerial_perspective:Float):Void;
	function get_fog_aerial_perspective():Float;
	function set_fog_sky_affect(p_sky_affect:Float):Void;
	function get_fog_sky_affect():Float;
	function set_fog_depth_curve(p_curve:Float):Void;
	function get_fog_depth_curve():Float;
	function set_fog_depth_begin(p_begin:Float):Void;
	function get_fog_depth_begin():Float;
	function set_fog_depth_end(p_end:Float):Void;
	function get_fog_depth_end():Float;
	function set_volumetric_fog_enabled(p_enabled:Bool):Void;
	function is_volumetric_fog_enabled():Bool;
	function set_volumetric_fog_emission(p_color:gdnative.Color):Void;
	function get_volumetric_fog_emission():gdnative.Color;
	function set_volumetric_fog_albedo(p_color:gdnative.Color):Void;
	function get_volumetric_fog_albedo():gdnative.Color;
	function set_volumetric_fog_density(p_density:Float):Void;
	function get_volumetric_fog_density():Float;
	function set_volumetric_fog_emission_energy(p_begin:Float):Void;
	function get_volumetric_fog_emission_energy():Float;
	function set_volumetric_fog_anisotropy(p_anisotropy:Float):Void;
	function get_volumetric_fog_anisotropy():Float;
	function set_volumetric_fog_length(p_length:Float):Void;
	function get_volumetric_fog_length():Float;
	function set_volumetric_fog_detail_spread(p_detail_spread:Float):Void;
	function get_volumetric_fog_detail_spread():Float;
	function set_volumetric_fog_gi_inject(p_gi_inject:Float):Void;
	function get_volumetric_fog_gi_inject():Float;
	function set_volumetric_fog_ambient_inject(p_enabled:Float):Void;
	function get_volumetric_fog_ambient_inject():Float;
	function set_volumetric_fog_sky_affect(p_sky_affect:Float):Void;
	function get_volumetric_fog_sky_affect():Float;
	function set_volumetric_fog_temporal_reprojection_enabled(p_enabled:Bool):Void;
	function is_volumetric_fog_temporal_reprojection_enabled():Bool;
	function set_volumetric_fog_temporal_reprojection_amount(p_temporal_reprojection_amount:Float):Void;
	function get_volumetric_fog_temporal_reprojection_amount():Float;
	function set_adjustment_enabled(p_enabled:Bool):Void;
	function is_adjustment_enabled():Bool;
	function set_adjustment_brightness(p_brightness:Float):Void;
	function get_adjustment_brightness():Float;
	function set_adjustment_contrast(p_contrast:Float):Void;
	function get_adjustment_contrast():Float;
	function set_adjustment_saturation(p_saturation:Float):Void;
	function get_adjustment_saturation():Float;
	function set_adjustment_color_correction(p_color_correction:gdnative.Texture):Void;
	function get_adjustment_color_correction():gdnative.Texture;
}