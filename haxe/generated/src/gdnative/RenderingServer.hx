package gdnative;
@:include("godot_cpp/classes/rendering_server.hpp") @:native("godot::RenderingServer") @:structAccess extern class RenderingServer_extern extends gdnative.Object.Object_extern {
	extern static inline function __alloc():cpp.Pointer<RenderingServer_extern> return gdnative.Memory.Memory_extern.memnew(untyped __cpp__("godot::RenderingServer"));
	static function get_singleton():cpp.Pointer<RenderingServer_extern>;
	function texture_2d_create(p_image:gdnative.Image):gdnative.RID;
	function texture_proxy_create(p_base:gdnative.RID):gdnative.RID;
	function texture_2d_update(p_texture:gdnative.RID, p_image:gdnative.Image, p_layer:Int):Void;
	function texture_proxy_update(p_texture:gdnative.RID, p_proxy_to:gdnative.RID):Void;
	function texture_2d_placeholder_create():gdnative.RID;
	function texture_2d_layered_placeholder_create(p_layered_type:gdnative.renderingserver.TextureLayeredType):gdnative.RID;
	function texture_3d_placeholder_create():gdnative.RID;
	function texture_2d_get(p_texture:gdnative.RID):gdnative.Image;
	function texture_2d_layer_get(p_texture:gdnative.RID, p_layer:Int):gdnative.Image;
	function texture_replace(p_texture:gdnative.RID, p_by_texture:gdnative.RID):Void;
	function texture_set_size_override(p_texture:gdnative.RID, p_width:Int, p_height:Int):Void;
	function texture_set_path(p_texture:gdnative.RID, p_path:gdnative.String):Void;
	function texture_get_path(p_texture:gdnative.RID):gdnative.String;
	function texture_get_format(p_texture:gdnative.RID):gdnative.image.Format;
	function texture_set_force_redraw_if_visible(p_texture:gdnative.RID, p_enable:Bool):Void;
	overload function texture_rd_create(p_rd_texture:gdnative.RID, p_layer_type:gdnative.renderingserver.TextureLayeredType):gdnative.RID;
	overload function texture_rd_create(p_rd_texture:gdnative.RID):gdnative.RID;
	overload function texture_get_rd_texture(p_texture:gdnative.RID, p_srgb:Bool):gdnative.RID;
	overload function texture_get_rd_texture(p_texture:gdnative.RID):gdnative.RID;
	overload function texture_get_native_handle(p_texture:gdnative.RID, p_srgb:Bool):Int;
	overload function texture_get_native_handle(p_texture:gdnative.RID):Int;
	function shader_create():gdnative.RID;
	function shader_set_code(p_shader:gdnative.RID, p_code:gdnative.String):Void;
	function shader_set_path_hint(p_shader:gdnative.RID, p_path:gdnative.String):Void;
	function shader_get_code(p_shader:gdnative.RID):gdnative.String;
	function shader_get_parameter_default(p_shader:gdnative.RID, p_name:gdnative.StringName):gdnative.Variant;
	overload function shader_set_default_texture_parameter(p_shader:gdnative.RID, p_name:gdnative.StringName, p_texture:gdnative.RID, p_index:Int):Void;
	overload function shader_set_default_texture_parameter(p_shader:gdnative.RID, p_name:gdnative.StringName, p_texture:gdnative.RID):Void;
	overload function shader_get_default_texture_parameter(p_shader:gdnative.RID, p_name:gdnative.StringName, p_index:Int):gdnative.RID;
	overload function shader_get_default_texture_parameter(p_shader:gdnative.RID, p_name:gdnative.StringName):gdnative.RID;
	function material_create():gdnative.RID;
	function material_set_shader(p_shader_material:gdnative.RID, p_shader:gdnative.RID):Void;
	function material_set_param(p_material:gdnative.RID, p_parameter:gdnative.StringName, p_value:gdnative.Variant):Void;
	function material_get_param(p_material:gdnative.RID, p_parameter:gdnative.StringName):gdnative.Variant;
	function material_set_render_priority(p_material:gdnative.RID, p_priority:Int):Void;
	function material_set_next_pass(p_material:gdnative.RID, p_next_material:gdnative.RID):Void;
	function mesh_create():gdnative.RID;
	function mesh_surface_get_format_offset(p_format:Int, p_vertex_count:Int, p_array_index:Int):Int;
	function mesh_surface_get_format_vertex_stride(p_format:Int, p_vertex_count:Int):Int;
	function mesh_surface_get_format_normal_tangent_stride(p_format:Int, p_vertex_count:Int):Int;
	function mesh_surface_get_format_attribute_stride(p_format:Int, p_vertex_count:Int):Int;
	function mesh_surface_get_format_skin_stride(p_format:Int, p_vertex_count:Int):Int;
	function mesh_add_surface(p_mesh:gdnative.RID, p_surface:gdnative.Dictionary):Void;
	overload function mesh_add_surface_from_arrays(p_mesh:gdnative.RID, p_primitive:gdnative.renderingserver.PrimitiveType, p_arrays:gdnative.Array, p_blend_shapes:gdnative.Array, p_lods:gdnative.Dictionary, p_compress_format:Int):Void;
	overload function mesh_add_surface_from_arrays(p_mesh:gdnative.RID, p_primitive:gdnative.renderingserver.PrimitiveType, p_arrays:gdnative.Array, p_blend_shapes:gdnative.Array, p_lods:gdnative.Dictionary):Void;
	overload function mesh_add_surface_from_arrays(p_mesh:gdnative.RID, p_primitive:gdnative.renderingserver.PrimitiveType, p_arrays:gdnative.Array, p_blend_shapes:gdnative.Array):Void;
	overload function mesh_add_surface_from_arrays(p_mesh:gdnative.RID, p_primitive:gdnative.renderingserver.PrimitiveType, p_arrays:gdnative.Array):Void;
	function mesh_get_blend_shape_count(p_mesh:gdnative.RID):Int;
	function mesh_set_blend_shape_mode(p_mesh:gdnative.RID, p_mode:gdnative.renderingserver.BlendShapeMode):Void;
	function mesh_get_blend_shape_mode(p_mesh:gdnative.RID):gdnative.renderingserver.BlendShapeMode;
	function mesh_surface_set_material(p_mesh:gdnative.RID, p_surface:Int, p_material:gdnative.RID):Void;
	function mesh_surface_get_material(p_mesh:gdnative.RID, p_surface:Int):gdnative.RID;
	function mesh_get_surface(p_mesh:gdnative.RID, p_surface:Int):gdnative.Dictionary;
	function mesh_surface_get_arrays(p_mesh:gdnative.RID, p_surface:Int):gdnative.Array;
	function mesh_get_surface_count(p_mesh:gdnative.RID):Int;
	function mesh_set_custom_aabb(p_mesh:gdnative.RID, p_aabb:gdnative.AABB):Void;
	function mesh_get_custom_aabb(p_mesh:gdnative.RID):gdnative.AABB;
	function mesh_clear(p_mesh:gdnative.RID):Void;
	function mesh_surface_update_vertex_region(p_mesh:gdnative.RID, p_surface:Int, p_offset:Int, p_data:gdnative.PackedByteArray):Void;
	function mesh_surface_update_attribute_region(p_mesh:gdnative.RID, p_surface:Int, p_offset:Int, p_data:gdnative.PackedByteArray):Void;
	function mesh_surface_update_skin_region(p_mesh:gdnative.RID, p_surface:Int, p_offset:Int, p_data:gdnative.PackedByteArray):Void;
	function mesh_set_shadow_mesh(p_mesh:gdnative.RID, p_shadow_mesh:gdnative.RID):Void;
	function multimesh_create():gdnative.RID;
	overload function multimesh_allocate_data(p_multimesh:gdnative.RID, p_instances:Int, p_transform_format:gdnative.renderingserver.MultimeshTransformFormat, p_color_format:Bool, p_custom_data_format:Bool):Void;
	overload function multimesh_allocate_data(p_multimesh:gdnative.RID, p_instances:Int, p_transform_format:gdnative.renderingserver.MultimeshTransformFormat, p_color_format:Bool):Void;
	overload function multimesh_allocate_data(p_multimesh:gdnative.RID, p_instances:Int, p_transform_format:gdnative.renderingserver.MultimeshTransformFormat):Void;
	function multimesh_get_instance_count(p_multimesh:gdnative.RID):Int;
	function multimesh_set_mesh(p_multimesh:gdnative.RID, p_mesh:gdnative.RID):Void;
	function multimesh_instance_set_color(p_multimesh:gdnative.RID, p_index:Int, p_color:gdnative.Color):Void;
	function multimesh_instance_set_custom_data(p_multimesh:gdnative.RID, p_index:Int, p_custom_data:gdnative.Color):Void;
	function multimesh_get_mesh(p_multimesh:gdnative.RID):gdnative.RID;
	function multimesh_get_aabb(p_multimesh:gdnative.RID):gdnative.AABB;
	function multimesh_set_custom_aabb(p_multimesh:gdnative.RID, p_aabb:gdnative.AABB):Void;
	function multimesh_get_custom_aabb(p_multimesh:gdnative.RID):gdnative.AABB;
	function multimesh_instance_get_color(p_multimesh:gdnative.RID, p_index:Int):gdnative.Color;
	function multimesh_instance_get_custom_data(p_multimesh:gdnative.RID, p_index:Int):gdnative.Color;
	function multimesh_set_visible_instances(p_multimesh:gdnative.RID, p_visible:Int):Void;
	function multimesh_get_visible_instances(p_multimesh:gdnative.RID):Int;
	function multimesh_set_buffer(p_multimesh:gdnative.RID, p_buffer:gdnative.PackedFloat32Array):Void;
	function multimesh_get_buffer(p_multimesh:gdnative.RID):gdnative.PackedFloat32Array;
	function skeleton_create():gdnative.RID;
	overload function skeleton_allocate_data(p_skeleton:gdnative.RID, p_bones:Int, p_is_2d_skeleton:Bool):Void;
	overload function skeleton_allocate_data(p_skeleton:gdnative.RID, p_bones:Int):Void;
	function skeleton_get_bone_count(p_skeleton:gdnative.RID):Int;
	function directional_light_create():gdnative.RID;
	function omni_light_create():gdnative.RID;
	function spot_light_create():gdnative.RID;
	function light_set_color(p_light:gdnative.RID, p_color:gdnative.Color):Void;
	function light_set_param(p_light:gdnative.RID, p_param:gdnative.renderingserver.LightParam, p_value:Float):Void;
	function light_set_shadow(p_light:gdnative.RID, p_enabled:Bool):Void;
	function light_set_projector(p_light:gdnative.RID, p_texture:gdnative.RID):Void;
	function light_set_negative(p_light:gdnative.RID, p_enable:Bool):Void;
	function light_set_cull_mask(p_light:gdnative.RID, p_mask:Int):Void;
	function light_set_distance_fade(p_decal:gdnative.RID, p_enabled:Bool, p_begin:Float, p_shadow:Float, p_length:Float):Void;
	function light_set_reverse_cull_face_mode(p_light:gdnative.RID, p_enabled:Bool):Void;
	function light_set_bake_mode(p_light:gdnative.RID, p_bake_mode:gdnative.renderingserver.LightBakeMode):Void;
	function light_set_max_sdfgi_cascade(p_light:gdnative.RID, p_cascade:Int):Void;
	function light_omni_set_shadow_mode(p_light:gdnative.RID, p_mode:gdnative.renderingserver.LightOmniShadowMode):Void;
	function light_directional_set_shadow_mode(p_light:gdnative.RID, p_mode:gdnative.renderingserver.LightDirectionalShadowMode):Void;
	function light_directional_set_blend_splits(p_light:gdnative.RID, p_enable:Bool):Void;
	function light_directional_set_sky_mode(p_light:gdnative.RID, p_mode:gdnative.renderingserver.LightDirectionalSkyMode):Void;
	function light_projectors_set_filter(p_filter:gdnative.renderingserver.LightProjectorFilter):Void;
	function positional_soft_shadow_filter_set_quality(p_quality:gdnative.renderingserver.ShadowQuality):Void;
	function directional_soft_shadow_filter_set_quality(p_quality:gdnative.renderingserver.ShadowQuality):Void;
	function directional_shadow_atlas_set_size(p_size:Int, p_is_16bits:Bool):Void;
	function reflection_probe_create():gdnative.RID;
	function reflection_probe_set_update_mode(p_probe:gdnative.RID, p_mode:gdnative.renderingserver.ReflectionProbeUpdateMode):Void;
	function reflection_probe_set_intensity(p_probe:gdnative.RID, p_intensity:Float):Void;
	function reflection_probe_set_ambient_mode(p_probe:gdnative.RID, p_mode:gdnative.renderingserver.ReflectionProbeAmbientMode):Void;
	function reflection_probe_set_ambient_color(p_probe:gdnative.RID, p_color:gdnative.Color):Void;
	function reflection_probe_set_ambient_energy(p_probe:gdnative.RID, p_energy:Float):Void;
	function reflection_probe_set_max_distance(p_probe:gdnative.RID, p_distance:Float):Void;
	function reflection_probe_set_size(p_probe:gdnative.RID, p_size:gdnative.Vector3):Void;
	function reflection_probe_set_origin_offset(p_probe:gdnative.RID, p_offset:gdnative.Vector3):Void;
	function reflection_probe_set_as_interior(p_probe:gdnative.RID, p_enable:Bool):Void;
	function reflection_probe_set_enable_box_projection(p_probe:gdnative.RID, p_enable:Bool):Void;
	function reflection_probe_set_enable_shadows(p_probe:gdnative.RID, p_enable:Bool):Void;
	function reflection_probe_set_cull_mask(p_probe:gdnative.RID, p_layers:Int):Void;
	function reflection_probe_set_reflection_mask(p_probe:gdnative.RID, p_layers:Int):Void;
	function reflection_probe_set_resolution(p_probe:gdnative.RID, p_resolution:Int):Void;
	function reflection_probe_set_mesh_lod_threshold(p_probe:gdnative.RID, p_pixels:Float):Void;
	function decal_create():gdnative.RID;
	function decal_set_size(p_decal:gdnative.RID, p_size:gdnative.Vector3):Void;
	function decal_set_texture(p_decal:gdnative.RID, p_type:gdnative.renderingserver.DecalTexture, p_texture:gdnative.RID):Void;
	function decal_set_emission_energy(p_decal:gdnative.RID, p_energy:Float):Void;
	function decal_set_albedo_mix(p_decal:gdnative.RID, p_albedo_mix:Float):Void;
	function decal_set_modulate(p_decal:gdnative.RID, p_color:gdnative.Color):Void;
	function decal_set_cull_mask(p_decal:gdnative.RID, p_mask:Int):Void;
	function decal_set_distance_fade(p_decal:gdnative.RID, p_enabled:Bool, p_begin:Float, p_length:Float):Void;
	function decal_set_fade(p_decal:gdnative.RID, p_above:Float, p_below:Float):Void;
	function decal_set_normal_fade(p_decal:gdnative.RID, p_fade:Float):Void;
	function decals_set_filter(p_filter:gdnative.renderingserver.DecalFilter):Void;
	function gi_set_use_half_resolution(p_half_resolution:Bool):Void;
	function voxel_gi_create():gdnative.RID;
	function voxel_gi_get_octree_size(p_voxel_gi:gdnative.RID):gdnative.Vector3i;
	function voxel_gi_get_octree_cells(p_voxel_gi:gdnative.RID):gdnative.PackedByteArray;
	function voxel_gi_get_data_cells(p_voxel_gi:gdnative.RID):gdnative.PackedByteArray;
	function voxel_gi_get_distance_field(p_voxel_gi:gdnative.RID):gdnative.PackedByteArray;
	function voxel_gi_get_level_counts(p_voxel_gi:gdnative.RID):gdnative.PackedInt32Array;
	function voxel_gi_set_dynamic_range(p_voxel_gi:gdnative.RID, p_range:Float):Void;
	function voxel_gi_set_propagation(p_voxel_gi:gdnative.RID, p_amount:Float):Void;
	function voxel_gi_set_energy(p_voxel_gi:gdnative.RID, p_energy:Float):Void;
	function voxel_gi_set_baked_exposure_normalization(p_voxel_gi:gdnative.RID, p_baked_exposure:Float):Void;
	function voxel_gi_set_bias(p_voxel_gi:gdnative.RID, p_bias:Float):Void;
	function voxel_gi_set_normal_bias(p_voxel_gi:gdnative.RID, p_bias:Float):Void;
	function voxel_gi_set_interior(p_voxel_gi:gdnative.RID, p_enable:Bool):Void;
	function voxel_gi_set_use_two_bounces(p_voxel_gi:gdnative.RID, p_enable:Bool):Void;
	function voxel_gi_set_quality(p_quality:gdnative.renderingserver.VoxelGIQuality):Void;
	function lightmap_create():gdnative.RID;
	function lightmap_set_textures(p_lightmap:gdnative.RID, p_light:gdnative.RID, p_uses_sh:Bool):Void;
	function lightmap_set_probe_bounds(p_lightmap:gdnative.RID, p_bounds:gdnative.AABB):Void;
	function lightmap_set_probe_interior(p_lightmap:gdnative.RID, p_interior:Bool):Void;
	function lightmap_set_probe_capture_data(p_lightmap:gdnative.RID, p_points:gdnative.PackedVector3Array, p_point_sh:gdnative.PackedColorArray, p_tetrahedra:gdnative.PackedInt32Array, p_bsp_tree:gdnative.PackedInt32Array):Void;
	function lightmap_get_probe_capture_points(p_lightmap:gdnative.RID):gdnative.PackedVector3Array;
	function lightmap_get_probe_capture_sh(p_lightmap:gdnative.RID):gdnative.PackedColorArray;
	function lightmap_get_probe_capture_tetrahedra(p_lightmap:gdnative.RID):gdnative.PackedInt32Array;
	function lightmap_get_probe_capture_bsp_tree(p_lightmap:gdnative.RID):gdnative.PackedInt32Array;
	function lightmap_set_baked_exposure_normalization(p_lightmap:gdnative.RID, p_baked_exposure:Float):Void;
	function lightmap_set_probe_capture_update_speed(p_speed:Float):Void;
	function particles_create():gdnative.RID;
	function particles_set_mode(p_particles:gdnative.RID, p_mode:gdnative.renderingserver.ParticlesMode):Void;
	function particles_set_emitting(p_particles:gdnative.RID, p_emitting:Bool):Void;
	function particles_get_emitting(p_particles:gdnative.RID):Bool;
	function particles_set_amount(p_particles:gdnative.RID, p_amount:Int):Void;
	function particles_set_amount_ratio(p_particles:gdnative.RID, p_ratio:Float):Void;
	function particles_set_lifetime(p_particles:gdnative.RID, p_lifetime:Float):Void;
	function particles_set_one_shot(p_particles:gdnative.RID, p_one_shot:Bool):Void;
	function particles_set_pre_process_time(p_particles:gdnative.RID, p_time:Float):Void;
	function particles_set_explosiveness_ratio(p_particles:gdnative.RID, p_ratio:Float):Void;
	function particles_set_randomness_ratio(p_particles:gdnative.RID, p_ratio:Float):Void;
	function particles_set_interp_to_end(p_particles:gdnative.RID, p_factor:Float):Void;
	function particles_set_emitter_velocity(p_particles:gdnative.RID, p_velocity:gdnative.Vector3):Void;
	function particles_set_custom_aabb(p_particles:gdnative.RID, p_aabb:gdnative.AABB):Void;
	function particles_set_speed_scale(p_particles:gdnative.RID, p_scale:Float):Void;
	function particles_set_use_local_coordinates(p_particles:gdnative.RID, p_enable:Bool):Void;
	function particles_set_process_material(p_particles:gdnative.RID, p_material:gdnative.RID):Void;
	function particles_set_fixed_fps(p_particles:gdnative.RID, p_fps:Int):Void;
	function particles_set_interpolate(p_particles:gdnative.RID, p_enable:Bool):Void;
	function particles_set_fractional_delta(p_particles:gdnative.RID, p_enable:Bool):Void;
	function particles_set_collision_base_size(p_particles:gdnative.RID, p_size:Float):Void;
	function particles_set_transform_align(p_particles:gdnative.RID, p_align:gdnative.renderingserver.ParticlesTransformAlign):Void;
	function particles_set_trails(p_particles:gdnative.RID, p_enable:Bool, p_length_sec:Float):Void;
	function particles_is_inactive(p_particles:gdnative.RID):Bool;
	function particles_request_process(p_particles:gdnative.RID):Void;
	function particles_restart(p_particles:gdnative.RID):Void;
	function particles_set_subemitter(p_particles:gdnative.RID, p_subemitter_particles:gdnative.RID):Void;
	function particles_set_draw_order(p_particles:gdnative.RID, p_order:gdnative.renderingserver.ParticlesDrawOrder):Void;
	function particles_set_draw_passes(p_particles:gdnative.RID, p_count:Int):Void;
	function particles_set_draw_pass_mesh(p_particles:gdnative.RID, p_pass:Int, p_mesh:gdnative.RID):Void;
	function particles_get_current_aabb(p_particles:gdnative.RID):gdnative.AABB;
	function particles_collision_create():gdnative.RID;
	function particles_collision_set_collision_type(p_particles_collision:gdnative.RID, p_type:gdnative.renderingserver.ParticlesCollisionType):Void;
	function particles_collision_set_cull_mask(p_particles_collision:gdnative.RID, p_mask:Int):Void;
	function particles_collision_set_sphere_radius(p_particles_collision:gdnative.RID, p_radius:Float):Void;
	function particles_collision_set_box_extents(p_particles_collision:gdnative.RID, p_extents:gdnative.Vector3):Void;
	function particles_collision_set_attractor_strength(p_particles_collision:gdnative.RID, p_strength:Float):Void;
	function particles_collision_set_attractor_directionality(p_particles_collision:gdnative.RID, p_amount:Float):Void;
	function particles_collision_set_attractor_attenuation(p_particles_collision:gdnative.RID, p_curve:Float):Void;
	function particles_collision_set_field_texture(p_particles_collision:gdnative.RID, p_texture:gdnative.RID):Void;
	function particles_collision_height_field_update(p_particles_collision:gdnative.RID):Void;
	function particles_collision_set_height_field_resolution(p_particles_collision:gdnative.RID, p_resolution:gdnative.renderingserver.ParticlesCollisionHeightfieldResolution):Void;
	function fog_volume_create():gdnative.RID;
	function fog_volume_set_shape(p_fog_volume:gdnative.RID, p_shape:gdnative.renderingserver.FogVolumeShape):Void;
	function fog_volume_set_size(p_fog_volume:gdnative.RID, p_size:gdnative.Vector3):Void;
	function fog_volume_set_material(p_fog_volume:gdnative.RID, p_material:gdnative.RID):Void;
	function visibility_notifier_create():gdnative.RID;
	function visibility_notifier_set_aabb(p_notifier:gdnative.RID, p_aabb:gdnative.AABB):Void;
	function visibility_notifier_set_callbacks(p_notifier:gdnative.RID, p_enter_callable:gdnative.Callable, p_exit_callable:gdnative.Callable):Void;
	function occluder_create():gdnative.RID;
	function occluder_set_mesh(p_occluder:gdnative.RID, p_vertices:gdnative.PackedVector3Array, p_indices:gdnative.PackedInt32Array):Void;
	function camera_create():gdnative.RID;
	function camera_set_perspective(p_camera:gdnative.RID, p_fovy_degrees:Float, p_z_near:Float, p_z_far:Float):Void;
	function camera_set_orthogonal(p_camera:gdnative.RID, p_size:Float, p_z_near:Float, p_z_far:Float):Void;
	function camera_set_frustum(p_camera:gdnative.RID, p_size:Float, p_offset:gdnative.Vector2, p_z_near:Float, p_z_far:Float):Void;
	function camera_set_cull_mask(p_camera:gdnative.RID, p_layers:Int):Void;
	function camera_set_environment(p_camera:gdnative.RID, p_env:gdnative.RID):Void;
	function camera_set_camera_attributes(p_camera:gdnative.RID, p_effects:gdnative.RID):Void;
	function camera_set_compositor(p_camera:gdnative.RID, p_compositor:gdnative.RID):Void;
	function camera_set_use_vertical_aspect(p_camera:gdnative.RID, p_enable:Bool):Void;
	function viewport_create():gdnative.RID;
	function viewport_set_use_xr(p_viewport:gdnative.RID, p_use_xr:Bool):Void;
	function viewport_set_size(p_viewport:gdnative.RID, p_width:Int, p_height:Int):Void;
	function viewport_set_active(p_viewport:gdnative.RID, p_active:Bool):Void;
	function viewport_set_parent_viewport(p_viewport:gdnative.RID, p_parent_viewport:gdnative.RID):Void;
	overload function viewport_attach_to_screen(p_viewport:gdnative.RID, p_rect:gdnative.Rect2, p_screen:Int):Void;
	overload function viewport_attach_to_screen(p_viewport:gdnative.RID, p_rect:gdnative.Rect2):Void;
	overload function viewport_attach_to_screen(p_viewport:gdnative.RID):Void;
	function viewport_set_render_direct_to_screen(p_viewport:gdnative.RID, p_enabled:Bool):Void;
	function viewport_set_canvas_cull_mask(p_viewport:gdnative.RID, p_canvas_cull_mask:Int):Void;
	function viewport_set_scaling_3d_mode(p_viewport:gdnative.RID, p_scaling_3d_mode:gdnative.renderingserver.ViewportScaling3DMode):Void;
	function viewport_set_scaling_3d_scale(p_viewport:gdnative.RID, p_scale:Float):Void;
	function viewport_set_fsr_sharpness(p_viewport:gdnative.RID, p_sharpness:Float):Void;
	function viewport_set_texture_mipmap_bias(p_viewport:gdnative.RID, p_mipmap_bias:Float):Void;
	function viewport_set_update_mode(p_viewport:gdnative.RID, p_update_mode:gdnative.renderingserver.ViewportUpdateMode):Void;
	function viewport_get_update_mode(p_viewport:gdnative.RID):gdnative.renderingserver.ViewportUpdateMode;
	function viewport_set_clear_mode(p_viewport:gdnative.RID, p_clear_mode:gdnative.renderingserver.ViewportClearMode):Void;
	function viewport_get_render_target(p_viewport:gdnative.RID):gdnative.RID;
	function viewport_get_texture(p_viewport:gdnative.RID):gdnative.RID;
	function viewport_set_disable_3d(p_viewport:gdnative.RID, p_disable:Bool):Void;
	function viewport_set_disable_2d(p_viewport:gdnative.RID, p_disable:Bool):Void;
	function viewport_set_environment_mode(p_viewport:gdnative.RID, p_mode:gdnative.renderingserver.ViewportEnvironmentMode):Void;
	function viewport_attach_camera(p_viewport:gdnative.RID, p_camera:gdnative.RID):Void;
	function viewport_set_scenario(p_viewport:gdnative.RID, p_scenario:gdnative.RID):Void;
	function viewport_attach_canvas(p_viewport:gdnative.RID, p_canvas:gdnative.RID):Void;
	function viewport_remove_canvas(p_viewport:gdnative.RID, p_canvas:gdnative.RID):Void;
	function viewport_set_snap_2d_transforms_to_pixel(p_viewport:gdnative.RID, p_enabled:Bool):Void;
	function viewport_set_snap_2d_vertices_to_pixel(p_viewport:gdnative.RID, p_enabled:Bool):Void;
	function viewport_set_default_canvas_item_texture_filter(p_viewport:gdnative.RID, p_filter:gdnative.renderingserver.CanvasItemTextureFilter):Void;
	function viewport_set_default_canvas_item_texture_repeat(p_viewport:gdnative.RID, p_repeat:gdnative.renderingserver.CanvasItemTextureRepeat):Void;
	function viewport_set_canvas_stacking(p_viewport:gdnative.RID, p_canvas:gdnative.RID, p_layer:Int, p_sublayer:Int):Void;
	function viewport_set_transparent_background(p_viewport:gdnative.RID, p_enabled:Bool):Void;
	function viewport_set_sdf_oversize_and_scale(p_viewport:gdnative.RID, p_oversize:gdnative.renderingserver.ViewportSDFOversize, p_scale:gdnative.renderingserver.ViewportSDFScale):Void;
	overload function viewport_set_positional_shadow_atlas_size(p_viewport:gdnative.RID, p_size:Int, p_use_16_bits:Bool):Void;
	overload function viewport_set_positional_shadow_atlas_size(p_viewport:gdnative.RID, p_size:Int):Void;
	function viewport_set_positional_shadow_atlas_quadrant_subdivision(p_viewport:gdnative.RID, p_quadrant:Int, p_subdivision:Int):Void;
	function viewport_set_msaa_3d(p_viewport:gdnative.RID, p_msaa:gdnative.renderingserver.ViewportMSAA):Void;
	function viewport_set_msaa_2d(p_viewport:gdnative.RID, p_msaa:gdnative.renderingserver.ViewportMSAA):Void;
	function viewport_set_use_hdr_2d(p_viewport:gdnative.RID, p_enabled:Bool):Void;
	function viewport_set_screen_space_aa(p_viewport:gdnative.RID, p_mode:gdnative.renderingserver.ViewportScreenSpaceAA):Void;
	function viewport_set_use_taa(p_viewport:gdnative.RID, p_enable:Bool):Void;
	function viewport_set_use_debanding(p_viewport:gdnative.RID, p_enable:Bool):Void;
	function viewport_set_use_occlusion_culling(p_viewport:gdnative.RID, p_enable:Bool):Void;
	function viewport_set_occlusion_rays_per_thread(p_rays_per_thread:Int):Void;
	function viewport_set_occlusion_culling_build_quality(p_quality:gdnative.renderingserver.ViewportOcclusionCullingBuildQuality):Void;
	function viewport_get_render_info(p_viewport:gdnative.RID, p_type:gdnative.renderingserver.ViewportRenderInfoType, p_info:gdnative.renderingserver.ViewportRenderInfo):Int;
	function viewport_set_debug_draw(p_viewport:gdnative.RID, p_draw:gdnative.renderingserver.ViewportDebugDraw):Void;
	function viewport_set_measure_render_time(p_viewport:gdnative.RID, p_enable:Bool):Void;
	function viewport_get_measured_render_time_cpu(p_viewport:gdnative.RID):Float;
	function viewport_get_measured_render_time_gpu(p_viewport:gdnative.RID):Float;
	function viewport_set_vrs_mode(p_viewport:gdnative.RID, p_mode:gdnative.renderingserver.ViewportVRSMode):Void;
	function viewport_set_vrs_update_mode(p_viewport:gdnative.RID, p_mode:gdnative.renderingserver.ViewportVRSUpdateMode):Void;
	function viewport_set_vrs_texture(p_viewport:gdnative.RID, p_texture:gdnative.RID):Void;
	function sky_create():gdnative.RID;
	function sky_set_radiance_size(p_sky:gdnative.RID, p_radiance_size:Int):Void;
	function sky_set_mode(p_sky:gdnative.RID, p_mode:gdnative.renderingserver.SkyMode):Void;
	function sky_set_material(p_sky:gdnative.RID, p_material:gdnative.RID):Void;
	function sky_bake_panorama(p_sky:gdnative.RID, p_energy:Float, p_bake_irradiance:Bool, p_size:gdnative.Vector2i):gdnative.Image;
	function compositor_effect_create():gdnative.RID;
	function compositor_effect_set_enabled(p_effect:gdnative.RID, p_enabled:Bool):Void;
	function compositor_effect_set_callback(p_effect:gdnative.RID, p_callback_type:gdnative.renderingserver.CompositorEffectCallbackType, p_callback:gdnative.Callable):Void;
	function compositor_effect_set_flag(p_effect:gdnative.RID, p_flag:gdnative.renderingserver.CompositorEffectFlags, p_set:Bool):Void;
	function compositor_create():gdnative.RID;
	function environment_create():gdnative.RID;
	function environment_set_background(p_env:gdnative.RID, p_bg:gdnative.renderingserver.EnvironmentBG):Void;
	function environment_set_sky(p_env:gdnative.RID, p_sky:gdnative.RID):Void;
	function environment_set_sky_custom_fov(p_env:gdnative.RID, p_scale:Float):Void;
	function environment_set_bg_color(p_env:gdnative.RID, p_color:gdnative.Color):Void;
	function environment_set_bg_energy(p_env:gdnative.RID, p_multiplier:Float, p_exposure_value:Float):Void;
	function environment_set_canvas_max_layer(p_env:gdnative.RID, p_max_layer:Int):Void;
	overload function environment_set_ambient_light(p_env:gdnative.RID, p_color:gdnative.Color, p_ambient:gdnative.renderingserver.EnvironmentAmbientSource, p_energy:Float, p_sky_contibution:Float, p_reflection_source:gdnative.renderingserver.EnvironmentReflectionSource):Void;
	overload function environment_set_ambient_light(p_env:gdnative.RID, p_color:gdnative.Color, p_ambient:gdnative.renderingserver.EnvironmentAmbientSource, p_energy:Float, p_sky_contibution:Float):Void;
	overload function environment_set_ambient_light(p_env:gdnative.RID, p_color:gdnative.Color, p_ambient:gdnative.renderingserver.EnvironmentAmbientSource, p_energy:Float):Void;
	overload function environment_set_ambient_light(p_env:gdnative.RID, p_color:gdnative.Color, p_ambient:gdnative.renderingserver.EnvironmentAmbientSource):Void;
	overload function environment_set_ambient_light(p_env:gdnative.RID, p_color:gdnative.Color):Void;
	function environment_set_glow(p_env:gdnative.RID, p_enable:Bool, p_levels:gdnative.PackedFloat32Array, p_intensity:Float, p_strength:Float, p_mix:Float, p_bloom_threshold:Float, p_blend_mode:gdnative.renderingserver.EnvironmentGlowBlendMode, p_hdr_bleed_threshold:Float, p_hdr_bleed_scale:Float, p_hdr_luminance_cap:Float, p_glow_map_strength:Float, p_glow_map:gdnative.RID):Void;
	function environment_set_tonemap(p_env:gdnative.RID, p_tone_mapper:gdnative.renderingserver.EnvironmentToneMapper, p_exposure:Float, p_white:Float):Void;
	function environment_set_adjustment(p_env:gdnative.RID, p_enable:Bool, p_brightness:Float, p_contrast:Float, p_saturation:Float, p_use_1d_color_correction:Bool, p_color_correction:gdnative.RID):Void;
	function environment_set_ssr(p_env:gdnative.RID, p_enable:Bool, p_max_steps:Int, p_fade_in:Float, p_fade_out:Float, p_depth_tolerance:Float):Void;
	function environment_set_ssao(p_env:gdnative.RID, p_enable:Bool, p_radius:Float, p_intensity:Float, p_power:Float, p_detail:Float, p_horizon:Float, p_sharpness:Float, p_light_affect:Float, p_ao_channel_affect:Float):Void;
	overload function environment_set_fog(p_env:gdnative.RID, p_enable:Bool, p_light_color:gdnative.Color, p_light_energy:Float, p_sun_scatter:Float, p_density:Float, p_height:Float, p_height_density:Float, p_aerial_perspective:Float, p_sky_affect:Float, p_fog_mode:gdnative.renderingserver.EnvironmentFogMode):Void;
	overload function environment_set_fog(p_env:gdnative.RID, p_enable:Bool, p_light_color:gdnative.Color, p_light_energy:Float, p_sun_scatter:Float, p_density:Float, p_height:Float, p_height_density:Float, p_aerial_perspective:Float, p_sky_affect:Float):Void;
	function environment_set_sdfgi(p_env:gdnative.RID, p_enable:Bool, p_cascades:Int, p_min_cell_size:Float, p_y_scale:gdnative.renderingserver.EnvironmentSDFGIYScale, p_use_occlusion:Bool, p_bounce_feedback:Float, p_read_sky:Bool, p_energy:Float, p_normal_bias:Float, p_probe_bias:Float):Void;
	function environment_set_volumetric_fog(p_env:gdnative.RID, p_enable:Bool, p_density:Float, p_albedo:gdnative.Color, p_emission:gdnative.Color, p_emission_energy:Float, p_anisotropy:Float, p_length:Float, p_p_detail_spread:Float, p_gi_inject:Float, p_temporal_reprojection:Bool, p_temporal_reprojection_amount:Float, p_ambient_inject:Float, p_sky_affect:Float):Void;
	function environment_glow_set_use_bicubic_upscale(p_enable:Bool):Void;
	function environment_set_ssr_roughness_quality(p_quality:gdnative.renderingserver.EnvironmentSSRRoughnessQuality):Void;
	function environment_set_ssao_quality(p_quality:gdnative.renderingserver.EnvironmentSSAOQuality, p_half_size:Bool, p_adaptive_target:Float, p_blur_passes:Int, p_fadeout_from:Float, p_fadeout_to:Float):Void;
	function environment_set_ssil_quality(p_quality:gdnative.renderingserver.EnvironmentSSILQuality, p_half_size:Bool, p_adaptive_target:Float, p_blur_passes:Int, p_fadeout_from:Float, p_fadeout_to:Float):Void;
	function environment_set_sdfgi_ray_count(p_ray_count:gdnative.renderingserver.EnvironmentSDFGIRayCount):Void;
	function environment_set_sdfgi_frames_to_converge(p_frames:gdnative.renderingserver.EnvironmentSDFGIFramesToConverge):Void;
	function environment_set_sdfgi_frames_to_update_light(p_frames:gdnative.renderingserver.EnvironmentSDFGIFramesToUpdateLight):Void;
	function environment_set_volumetric_fog_volume_size(p_size:Int, p_depth:Int):Void;
	function environment_set_volumetric_fog_filter_active(p_active:Bool):Void;
	function environment_bake_panorama(p_environment:gdnative.RID, p_bake_irradiance:Bool, p_size:gdnative.Vector2i):gdnative.Image;
	function screen_space_roughness_limiter_set_active(p_enable:Bool, p_amount:Float, p_limit:Float):Void;
	function sub_surface_scattering_set_quality(p_quality:gdnative.renderingserver.SubSurfaceScatteringQuality):Void;
	function sub_surface_scattering_set_scale(p_scale:Float, p_depth_scale:Float):Void;
	function camera_attributes_create():gdnative.RID;
	function camera_attributes_set_dof_blur_quality(p_quality:gdnative.renderingserver.DOFBlurQuality, p_use_jitter:Bool):Void;
	function camera_attributes_set_dof_blur_bokeh_shape(p_shape:gdnative.renderingserver.DOFBokehShape):Void;
	function camera_attributes_set_dof_blur(p_camera_attributes:gdnative.RID, p_far_enable:Bool, p_far_distance:Float, p_far_transition:Float, p_near_enable:Bool, p_near_distance:Float, p_near_transition:Float, p_amount:Float):Void;
	function camera_attributes_set_exposure(p_camera_attributes:gdnative.RID, p_multiplier:Float, p_normalization:Float):Void;
	function camera_attributes_set_auto_exposure(p_camera_attributes:gdnative.RID, p_enable:Bool, p_min_sensitivity:Float, p_max_sensitivity:Float, p_speed:Float, p_scale:Float):Void;
	function scenario_create():gdnative.RID;
	function scenario_set_environment(p_scenario:gdnative.RID, p_environment:gdnative.RID):Void;
	function scenario_set_fallback_environment(p_scenario:gdnative.RID, p_environment:gdnative.RID):Void;
	function scenario_set_camera_attributes(p_scenario:gdnative.RID, p_effects:gdnative.RID):Void;
	function scenario_set_compositor(p_scenario:gdnative.RID, p_compositor:gdnative.RID):Void;
	function instance_create2(p_base:gdnative.RID, p_scenario:gdnative.RID):gdnative.RID;
	function instance_create():gdnative.RID;
	function instance_set_base(p_instance:gdnative.RID, p_base:gdnative.RID):Void;
	function instance_set_scenario(p_instance:gdnative.RID, p_scenario:gdnative.RID):Void;
	function instance_set_layer_mask(p_instance:gdnative.RID, p_mask:Int):Void;
	function instance_set_pivot_data(p_instance:gdnative.RID, p_sorting_offset:Float, p_use_aabb_center:Bool):Void;
	function instance_attach_object_instance_id(p_instance:gdnative.RID, p_id:Int):Void;
	function instance_set_blend_shape_weight(p_instance:gdnative.RID, p_shape:Int, p_weight:Float):Void;
	function instance_set_surface_override_material(p_instance:gdnative.RID, p_surface:Int, p_material:gdnative.RID):Void;
	function instance_set_visible(p_instance:gdnative.RID, p_visible:Bool):Void;
	function instance_geometry_set_transparency(p_instance:gdnative.RID, p_transparency:Float):Void;
	function instance_set_custom_aabb(p_instance:gdnative.RID, p_aabb:gdnative.AABB):Void;
	function instance_attach_skeleton(p_instance:gdnative.RID, p_skeleton:gdnative.RID):Void;
	function instance_set_extra_visibility_margin(p_instance:gdnative.RID, p_margin:Float):Void;
	function instance_set_visibility_parent(p_instance:gdnative.RID, p_parent:gdnative.RID):Void;
	function instance_set_ignore_culling(p_instance:gdnative.RID, p_enabled:Bool):Void;
	function instance_geometry_set_flag(p_instance:gdnative.RID, p_flag:gdnative.renderingserver.InstanceFlags, p_enabled:Bool):Void;
	function instance_geometry_set_cast_shadows_setting(p_instance:gdnative.RID, p_shadow_casting_setting:gdnative.renderingserver.ShadowCastingSetting):Void;
	function instance_geometry_set_material_override(p_instance:gdnative.RID, p_material:gdnative.RID):Void;
	function instance_geometry_set_material_overlay(p_instance:gdnative.RID, p_material:gdnative.RID):Void;
	function instance_geometry_set_visibility_range(p_instance:gdnative.RID, p_min:Float, p_max:Float, p_min_margin:Float, p_max_margin:Float, p_fade_mode:gdnative.renderingserver.VisibilityRangeFadeMode):Void;
	function instance_geometry_set_lightmap(p_instance:gdnative.RID, p_lightmap:gdnative.RID, p_lightmap_uv_scale:gdnative.Rect2, p_lightmap_slice:Int):Void;
	function instance_geometry_set_lod_bias(p_instance:gdnative.RID, p_lod_bias:Float):Void;
	function instance_geometry_set_shader_parameter(p_instance:gdnative.RID, p_parameter:gdnative.StringName, p_value:gdnative.Variant):Void;
	function instance_geometry_get_shader_parameter(p_instance:gdnative.RID, p_parameter:gdnative.StringName):gdnative.Variant;
	function instance_geometry_get_shader_parameter_default_value(p_instance:gdnative.RID, p_parameter:gdnative.StringName):gdnative.Variant;
	overload function instances_cull_aabb(p_aabb:gdnative.AABB, p_scenario:gdnative.RID):gdnative.PackedInt64Array;
	overload function instances_cull_aabb(p_aabb:gdnative.AABB):gdnative.PackedInt64Array;
	overload function instances_cull_ray(p_from:gdnative.Vector3, p_to:gdnative.Vector3, p_scenario:gdnative.RID):gdnative.PackedInt64Array;
	overload function instances_cull_ray(p_from:gdnative.Vector3, p_to:gdnative.Vector3):gdnative.PackedInt64Array;
	function canvas_create():gdnative.RID;
	function canvas_set_item_mirroring(p_canvas:gdnative.RID, p_item:gdnative.RID, p_mirroring:gdnative.Vector2):Void;
	function canvas_set_item_repeat(p_item:gdnative.RID, p_repeat_size:gdnative.Vector2, p_repeat_times:Int):Void;
	function canvas_set_modulate(p_canvas:gdnative.RID, p_color:gdnative.Color):Void;
	function canvas_set_disable_scale(p_disable:Bool):Void;
	function canvas_texture_create():gdnative.RID;
	function canvas_texture_set_channel(p_canvas_texture:gdnative.RID, p_channel:gdnative.renderingserver.CanvasTextureChannel, p_texture:gdnative.RID):Void;
	function canvas_texture_set_shading_parameters(p_canvas_texture:gdnative.RID, p_base_color:gdnative.Color, p_shininess:Float):Void;
	function canvas_texture_set_texture_filter(p_canvas_texture:gdnative.RID, p_filter:gdnative.renderingserver.CanvasItemTextureFilter):Void;
	function canvas_texture_set_texture_repeat(p_canvas_texture:gdnative.RID, p_repeat:gdnative.renderingserver.CanvasItemTextureRepeat):Void;
	function canvas_item_create():gdnative.RID;
	function canvas_item_set_parent(p_item:gdnative.RID, p_parent:gdnative.RID):Void;
	function canvas_item_set_default_texture_filter(p_item:gdnative.RID, p_filter:gdnative.renderingserver.CanvasItemTextureFilter):Void;
	function canvas_item_set_default_texture_repeat(p_item:gdnative.RID, p_repeat:gdnative.renderingserver.CanvasItemTextureRepeat):Void;
	function canvas_item_set_visible(p_item:gdnative.RID, p_visible:Bool):Void;
	function canvas_item_set_light_mask(p_item:gdnative.RID, p_mask:Int):Void;
	function canvas_item_set_visibility_layer(p_item:gdnative.RID, p_visibility_layer:Int):Void;
	function canvas_item_set_clip(p_item:gdnative.RID, p_clip:Bool):Void;
	function canvas_item_set_distance_field_mode(p_item:gdnative.RID, p_enabled:Bool):Void;
	overload function canvas_item_set_custom_rect(p_item:gdnative.RID, p_use_custom_rect:Bool, p_rect:gdnative.Rect2):Void;
	overload function canvas_item_set_custom_rect(p_item:gdnative.RID, p_use_custom_rect:Bool):Void;
	function canvas_item_set_modulate(p_item:gdnative.RID, p_color:gdnative.Color):Void;
	function canvas_item_set_self_modulate(p_item:gdnative.RID, p_color:gdnative.Color):Void;
	function canvas_item_set_draw_behind_parent(p_item:gdnative.RID, p_enabled:Bool):Void;
	function canvas_item_set_interpolated(p_item:gdnative.RID, p_interpolated:Bool):Void;
	function canvas_item_reset_physics_interpolation(p_item:gdnative.RID):Void;
	overload function canvas_item_add_line(p_item:gdnative.RID, p_from:gdnative.Vector2, p_to:gdnative.Vector2, p_color:gdnative.Color, p_width:Float, p_antialiased:Bool):Void;
	overload function canvas_item_add_line(p_item:gdnative.RID, p_from:gdnative.Vector2, p_to:gdnative.Vector2, p_color:gdnative.Color, p_width:Float):Void;
	overload function canvas_item_add_line(p_item:gdnative.RID, p_from:gdnative.Vector2, p_to:gdnative.Vector2, p_color:gdnative.Color):Void;
	overload function canvas_item_add_polyline(p_item:gdnative.RID, p_points:gdnative.PackedVector2Array, p_colors:gdnative.PackedColorArray, p_width:Float, p_antialiased:Bool):Void;
	overload function canvas_item_add_polyline(p_item:gdnative.RID, p_points:gdnative.PackedVector2Array, p_colors:gdnative.PackedColorArray, p_width:Float):Void;
	overload function canvas_item_add_polyline(p_item:gdnative.RID, p_points:gdnative.PackedVector2Array, p_colors:gdnative.PackedColorArray):Void;
	overload function canvas_item_add_multiline(p_item:gdnative.RID, p_points:gdnative.PackedVector2Array, p_colors:gdnative.PackedColorArray, p_width:Float, p_antialiased:Bool):Void;
	overload function canvas_item_add_multiline(p_item:gdnative.RID, p_points:gdnative.PackedVector2Array, p_colors:gdnative.PackedColorArray, p_width:Float):Void;
	overload function canvas_item_add_multiline(p_item:gdnative.RID, p_points:gdnative.PackedVector2Array, p_colors:gdnative.PackedColorArray):Void;
	overload function canvas_item_add_rect(p_item:gdnative.RID, p_rect:gdnative.Rect2, p_color:gdnative.Color, p_antialiased:Bool):Void;
	overload function canvas_item_add_rect(p_item:gdnative.RID, p_rect:gdnative.Rect2, p_color:gdnative.Color):Void;
	overload function canvas_item_add_circle(p_item:gdnative.RID, p_pos:gdnative.Vector2, p_radius:Float, p_color:gdnative.Color, p_antialiased:Bool):Void;
	overload function canvas_item_add_circle(p_item:gdnative.RID, p_pos:gdnative.Vector2, p_radius:Float, p_color:gdnative.Color):Void;
	overload function canvas_item_add_texture_rect(p_item:gdnative.RID, p_rect:gdnative.Rect2, p_texture:gdnative.RID, p_tile:Bool, p_modulate:gdnative.Color, p_transpose:Bool):Void;
	overload function canvas_item_add_texture_rect(p_item:gdnative.RID, p_rect:gdnative.Rect2, p_texture:gdnative.RID, p_tile:Bool, p_modulate:gdnative.Color):Void;
	overload function canvas_item_add_texture_rect(p_item:gdnative.RID, p_rect:gdnative.Rect2, p_texture:gdnative.RID, p_tile:Bool):Void;
	overload function canvas_item_add_texture_rect(p_item:gdnative.RID, p_rect:gdnative.Rect2, p_texture:gdnative.RID):Void;
	overload function canvas_item_add_msdf_texture_rect_region(p_item:gdnative.RID, p_rect:gdnative.Rect2, p_texture:gdnative.RID, p_src_rect:gdnative.Rect2, p_modulate:gdnative.Color, p_outline_size:Int, p_px_range:Float, p_scale:Float):Void;
	overload function canvas_item_add_msdf_texture_rect_region(p_item:gdnative.RID, p_rect:gdnative.Rect2, p_texture:gdnative.RID, p_src_rect:gdnative.Rect2, p_modulate:gdnative.Color, p_outline_size:Int, p_px_range:Float):Void;
	overload function canvas_item_add_msdf_texture_rect_region(p_item:gdnative.RID, p_rect:gdnative.Rect2, p_texture:gdnative.RID, p_src_rect:gdnative.Rect2, p_modulate:gdnative.Color, p_outline_size:Int):Void;
	overload function canvas_item_add_msdf_texture_rect_region(p_item:gdnative.RID, p_rect:gdnative.Rect2, p_texture:gdnative.RID, p_src_rect:gdnative.Rect2, p_modulate:gdnative.Color):Void;
	overload function canvas_item_add_msdf_texture_rect_region(p_item:gdnative.RID, p_rect:gdnative.Rect2, p_texture:gdnative.RID, p_src_rect:gdnative.Rect2):Void;
	function canvas_item_add_lcd_texture_rect_region(p_item:gdnative.RID, p_rect:gdnative.Rect2, p_texture:gdnative.RID, p_src_rect:gdnative.Rect2, p_modulate:gdnative.Color):Void;
	overload function canvas_item_add_texture_rect_region(p_item:gdnative.RID, p_rect:gdnative.Rect2, p_texture:gdnative.RID, p_src_rect:gdnative.Rect2, p_modulate:gdnative.Color, p_transpose:Bool, p_clip_uv:Bool):Void;
	overload function canvas_item_add_texture_rect_region(p_item:gdnative.RID, p_rect:gdnative.Rect2, p_texture:gdnative.RID, p_src_rect:gdnative.Rect2, p_modulate:gdnative.Color, p_transpose:Bool):Void;
	overload function canvas_item_add_texture_rect_region(p_item:gdnative.RID, p_rect:gdnative.Rect2, p_texture:gdnative.RID, p_src_rect:gdnative.Rect2, p_modulate:gdnative.Color):Void;
	overload function canvas_item_add_texture_rect_region(p_item:gdnative.RID, p_rect:gdnative.Rect2, p_texture:gdnative.RID, p_src_rect:gdnative.Rect2):Void;
	overload function canvas_item_add_nine_patch(p_item:gdnative.RID, p_rect:gdnative.Rect2, p_source:gdnative.Rect2, p_texture:gdnative.RID, p_topleft:gdnative.Vector2, p_bottomright:gdnative.Vector2, p_x_axis_mode:gdnative.renderingserver.NinePatchAxisMode, p_y_axis_mode:gdnative.renderingserver.NinePatchAxisMode, p_draw_center:Bool, p_modulate:gdnative.Color):Void;
	overload function canvas_item_add_nine_patch(p_item:gdnative.RID, p_rect:gdnative.Rect2, p_source:gdnative.Rect2, p_texture:gdnative.RID, p_topleft:gdnative.Vector2, p_bottomright:gdnative.Vector2, p_x_axis_mode:gdnative.renderingserver.NinePatchAxisMode, p_y_axis_mode:gdnative.renderingserver.NinePatchAxisMode, p_draw_center:Bool):Void;
	overload function canvas_item_add_nine_patch(p_item:gdnative.RID, p_rect:gdnative.Rect2, p_source:gdnative.Rect2, p_texture:gdnative.RID, p_topleft:gdnative.Vector2, p_bottomright:gdnative.Vector2, p_x_axis_mode:gdnative.renderingserver.NinePatchAxisMode, p_y_axis_mode:gdnative.renderingserver.NinePatchAxisMode):Void;
	overload function canvas_item_add_nine_patch(p_item:gdnative.RID, p_rect:gdnative.Rect2, p_source:gdnative.Rect2, p_texture:gdnative.RID, p_topleft:gdnative.Vector2, p_bottomright:gdnative.Vector2, p_x_axis_mode:gdnative.renderingserver.NinePatchAxisMode):Void;
	overload function canvas_item_add_nine_patch(p_item:gdnative.RID, p_rect:gdnative.Rect2, p_source:gdnative.Rect2, p_texture:gdnative.RID, p_topleft:gdnative.Vector2, p_bottomright:gdnative.Vector2):Void;
	function canvas_item_add_primitive(p_item:gdnative.RID, p_points:gdnative.PackedVector2Array, p_colors:gdnative.PackedColorArray, p_uvs:gdnative.PackedVector2Array, p_texture:gdnative.RID):Void;
	overload function canvas_item_add_polygon(p_item:gdnative.RID, p_points:gdnative.PackedVector2Array, p_colors:gdnative.PackedColorArray, p_uvs:gdnative.PackedVector2Array, p_texture:gdnative.RID):Void;
	overload function canvas_item_add_polygon(p_item:gdnative.RID, p_points:gdnative.PackedVector2Array, p_colors:gdnative.PackedColorArray, p_uvs:gdnative.PackedVector2Array):Void;
	overload function canvas_item_add_polygon(p_item:gdnative.RID, p_points:gdnative.PackedVector2Array, p_colors:gdnative.PackedColorArray):Void;
	overload function canvas_item_add_triangle_array(p_item:gdnative.RID, p_indices:gdnative.PackedInt32Array, p_points:gdnative.PackedVector2Array, p_colors:gdnative.PackedColorArray, p_uvs:gdnative.PackedVector2Array, p_bones:gdnative.PackedInt32Array, p_weights:gdnative.PackedFloat32Array, p_texture:gdnative.RID, p_count:Int):Void;
	overload function canvas_item_add_triangle_array(p_item:gdnative.RID, p_indices:gdnative.PackedInt32Array, p_points:gdnative.PackedVector2Array, p_colors:gdnative.PackedColorArray, p_uvs:gdnative.PackedVector2Array, p_bones:gdnative.PackedInt32Array, p_weights:gdnative.PackedFloat32Array, p_texture:gdnative.RID):Void;
	overload function canvas_item_add_triangle_array(p_item:gdnative.RID, p_indices:gdnative.PackedInt32Array, p_points:gdnative.PackedVector2Array, p_colors:gdnative.PackedColorArray, p_uvs:gdnative.PackedVector2Array, p_bones:gdnative.PackedInt32Array, p_weights:gdnative.PackedFloat32Array):Void;
	overload function canvas_item_add_triangle_array(p_item:gdnative.RID, p_indices:gdnative.PackedInt32Array, p_points:gdnative.PackedVector2Array, p_colors:gdnative.PackedColorArray, p_uvs:gdnative.PackedVector2Array, p_bones:gdnative.PackedInt32Array):Void;
	overload function canvas_item_add_triangle_array(p_item:gdnative.RID, p_indices:gdnative.PackedInt32Array, p_points:gdnative.PackedVector2Array, p_colors:gdnative.PackedColorArray, p_uvs:gdnative.PackedVector2Array):Void;
	overload function canvas_item_add_triangle_array(p_item:gdnative.RID, p_indices:gdnative.PackedInt32Array, p_points:gdnative.PackedVector2Array, p_colors:gdnative.PackedColorArray):Void;
	overload function canvas_item_add_multimesh(p_item:gdnative.RID, p_mesh:gdnative.RID, p_texture:gdnative.RID):Void;
	overload function canvas_item_add_multimesh(p_item:gdnative.RID, p_mesh:gdnative.RID):Void;
	function canvas_item_add_particles(p_item:gdnative.RID, p_particles:gdnative.RID, p_texture:gdnative.RID):Void;
	function canvas_item_add_clip_ignore(p_item:gdnative.RID, p_ignore:Bool):Void;
	overload function canvas_item_add_animation_slice(p_item:gdnative.RID, p_animation_length:Float, p_slice_begin:Float, p_slice_end:Float, p_offset:Float):Void;
	overload function canvas_item_add_animation_slice(p_item:gdnative.RID, p_animation_length:Float, p_slice_begin:Float, p_slice_end:Float):Void;
	function canvas_item_set_sort_children_by_y(p_item:gdnative.RID, p_enabled:Bool):Void;
	function canvas_item_set_z_index(p_item:gdnative.RID, p_z_index:Int):Void;
	function canvas_item_set_z_as_relative_to_parent(p_item:gdnative.RID, p_enabled:Bool):Void;
	function canvas_item_set_copy_to_backbuffer(p_item:gdnative.RID, p_enabled:Bool, p_rect:gdnative.Rect2):Void;
	function canvas_item_clear(p_item:gdnative.RID):Void;
	function canvas_item_set_draw_index(p_item:gdnative.RID, p_index:Int):Void;
	function canvas_item_set_material(p_item:gdnative.RID, p_material:gdnative.RID):Void;
	function canvas_item_set_use_parent_material(p_item:gdnative.RID, p_enabled:Bool):Void;
	function canvas_item_set_visibility_notifier(p_item:gdnative.RID, p_enable:Bool, p_area:gdnative.Rect2, p_enter_callable:gdnative.Callable, p_exit_callable:gdnative.Callable):Void;
	overload function canvas_item_set_canvas_group_mode(p_item:gdnative.RID, p_mode:gdnative.renderingserver.CanvasGroupMode, p_clear_margin:Float, p_fit_empty:Bool, p_fit_margin:Float, p_blur_mipmaps:Bool):Void;
	overload function canvas_item_set_canvas_group_mode(p_item:gdnative.RID, p_mode:gdnative.renderingserver.CanvasGroupMode, p_clear_margin:Float, p_fit_empty:Bool, p_fit_margin:Float):Void;
	overload function canvas_item_set_canvas_group_mode(p_item:gdnative.RID, p_mode:gdnative.renderingserver.CanvasGroupMode, p_clear_margin:Float, p_fit_empty:Bool):Void;
	overload function canvas_item_set_canvas_group_mode(p_item:gdnative.RID, p_mode:gdnative.renderingserver.CanvasGroupMode, p_clear_margin:Float):Void;
	overload function canvas_item_set_canvas_group_mode(p_item:gdnative.RID, p_mode:gdnative.renderingserver.CanvasGroupMode):Void;
	function debug_canvas_item_get_rect(p_item:gdnative.RID):gdnative.Rect2;
	function canvas_light_create():gdnative.RID;
	function canvas_light_attach_to_canvas(p_light:gdnative.RID, p_canvas:gdnative.RID):Void;
	function canvas_light_set_enabled(p_light:gdnative.RID, p_enabled:Bool):Void;
	function canvas_light_set_texture_scale(p_light:gdnative.RID, p_scale:Float):Void;
	function canvas_light_set_texture(p_light:gdnative.RID, p_texture:gdnative.RID):Void;
	function canvas_light_set_texture_offset(p_light:gdnative.RID, p_offset:gdnative.Vector2):Void;
	function canvas_light_set_color(p_light:gdnative.RID, p_color:gdnative.Color):Void;
	function canvas_light_set_height(p_light:gdnative.RID, p_height:Float):Void;
	function canvas_light_set_energy(p_light:gdnative.RID, p_energy:Float):Void;
	function canvas_light_set_z_range(p_light:gdnative.RID, p_min_z:Int, p_max_z:Int):Void;
	function canvas_light_set_layer_range(p_light:gdnative.RID, p_min_layer:Int, p_max_layer:Int):Void;
	function canvas_light_set_item_cull_mask(p_light:gdnative.RID, p_mask:Int):Void;
	function canvas_light_set_item_shadow_cull_mask(p_light:gdnative.RID, p_mask:Int):Void;
	function canvas_light_set_mode(p_light:gdnative.RID, p_mode:gdnative.renderingserver.CanvasLightMode):Void;
	function canvas_light_set_shadow_enabled(p_light:gdnative.RID, p_enabled:Bool):Void;
	function canvas_light_set_shadow_filter(p_light:gdnative.RID, p_filter:gdnative.renderingserver.CanvasLightShadowFilter):Void;
	function canvas_light_set_shadow_color(p_light:gdnative.RID, p_color:gdnative.Color):Void;
	function canvas_light_set_shadow_smooth(p_light:gdnative.RID, p_smooth:Float):Void;
	function canvas_light_set_blend_mode(p_light:gdnative.RID, p_mode:gdnative.renderingserver.CanvasLightBlendMode):Void;
	function canvas_light_set_interpolated(p_light:gdnative.RID, p_interpolated:Bool):Void;
	function canvas_light_reset_physics_interpolation(p_light:gdnative.RID):Void;
	function canvas_light_occluder_create():gdnative.RID;
	function canvas_light_occluder_attach_to_canvas(p_occluder:gdnative.RID, p_canvas:gdnative.RID):Void;
	function canvas_light_occluder_set_enabled(p_occluder:gdnative.RID, p_enabled:Bool):Void;
	function canvas_light_occluder_set_polygon(p_occluder:gdnative.RID, p_polygon:gdnative.RID):Void;
	function canvas_light_occluder_set_as_sdf_collision(p_occluder:gdnative.RID, p_enable:Bool):Void;
	function canvas_light_occluder_set_light_mask(p_occluder:gdnative.RID, p_mask:Int):Void;
	function canvas_light_occluder_set_interpolated(p_occluder:gdnative.RID, p_interpolated:Bool):Void;
	function canvas_light_occluder_reset_physics_interpolation(p_occluder:gdnative.RID):Void;
	function canvas_occluder_polygon_create():gdnative.RID;
	function canvas_occluder_polygon_set_shape(p_occluder_polygon:gdnative.RID, p_shape:gdnative.PackedVector2Array, p_closed:Bool):Void;
	function canvas_occluder_polygon_set_cull_mode(p_occluder_polygon:gdnative.RID, p_mode:gdnative.renderingserver.CanvasOccluderPolygonCullMode):Void;
	function canvas_set_shadow_texture_size(p_size:Int):Void;
	function global_shader_parameter_add(p_name:gdnative.StringName, p_type:gdnative.renderingserver.GlobalShaderParameterType, p_default_value:gdnative.Variant):Void;
	function global_shader_parameter_remove(p_name:gdnative.StringName):Void;
	function global_shader_parameter_set(p_name:gdnative.StringName, p_value:gdnative.Variant):Void;
	function global_shader_parameter_set_override(p_name:gdnative.StringName, p_value:gdnative.Variant):Void;
	function global_shader_parameter_get(p_name:gdnative.StringName):gdnative.Variant;
	function global_shader_parameter_get_type(p_name:gdnative.StringName):gdnative.renderingserver.GlobalShaderParameterType;
	function free_rid(p_rid:gdnative.RID):Void;
	function request_frame_drawn_callback(p_callable:gdnative.Callable):Void;
	function has_changed():Bool;
	function get_rendering_info(p_info:gdnative.renderingserver.RenderingInfo):Int;
	function get_video_adapter_name():gdnative.String;
	function get_video_adapter_vendor():gdnative.String;
	function get_video_adapter_type():gdnative.renderingdevice.DeviceType;
	function get_video_adapter_api_version():gdnative.String;
	function make_sphere_mesh(p_latitudes:Int, p_longitudes:Int, p_radius:Float):gdnative.RID;
	function get_test_cube():gdnative.RID;
	function get_test_texture():gdnative.RID;
	function get_white_texture():gdnative.RID;
	overload function set_boot_image(p_image:gdnative.Image, p_color:gdnative.Color, p_scale:Bool, p_use_filter:Bool):Void;
	overload function set_boot_image(p_image:gdnative.Image, p_color:gdnative.Color, p_scale:Bool):Void;
	function get_default_clear_color():gdnative.Color;
	function set_default_clear_color(p_color:gdnative.Color):Void;
	function has_os_feature(p_feature:gdnative.String):Bool;
	function set_debug_generate_wireframes(p_generate:Bool):Void;
	function is_render_loop_enabled():Bool;
	function set_render_loop_enabled(p_enabled:Bool):Void;
	function get_frame_setup_time_cpu():Float;
	function force_sync():Void;
	overload function force_draw(p_swap_buffers:Bool, p_frame_step:Float):Void;
	overload function force_draw(p_swap_buffers:Bool):Void;
	overload function force_draw():Void;
	function get_rendering_device():gdnative.RenderingDevice;
	function create_local_rendering_device():gdnative.RenderingDevice;
	function is_on_render_thread():Bool;
	function call_on_render_thread(p_callable:gdnative.Callable):Void;
	function has_feature(p_feature:gdnative.renderingserver.Features):Bool;
}
@:forward abstract RenderingServer(cpp.Pointer<RenderingServer_extern>) from cpp.Pointer<RenderingServer_extern> to cpp.Pointer<RenderingServer_extern> {
	@:from
	static inline function fromWrapper(v:gd.RenderingServer):gdnative.RenderingServer return @:privateAccess v.__gd.reinterpret();
	@:to
	inline function toWrapper():gd.RenderingServer {
		final v = new gd.RenderingServer(this);
		return v;
	}
}