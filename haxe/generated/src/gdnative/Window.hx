package gdnative;
/**
	Class
**/
@:forward abstract Window(cpp.Pointer<Window_extern>) from cpp.Pointer<Window_extern> to cpp.Pointer<Window_extern> {
	@:from
	static inline function fromWrapper(v:gd.Window):gdnative.Window return @:privateAccess v.__gd.reinterpret();
	@:to
	inline function toWrapper():gd.Window return new gd.Window(this);
}
@:include("godot_cpp/classes/window.hpp") @:native("godot::Window") @:structAccess extern class Window_extern extends gdnative.Viewport.Viewport_extern {
	extern static inline function __alloc():cpp.Pointer<Window_extern> return gdnative.Memory.Memory_extern.memnew(untyped __cpp__("godot::Window"));
	function _get_contents_minimum_size():gdnative.Vector2;
	function set_title(p_title:gdnative.String):Void;
	function get_title():gdnative.String;
	function get_window_id():Int;
	function set_initial_position(p_initial_position:gdnative.window.WindowInitialPosition):Void;
	function get_initial_position():gdnative.window.WindowInitialPosition;
	function set_current_screen(p_index:Int):Void;
	function get_current_screen():Int;
	function set_position(p_position:gdnative.Vector2i):Void;
	function get_position():gdnative.Vector2i;
	function move_to_center():Void;
	function set_size(p_size:gdnative.Vector2i):Void;
	function get_size():gdnative.Vector2i;
	function reset_size():Void;
	function get_position_with_decorations():gdnative.Vector2i;
	function get_size_with_decorations():gdnative.Vector2i;
	function set_max_size(p_max_size:gdnative.Vector2i):Void;
	function get_max_size():gdnative.Vector2i;
	function set_min_size(p_min_size:gdnative.Vector2i):Void;
	function get_min_size():gdnative.Vector2i;
	function set_mode(p_mode:gdnative.window.Mode):Void;
	function get_mode():gdnative.window.Mode;
	function set_flag(p_flag:gdnative.window.Flags, p_enabled:Bool):Void;
	function get_flag(p_flag:gdnative.window.Flags):Bool;
	function is_maximize_allowed():Bool;
	function request_attention():Void;
	function move_to_foreground():Void;
	function set_visible(p_visible:Bool):Void;
	function is_visible():Bool;
	function hide():Void;
	function show():Void;
	function set_transient(p_transient:Bool):Void;
	function is_transient():Bool;
	function set_transient_to_focused(p_enable:Bool):Void;
	function is_transient_to_focused():Bool;
	function set_exclusive(p_exclusive:Bool):Void;
	function is_exclusive():Bool;
	function set_unparent_when_invisible(p_unparent:Bool):Void;
	function can_draw():Bool;
	function has_focus():Bool;
	function grab_focus():Void;
	function set_ime_active(p_active:Bool):Void;
	function set_ime_position(p_position:gdnative.Vector2i):Void;
	function is_embedded():Bool;
	function get_contents_minimum_size():gdnative.Vector2;
	function set_force_native(p_force_native:Bool):Void;
	function get_force_native():Bool;
	function set_content_scale_size(p_size:gdnative.Vector2i):Void;
	function get_content_scale_size():gdnative.Vector2i;
	function set_content_scale_mode(p_mode:gdnative.window.ContentScaleMode):Void;
	function get_content_scale_mode():gdnative.window.ContentScaleMode;
	function set_content_scale_aspect(p_aspect:gdnative.window.ContentScaleAspect):Void;
	function get_content_scale_aspect():gdnative.window.ContentScaleAspect;
	function set_content_scale_stretch(p_stretch:gdnative.window.ContentScaleStretch):Void;
	function get_content_scale_stretch():gdnative.window.ContentScaleStretch;
	function set_keep_title_visible(p_title_visible:Bool):Void;
	function get_keep_title_visible():Bool;
	function set_content_scale_factor(p_factor:Float):Void;
	function get_content_scale_factor():Float;
	function set_use_font_oversampling(p_enable:Bool):Void;
	function is_using_font_oversampling():Bool;
	function set_mouse_passthrough_polygon(p_polygon:gdnative.PackedVector2Array):Void;
	function get_mouse_passthrough_polygon():gdnative.PackedVector2Array;
	function set_wrap_controls(p_enable:Bool):Void;
	function is_wrapping_controls():Bool;
	function child_controls_changed():Void;
	function set_theme(p_theme:gdnative.Theme):Void;
	function get_theme():gdnative.Theme;
	function set_theme_type_variation(p_theme_type:gdnative.StringName):Void;
	function get_theme_type_variation():gdnative.StringName;
	function begin_bulk_theme_override():Void;
	function end_bulk_theme_override():Void;
	function add_theme_icon_override(p_name:gdnative.StringName, p_texture:gdnative.Texture2D):Void;
	function add_theme_stylebox_override(p_name:gdnative.StringName, p_stylebox:gdnative.StyleBox):Void;
	function add_theme_font_override(p_name:gdnative.StringName, p_font:gdnative.Font):Void;
	function add_theme_font_size_override(p_name:gdnative.StringName, p_font_size:Int):Void;
	function add_theme_color_override(p_name:gdnative.StringName, p_color:gdnative.Color):Void;
	function add_theme_constant_override(p_name:gdnative.StringName, p_constant:Int):Void;
	function remove_theme_icon_override(p_name:gdnative.StringName):Void;
	function remove_theme_stylebox_override(p_name:gdnative.StringName):Void;
	function remove_theme_font_override(p_name:gdnative.StringName):Void;
	function remove_theme_font_size_override(p_name:gdnative.StringName):Void;
	function remove_theme_color_override(p_name:gdnative.StringName):Void;
	function remove_theme_constant_override(p_name:gdnative.StringName):Void;
	overload function get_theme_icon(p_name:gdnative.StringName):gdnative.Texture2D;
	overload function get_theme_icon(p_name:gdnative.StringName, p_theme_type:gdnative.StringName):gdnative.Texture2D;
	overload function get_theme_stylebox(p_name:gdnative.StringName):gdnative.StyleBox;
	overload function get_theme_stylebox(p_name:gdnative.StringName, p_theme_type:gdnative.StringName):gdnative.StyleBox;
	overload function get_theme_font(p_name:gdnative.StringName):gdnative.Font;
	overload function get_theme_font(p_name:gdnative.StringName, p_theme_type:gdnative.StringName):gdnative.Font;
	overload function get_theme_font_size(p_name:gdnative.StringName):Int;
	overload function get_theme_font_size(p_name:gdnative.StringName, p_theme_type:gdnative.StringName):Int;
	overload function get_theme_color(p_name:gdnative.StringName):gdnative.Color;
	overload function get_theme_color(p_name:gdnative.StringName, p_theme_type:gdnative.StringName):gdnative.Color;
	overload function get_theme_constant(p_name:gdnative.StringName):Int;
	overload function get_theme_constant(p_name:gdnative.StringName, p_theme_type:gdnative.StringName):Int;
	function has_theme_icon_override(p_name:gdnative.StringName):Bool;
	function has_theme_stylebox_override(p_name:gdnative.StringName):Bool;
	function has_theme_font_override(p_name:gdnative.StringName):Bool;
	function has_theme_font_size_override(p_name:gdnative.StringName):Bool;
	function has_theme_color_override(p_name:gdnative.StringName):Bool;
	function has_theme_constant_override(p_name:gdnative.StringName):Bool;
	overload function has_theme_icon(p_name:gdnative.StringName):Bool;
	overload function has_theme_icon(p_name:gdnative.StringName, p_theme_type:gdnative.StringName):Bool;
	overload function has_theme_stylebox(p_name:gdnative.StringName):Bool;
	overload function has_theme_stylebox(p_name:gdnative.StringName, p_theme_type:gdnative.StringName):Bool;
	overload function has_theme_font(p_name:gdnative.StringName):Bool;
	overload function has_theme_font(p_name:gdnative.StringName, p_theme_type:gdnative.StringName):Bool;
	overload function has_theme_font_size(p_name:gdnative.StringName):Bool;
	overload function has_theme_font_size(p_name:gdnative.StringName, p_theme_type:gdnative.StringName):Bool;
	overload function has_theme_color(p_name:gdnative.StringName):Bool;
	overload function has_theme_color(p_name:gdnative.StringName, p_theme_type:gdnative.StringName):Bool;
	overload function has_theme_constant(p_name:gdnative.StringName):Bool;
	overload function has_theme_constant(p_name:gdnative.StringName, p_theme_type:gdnative.StringName):Bool;
	function get_theme_default_base_scale():Float;
	function get_theme_default_font():gdnative.Font;
	function get_theme_default_font_size():Int;
	function set_layout_direction(p_direction:gdnative.window.LayoutDirection):Void;
	function get_layout_direction():gdnative.window.LayoutDirection;
	function is_layout_rtl():Bool;
	function set_auto_translate(p_enable:Bool):Void;
	function is_auto_translating():Bool;
	overload function popup():Void;
	overload function popup(p_rect:gdnative.Rect2i):Void;
	function popup_on_parent(p_parent_rect:gdnative.Rect2i):Void;
	overload function popup_centered():Void;
	overload function popup_centered(p_minsize:gdnative.Vector2i):Void;
	overload function popup_centered_ratio():Void;
	overload function popup_centered_ratio(p_ratio:Float):Void;
	overload function popup_centered_clamped():Void;
	overload function popup_centered_clamped(p_minsize:gdnative.Vector2i):Void;
	overload function popup_centered_clamped(p_minsize:gdnative.Vector2i, p_fallback_ratio:Float):Void;
	overload function popup_exclusive(p_from_node:gdnative.Node):Void;
	overload function popup_exclusive(p_from_node:gdnative.Node, p_rect:gdnative.Rect2i):Void;
	function popup_exclusive_on_parent(p_from_node:gdnative.Node, p_parent_rect:gdnative.Rect2i):Void;
	overload function popup_exclusive_centered(p_from_node:gdnative.Node):Void;
	overload function popup_exclusive_centered(p_from_node:gdnative.Node, p_minsize:gdnative.Vector2i):Void;
	overload function popup_exclusive_centered_ratio(p_from_node:gdnative.Node):Void;
	overload function popup_exclusive_centered_ratio(p_from_node:gdnative.Node, p_ratio:Float):Void;
	overload function popup_exclusive_centered_clamped(p_from_node:gdnative.Node):Void;
	overload function popup_exclusive_centered_clamped(p_from_node:gdnative.Node, p_minsize:gdnative.Vector2i):Void;
	overload function popup_exclusive_centered_clamped(p_from_node:gdnative.Node, p_minsize:gdnative.Vector2i, p_fallback_ratio:Float):Void;
}