package gdnative;
@:include("godot_cpp/classes/base_material3d.hpp") @:native("godot::BaseMaterial3D") @:structAccess extern class BaseMaterial3D_extern extends gdnative.Material.Material_extern {
	extern static inline function __alloc():cpp.Pointer<BaseMaterial3D_extern> return gdnative.Memory.Memory_extern.memnew(untyped __cpp__("godot::BaseMaterial3D"));
	function set_albedo(p_albedo:gdnative.Color):Void;
	function get_albedo():gdnative.Color;
	function set_transparency(p_transparency:gdnative.basematerial3d.Transparency):Void;
	function get_transparency():gdnative.basematerial3d.Transparency;
	function set_alpha_antialiasing(p_alpha_aa:gdnative.basematerial3d.AlphaAntiAliasing):Void;
	function get_alpha_antialiasing():gdnative.basematerial3d.AlphaAntiAliasing;
	function set_alpha_antialiasing_edge(p_edge:Float):Void;
	function get_alpha_antialiasing_edge():Float;
	function set_shading_mode(p_shading_mode:gdnative.basematerial3d.ShadingMode):Void;
	function get_shading_mode():gdnative.basematerial3d.ShadingMode;
	function set_specular(p_specular:Float):Void;
	function get_specular():Float;
	function set_metallic(p_metallic:Float):Void;
	function get_metallic():Float;
	function set_roughness(p_roughness:Float):Void;
	function get_roughness():Float;
	function set_emission(p_emission:gdnative.Color):Void;
	function get_emission():gdnative.Color;
	function set_emission_energy_multiplier(p_emission_energy_multiplier:Float):Void;
	function get_emission_energy_multiplier():Float;
	function set_emission_intensity(p_emission_energy_multiplier:Float):Void;
	function get_emission_intensity():Float;
	function set_normal_scale(p_normal_scale:Float):Void;
	function get_normal_scale():Float;
	function set_rim(p_rim:Float):Void;
	function get_rim():Float;
	function set_rim_tint(p_rim_tint:Float):Void;
	function get_rim_tint():Float;
	function set_clearcoat(p_clearcoat:Float):Void;
	function get_clearcoat():Float;
	function set_clearcoat_roughness(p_clearcoat_roughness:Float):Void;
	function get_clearcoat_roughness():Float;
	function set_anisotropy(p_anisotropy:Float):Void;
	function get_anisotropy():Float;
	function set_heightmap_scale(p_heightmap_scale:Float):Void;
	function get_heightmap_scale():Float;
	function set_subsurface_scattering_strength(p_strength:Float):Void;
	function get_subsurface_scattering_strength():Float;
	function set_transmittance_color(p_color:gdnative.Color):Void;
	function get_transmittance_color():gdnative.Color;
	function set_transmittance_depth(p_depth:Float):Void;
	function get_transmittance_depth():Float;
	function set_transmittance_boost(p_boost:Float):Void;
	function get_transmittance_boost():Float;
	function set_backlight(p_backlight:gdnative.Color):Void;
	function get_backlight():gdnative.Color;
	function set_refraction(p_refraction:Float):Void;
	function get_refraction():Float;
	function set_point_size(p_point_size:Float):Void;
	function get_point_size():Float;
	function set_detail_uv(p_detail_uv:gdnative.basematerial3d.DetailUV):Void;
	function get_detail_uv():gdnative.basematerial3d.DetailUV;
	function set_blend_mode(p_blend_mode:gdnative.basematerial3d.BlendMode):Void;
	function get_blend_mode():gdnative.basematerial3d.BlendMode;
	function set_depth_draw_mode(p_depth_draw_mode:gdnative.basematerial3d.DepthDrawMode):Void;
	function get_depth_draw_mode():gdnative.basematerial3d.DepthDrawMode;
	function set_cull_mode(p_cull_mode:gdnative.basematerial3d.CullMode):Void;
	function get_cull_mode():gdnative.basematerial3d.CullMode;
	function set_diffuse_mode(p_diffuse_mode:gdnative.basematerial3d.DiffuseMode):Void;
	function get_diffuse_mode():gdnative.basematerial3d.DiffuseMode;
	function set_specular_mode(p_specular_mode:gdnative.basematerial3d.SpecularMode):Void;
	function get_specular_mode():gdnative.basematerial3d.SpecularMode;
	function set_flag(p_flag:gdnative.basematerial3d.Flags, p_enable:Bool):Void;
	function get_flag(p_flag:gdnative.basematerial3d.Flags):Bool;
	function set_texture_filter(p_mode:gdnative.basematerial3d.TextureFilter):Void;
	function get_texture_filter():gdnative.basematerial3d.TextureFilter;
	function set_feature(p_feature:gdnative.basematerial3d.Feature, p_enable:Bool):Void;
	function get_feature(p_feature:gdnative.basematerial3d.Feature):Bool;
	function set_texture(p_param:gdnative.basematerial3d.TextureParam, p_texture:gdnative.Texture2D):Void;
	function get_texture(p_param:gdnative.basematerial3d.TextureParam):gdnative.Texture2D;
	function set_detail_blend_mode(p_detail_blend_mode:gdnative.basematerial3d.BlendMode):Void;
	function get_detail_blend_mode():gdnative.basematerial3d.BlendMode;
	function set_uv1_scale(p_scale:gdnative.Vector3):Void;
	function get_uv1_scale():gdnative.Vector3;
	function set_uv1_offset(p_offset:gdnative.Vector3):Void;
	function get_uv1_offset():gdnative.Vector3;
	function set_uv1_triplanar_blend_sharpness(p_sharpness:Float):Void;
	function get_uv1_triplanar_blend_sharpness():Float;
	function set_uv2_scale(p_scale:gdnative.Vector3):Void;
	function get_uv2_scale():gdnative.Vector3;
	function set_uv2_offset(p_offset:gdnative.Vector3):Void;
	function get_uv2_offset():gdnative.Vector3;
	function set_uv2_triplanar_blend_sharpness(p_sharpness:Float):Void;
	function get_uv2_triplanar_blend_sharpness():Float;
	function set_billboard_mode(p_mode:gdnative.basematerial3d.BillboardMode):Void;
	function get_billboard_mode():gdnative.basematerial3d.BillboardMode;
	function set_particles_anim_h_frames(p_frames:Int):Void;
	function get_particles_anim_h_frames():Int;
	function set_particles_anim_v_frames(p_frames:Int):Void;
	function get_particles_anim_v_frames():Int;
	function set_particles_anim_loop(p_loop:Bool):Void;
	function get_particles_anim_loop():Bool;
	function set_heightmap_deep_parallax(p_enable:Bool):Void;
	function is_heightmap_deep_parallax_enabled():Bool;
	function set_heightmap_deep_parallax_min_layers(p_layer:Int):Void;
	function get_heightmap_deep_parallax_min_layers():Int;
	function set_heightmap_deep_parallax_max_layers(p_layer:Int):Void;
	function get_heightmap_deep_parallax_max_layers():Int;
	function set_heightmap_deep_parallax_flip_tangent(p_flip:Bool):Void;
	function get_heightmap_deep_parallax_flip_tangent():Bool;
	function set_heightmap_deep_parallax_flip_binormal(p_flip:Bool):Void;
	function get_heightmap_deep_parallax_flip_binormal():Bool;
	function set_grow(p_amount:Float):Void;
	function get_grow():Float;
	function set_emission_operator(p_operator:gdnative.basematerial3d.EmissionOperator):Void;
	function get_emission_operator():gdnative.basematerial3d.EmissionOperator;
	function set_ao_light_affect(p_amount:Float):Void;
	function get_ao_light_affect():Float;
	function set_alpha_scissor_threshold(p_threshold:Float):Void;
	function get_alpha_scissor_threshold():Float;
	function set_alpha_hash_scale(p_threshold:Float):Void;
	function get_alpha_hash_scale():Float;
	function set_grow_enabled(p_enable:Bool):Void;
	function is_grow_enabled():Bool;
	function set_metallic_texture_channel(p_channel:gdnative.basematerial3d.TextureChannel):Void;
	function get_metallic_texture_channel():gdnative.basematerial3d.TextureChannel;
	function set_roughness_texture_channel(p_channel:gdnative.basematerial3d.TextureChannel):Void;
	function get_roughness_texture_channel():gdnative.basematerial3d.TextureChannel;
	function set_ao_texture_channel(p_channel:gdnative.basematerial3d.TextureChannel):Void;
	function get_ao_texture_channel():gdnative.basematerial3d.TextureChannel;
	function set_refraction_texture_channel(p_channel:gdnative.basematerial3d.TextureChannel):Void;
	function get_refraction_texture_channel():gdnative.basematerial3d.TextureChannel;
	function set_proximity_fade_enabled(p_enabled:Bool):Void;
	function is_proximity_fade_enabled():Bool;
	function set_proximity_fade_distance(p_distance:Float):Void;
	function get_proximity_fade_distance():Float;
	function set_msdf_pixel_range(p_range:Float):Void;
	function get_msdf_pixel_range():Float;
	function set_msdf_outline_size(p_size:Float):Void;
	function get_msdf_outline_size():Float;
	function set_distance_fade(p_mode:gdnative.basematerial3d.DistanceFadeMode):Void;
	function get_distance_fade():gdnative.basematerial3d.DistanceFadeMode;
	function set_distance_fade_max_distance(p_distance:Float):Void;
	function get_distance_fade_max_distance():Float;
	function set_distance_fade_min_distance(p_distance:Float):Void;
	function get_distance_fade_min_distance():Float;
}
@:forward abstract BaseMaterial3D(gdnative.Ref<BaseMaterial3D_extern>) from gdnative.Ref<BaseMaterial3D_extern> to gdnative.Ref<BaseMaterial3D_extern> {
	@:from
	static inline function fromWrapper(v:gd.BaseMaterial3D):gdnative.BaseMaterial3D return @:privateAccess v.__ref.ptr().reinterpret();
	@:to
	inline function toWrapper():gd.BaseMaterial3D {
		final v = new gd.BaseMaterial3D(this.ptr());
		v.__ref = new gdnative.Ref.Ref_extern(untyped __cpp__('{0}.get()', this));
		return v;
	}
}