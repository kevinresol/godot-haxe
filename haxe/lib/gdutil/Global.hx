package gdutil;

@:build(gdutil.Macro.buildGlobal()) @:forwardMethods([
	gd.ResourceLoader.singleton.load,
	gd.UtilityFunctions.abs,
	gd.UtilityFunctions.absf,
	gd.UtilityFunctions.absi,
	gd.UtilityFunctions.acos,
	gd.UtilityFunctions.acosh,
	gd.UtilityFunctions.angle_difference,
	gd.UtilityFunctions.asin,
	gd.UtilityFunctions.asinh,
	gd.UtilityFunctions.atan,
	gd.UtilityFunctions.atan2,
	gd.UtilityFunctions.atanh,
	gd.UtilityFunctions.bezier_derivative,
	gd.UtilityFunctions.bezier_interpolate,
	gd.UtilityFunctions.bytes_to_var_with_objects,
	gd.UtilityFunctions.bytes_to_var,
	gd.UtilityFunctions.ceil,
	gd.UtilityFunctions.ceilf,
	gd.UtilityFunctions.ceili,
	gd.UtilityFunctions.clamp,
	gd.UtilityFunctions.clampf,
	gd.UtilityFunctions.clampi,
	gd.UtilityFunctions.cos,
	gd.UtilityFunctions.cosh,
	gd.UtilityFunctions.cubic_interpolate_angle_in_time,
	gd.UtilityFunctions.cubic_interpolate_angle,
	gd.UtilityFunctions.cubic_interpolate_in_time,
	gd.UtilityFunctions.cubic_interpolate,
	gd.UtilityFunctions.db_to_linear,
	gd.UtilityFunctions.deg_to_rad,
	gd.UtilityFunctions.ease,
	gd.UtilityFunctions.error_string,
	gd.UtilityFunctions.exp,
	gd.UtilityFunctions.floor,
	gd.UtilityFunctions.floorf,
	gd.UtilityFunctions.floori,
	gd.UtilityFunctions.fmod,
	gd.UtilityFunctions.fposmod,
	gd.UtilityFunctions.hash,
	gd.UtilityFunctions.instance_from_id,
	gd.UtilityFunctions.inverse_lerp,
	gd.UtilityFunctions.is_equal_approx,
	gd.UtilityFunctions.is_finite,
	gd.UtilityFunctions.is_inf,
	gd.UtilityFunctions.is_instance_id_valid,
	gd.UtilityFunctions.is_instance_valid,
	gd.UtilityFunctions.is_nan,
	gd.UtilityFunctions.is_same,
	gd.UtilityFunctions.is_zero_approx,
	gd.UtilityFunctions.lerp_angle,
	gd.UtilityFunctions.lerp,
	gd.UtilityFunctions.lerpf,
	gd.UtilityFunctions.linear_to_db,
	gd.UtilityFunctions.log,
	gd.UtilityFunctions.max,
	gd.UtilityFunctions.maxf,
	gd.UtilityFunctions.maxi,
	gd.UtilityFunctions.min,
	gd.UtilityFunctions.minf,
	gd.UtilityFunctions.mini,
	gd.UtilityFunctions.move_toward,
	gd.UtilityFunctions.nearest_po2,
	gd.UtilityFunctions.pingpong,
	gd.UtilityFunctions.posmod,
	gd.UtilityFunctions.pow,
	gd.UtilityFunctions.print_rich,
	gd.UtilityFunctions.print_verbose,
	gd.UtilityFunctions.print,
	gd.UtilityFunctions.printerr,
	gd.UtilityFunctions.printraw,
	gd.UtilityFunctions.prints,
	gd.UtilityFunctions.printt,
	gd.UtilityFunctions.push_error,
	gd.UtilityFunctions.push_warning,
	gd.UtilityFunctions.rad_to_deg,
	gd.UtilityFunctions.rand_from_seed,
	gd.UtilityFunctions.randf_range,
	gd.UtilityFunctions.randf,
	gd.UtilityFunctions.randfn,
	gd.UtilityFunctions.randi_range,
	gd.UtilityFunctions.randi,
	gd.UtilityFunctions.randomize,
	gd.UtilityFunctions.remap,
	gd.UtilityFunctions.rid_allocate_id,
	gd.UtilityFunctions.rid_from_int64,
	gd.UtilityFunctions.rotate_toward,
	gd.UtilityFunctions.round,
	gd.UtilityFunctions.roundf,
	gd.UtilityFunctions.roundi,
	gd.UtilityFunctions.seed,
	gd.UtilityFunctions.sign,
	gd.UtilityFunctions.signf,
	gd.UtilityFunctions.signi,
	gd.UtilityFunctions.sin,
	gd.UtilityFunctions.sinh,
	gd.UtilityFunctions.smoothstep,
	gd.UtilityFunctions.snapped,
	gd.UtilityFunctions.snappedf,
	gd.UtilityFunctions.snappedi,
	gd.UtilityFunctions.sqrt,
	gd.UtilityFunctions.step_decimals,
	gd.UtilityFunctions.str_to_var,
	gd.UtilityFunctions.str,
	gd.UtilityFunctions.tan,
	gd.UtilityFunctions.tanh,
	gd.UtilityFunctions.type_convert,
	gd.UtilityFunctions.type_string,
	gd.UtilityFunctions.typeof,
	gd.UtilityFunctions.var_to_bytes_with_objects,
	gd.UtilityFunctions.var_to_bytes,
	gd.UtilityFunctions.var_to_str,
	gd.UtilityFunctions.weakref,
	gd.UtilityFunctions.wrap,
	gd.UtilityFunctions.wrapf,
	gd.UtilityFunctions.wrapi,
])
class Global {}
